{
  "swagger": "2.0",
  "info": {
    "title": "Foreman (params in:formData)",
    "description": "\n<p>Satellite API v2 is currently the default API version.</p>\n",
    "version": "v2",
    "x-copyright": ""
  },
  "basePath": "/api",
  "consumes": [
    "application/x-www-form-urlencoded",
    "multipart/form-data"
  ],
  "paths": {
    "/hosts/{host_id}/subscriptions": {
      "get": {
        "tags": [
          "host_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_subscriptions",
        "summary": "List a host's subscriptions",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "host_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_hosts_host_id_subscriptions",
        "summary": "Unregister the host as a subscription consumer",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/subscriptions/auto_attach": {
      "put": {
        "tags": [
          "host_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_subscriptions_auto_attach",
        "summary": "Trigger an auto-attach of subscriptions",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/subscriptions/events": {
      "get": {
        "tags": [
          "host_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_subscriptions_events",
        "summary": "List subscription events for the host",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/subscriptions": {
      "post": {
        "tags": [
          "host_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts_subscriptions",
        "summary": "Register a host with subscription and information",
        "parameters": [
          {
            "name": "content_view_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Content View ID"
          },
          {
            "name": "lifecycle_environment_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Lifecycle Environment ID"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Name of the host"
          },
          {
            "name": "uuid",
            "type": "string",
            "in": "formData",
            "description": "UUID to use for registered host, random uuid is generated if not provided"
          },
          {
            "name": "hypervisor_guest_uuids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "UUIDs of the virtual guests from the host's hypervisor"
          },
          {
            "name": "installed_products",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of products installed on the host"
          },
          {
            "name": "release_version",
            "type": "string",
            "in": "formData",
            "description": "Release version of the content host"
          },
          {
            "name": "service_level",
            "type": "string",
            "in": "formData",
            "description": "A service level for auto-healing process, e.g. SELF-SUPPORT"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/subscriptions/remove_subscriptions": {
      "put": {
        "tags": [
          "host_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_subscriptions_remove_subscriptions",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the host"
          },
          {
            "name": "subscriptions",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of subscriptions to remove"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/subscriptions/add_subscriptions": {
      "put": {
        "tags": [
          "host_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_subscriptions_add_subscriptions",
        "summary": "Add a subscription to a host",
        "parameters": [
          {
            "name": "subscriptions",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Array of subscriptions to add"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/subscriptions/content_override": {
      "put": {
        "tags": [
          "host_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_subscriptions_content_override",
        "summary": "Set content overrides for the host",
        "parameters": [
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Id of the content host"
          },
          {
            "name": "content_label",
            "type": "string",
            "in": "formData",
            "description": "Label of the content"
          },
          {
            "name": "value",
            "type": "string",
            "in": "formData",
            "description": "Override to a boolean value or 'default'"
          },
          {
            "name": "content_overrides",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of Content override parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/subscriptions/product_content": {
      "get": {
        "tags": [
          "host_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_subscriptions_product_content",
        "summary": "Get content and overrides for the host",
        "parameters": [
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Id of the host"
          },
          {
            "name": "content_access_mode_all",
            "type": "boolean",
            "in": "query",
            "description": "Get all content available, not just that provided by subscriptions"
          },
          {
            "name": "content_access_mode_env",
            "type": "boolean",
            "in": "query",
            "description": "Limit content to just that available in the host's content view version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/subscriptions/available_release_versions": {
      "get": {
        "tags": [
          "host_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_subscriptions_available_release_versions",
        "summary": "Show releases available for the content host",
        "parameters": [
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "id of host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts",
        "summary": "List all hosts",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "thin",
            "type": "boolean",
            "in": "query",
            "description": "Only list ID and name of hosts"
          },
          {
            "name": "include",
            "type": "string",
            "enum": [
              "parameters",
              "all_parameters"
            ],
            "in": "query",
            "description": "Array of extra information types to include"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts",
        "summary": "Create a host",
        "parameters": [
          {
            "name": "host[organization_id]",
            "type": "number",
            "in": "formData",
            "required": true
          },
          {
            "name": "host[location_id]",
            "type": "number",
            "in": "formData",
            "required": true
          },
          {
            "name": "host[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "host[environment_id]",
            "type": "string",
            "in": "formData",
            "description": "required if host is managed and value is not inherited from host group"
          },
          {
            "name": "host[ip]",
            "type": "string",
            "in": "formData",
            "description": "not required if using a subnet with DHCP Capsule"
          },
          {
            "name": "host[mac]",
            "type": "string",
            "in": "formData",
            "description": "required for managed host that is bare metal, not required if it's a virtual machine"
          },
          {
            "name": "host[architecture_id]",
            "type": "number",
            "in": "formData",
            "description": "required if host is managed and value is not inherited from host group"
          },
          {
            "name": "host[domain_id]",
            "type": "number",
            "in": "formData",
            "description": "required if host is managed and value is not inherited from host group"
          },
          {
            "name": "host[realm_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[puppet_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "Puppet Capsule ID"
          },
          {
            "name": "host[puppet_ca_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "Puppet CA Capsule ID"
          },
          {
            "name": "host[openscap_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "ID of OpenSCAP Capsule"
          },
          {
            "name": "host[puppetclass_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "host[config_group_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated config groups"
          },
          {
            "name": "host[operatingsystem_id]",
            "type": "string",
            "in": "formData",
            "description": "required if host is managed and value is not inherited from host group"
          },
          {
            "name": "host[medium_id]",
            "type": "string",
            "in": "formData",
            "description": "required if not imaged based provisioning and host is managed and value is not inherited from host group"
          },
          {
            "name": "host[pxe_loader]",
            "type": "string",
            "enum": [
              "None",
              "PXELinux BIOS",
              "PXELinux UEFI",
              "Grub UEFI",
              "Grub2 BIOS",
              "Grub2 ELF",
              "Grub2 UEFI",
              "Grub2 UEFI SecureBoot",
              "iPXE Embedded",
              "iPXE Chain BIOS",
              "iPXE Chain UEFI"
            ],
            "in": "formData",
            "description": "DHCP filename option (Grub2/PXELinux by default)"
          },
          {
            "name": "host[ptable_id]",
            "type": "number",
            "in": "formData",
            "description": "required if host is managed and custom partition has not been defined"
          },
          {
            "name": "host[subnet_id]",
            "type": "number",
            "in": "formData",
            "description": "required if host is managed and value is not inherited from host group"
          },
          {
            "name": "host[compute_resource_id]",
            "type": "number",
            "in": "formData",
            "description": "nil means host is bare metal"
          },
          {
            "name": "host[root_pass]",
            "type": "string",
            "in": "formData",
            "description": "required if host is managed and value is not inherited from host group or default password in settings"
          },
          {
            "name": "host[model_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[hostgroup_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[owner_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[owner_type]",
            "type": "string",
            "enum": [
              "User",
              "Usergroup"
            ],
            "in": "formData",
            "description": "Host's owner type"
          },
          {
            "name": "host[image_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[host_parameters_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Host's parameters (array or indexed hash)"
          },
          {
            "name": "host[build]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "host[enabled]",
            "type": "boolean",
            "in": "formData",
            "description": "Include this host within Satellite reporting"
          },
          {
            "name": "host[provision_method]",
            "type": "string",
            "enum": [
              "build",
              "image",
              "bootdisk"
            ],
            "in": "formData",
            "description": "The method used to provision the host."
          },
          {
            "name": "host[managed]",
            "type": "boolean",
            "in": "formData",
            "description": "True/False flag whether a host is managed or unmanaged. Note: this value also determines whether several parameters are required or not"
          },
          {
            "name": "host[progress_report_id]",
            "type": "string",
            "in": "formData",
            "description": "UUID to track orchestration tasks status, GET /api/orchestration/:UUID/tasks"
          },
          {
            "name": "host[comment]",
            "type": "string",
            "in": "formData",
            "description": "Additional information about this host"
          },
          {
            "name": "host[capabilities]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "host[compute_profile_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[interfaces_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Host's network interfaces."
          },
          {
            "name": "host[content_facet_attributes][content_view_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[content_facet_attributes][lifecycle_environment_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[content_facet_attributes][content_source_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[content_facet_attributes][kickstart_repository_id]",
            "type": "number",
            "in": "formData",
            "description": "Repository Id associated with the kickstart repo used for provisioning"
          },
          {
            "name": "host[subscription_facet_attributes][release_version]",
            "type": "string",
            "in": "formData",
            "description": "Release version for this Host to use (7Server, 7.1, etc)"
          },
          {
            "name": "host[subscription_facet_attributes][autoheal]",
            "type": "boolean",
            "in": "formData",
            "description": "Sets whether the Host will autoheal subscriptions upon checkin"
          },
          {
            "name": "host[subscription_facet_attributes][purpose_usage]",
            "type": "string",
            "in": "formData",
            "description": "Sets the system purpose usage"
          },
          {
            "name": "host[subscription_facet_attributes][purpose_role]",
            "type": "string",
            "in": "formData",
            "description": "Sets the system purpose usage"
          },
          {
            "name": "host[subscription_facet_attributes][purpose_addons]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Sets the system add-ons"
          },
          {
            "name": "host[subscription_facet_attributes][service_level]",
            "type": "string",
            "in": "formData",
            "description": "Service level to be used for autoheal"
          },
          {
            "name": "host[subscription_facet_attributes][hypervisor_guest_uuids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of hypervisor guest uuids"
          },
          {
            "name": "host[subscription_facet_attributes][installed_products_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of products installed on the host"
          },
          {
            "name": "host[ansible_role_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated ansible roles"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{hostgroup_id}/hosts": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups_hostgroup_id_hosts",
        "summary": "List all hosts for a host group",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "thin",
            "type": "boolean",
            "in": "query",
            "description": "Only list ID and name of hosts"
          },
          {
            "name": "include",
            "type": "string",
            "enum": [
              "parameters",
              "all_parameters"
            ],
            "in": "query",
            "description": "Array of extra information types to include"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/hosts": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_hosts",
        "summary": "List hosts per location",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "thin",
            "type": "boolean",
            "in": "query",
            "description": "Only list ID and name of hosts"
          },
          {
            "name": "include",
            "type": "string",
            "enum": [
              "parameters",
              "all_parameters"
            ],
            "in": "query",
            "description": "Array of extra information types to include"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/hosts": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_hosts",
        "summary": "List hosts per organization",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "thin",
            "type": "boolean",
            "in": "query",
            "description": "Only list ID and name of hosts"
          },
          {
            "name": "include",
            "type": "string",
            "enum": [
              "parameters",
              "all_parameters"
            ],
            "in": "query",
            "description": "Array of extra information types to include"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/environments/{environment_id}/hosts": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_environments_environment_id_hosts",
        "summary": "List hosts per environment",
        "parameters": [
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "thin",
            "type": "boolean",
            "in": "query",
            "description": "Only list ID and name of hosts"
          },
          {
            "name": "include",
            "type": "string",
            "enum": [
              "parameters",
              "all_parameters"
            ],
            "in": "query",
            "description": "Array of extra information types to include"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{id}": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_id",
        "summary": "Show a host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden_parameters",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_id",
        "summary": "Update a host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "host[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "host[location_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[organization_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[environment_id]",
            "type": "string",
            "in": "formData",
            "description": "required if host is managed and value is not inherited from host group"
          },
          {
            "name": "host[ip]",
            "type": "string",
            "in": "formData",
            "description": "not required if using a subnet with DHCP Capsule"
          },
          {
            "name": "host[mac]",
            "type": "string",
            "in": "formData",
            "description": "required for managed host that is bare metal, not required if it's a virtual machine"
          },
          {
            "name": "host[architecture_id]",
            "type": "number",
            "in": "formData",
            "description": "required if host is managed and value is not inherited from host group"
          },
          {
            "name": "host[domain_id]",
            "type": "number",
            "in": "formData",
            "description": "required if host is managed and value is not inherited from host group"
          },
          {
            "name": "host[realm_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[puppet_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "Puppet Capsule ID"
          },
          {
            "name": "host[puppet_ca_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "Puppet CA Capsule ID"
          },
          {
            "name": "host[openscap_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "ID of OpenSCAP Capsule"
          },
          {
            "name": "host[puppetclass_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "host[config_group_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated config groups"
          },
          {
            "name": "host[operatingsystem_id]",
            "type": "string",
            "in": "formData",
            "description": "required if host is managed and value is not inherited from host group"
          },
          {
            "name": "host[medium_id]",
            "type": "string",
            "in": "formData",
            "description": "required if not imaged based provisioning and host is managed and value is not inherited from host group"
          },
          {
            "name": "host[pxe_loader]",
            "type": "string",
            "enum": [
              "None",
              "PXELinux BIOS",
              "PXELinux UEFI",
              "Grub UEFI",
              "Grub2 BIOS",
              "Grub2 ELF",
              "Grub2 UEFI",
              "Grub2 UEFI SecureBoot",
              "iPXE Embedded",
              "iPXE Chain BIOS",
              "iPXE Chain UEFI"
            ],
            "in": "formData",
            "description": "DHCP filename option (Grub2/PXELinux by default)"
          },
          {
            "name": "host[ptable_id]",
            "type": "number",
            "in": "formData",
            "description": "required if host is managed and custom partition has not been defined"
          },
          {
            "name": "host[subnet_id]",
            "type": "number",
            "in": "formData",
            "description": "required if host is managed and value is not inherited from host group"
          },
          {
            "name": "host[compute_resource_id]",
            "type": "number",
            "in": "formData",
            "description": "nil means host is bare metal"
          },
          {
            "name": "host[root_pass]",
            "type": "string",
            "in": "formData",
            "description": "required if host is managed and value is not inherited from host group or default password in settings"
          },
          {
            "name": "host[model_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[hostgroup_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[owner_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[owner_type]",
            "type": "string",
            "enum": [
              "User",
              "Usergroup"
            ],
            "in": "formData",
            "description": "Host's owner type"
          },
          {
            "name": "host[image_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[host_parameters_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Host's parameters (array or indexed hash)"
          },
          {
            "name": "host[build]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "host[enabled]",
            "type": "boolean",
            "in": "formData",
            "description": "Include this host within Satellite reporting"
          },
          {
            "name": "host[provision_method]",
            "type": "string",
            "enum": [
              "build",
              "image",
              "bootdisk"
            ],
            "in": "formData",
            "description": "The method used to provision the host."
          },
          {
            "name": "host[managed]",
            "type": "boolean",
            "in": "formData",
            "description": "True/False flag whether a host is managed or unmanaged. Note: this value also determines whether several parameters are required or not"
          },
          {
            "name": "host[progress_report_id]",
            "type": "string",
            "in": "formData",
            "description": "UUID to track orchestration tasks status, GET /api/orchestration/:UUID/tasks"
          },
          {
            "name": "host[comment]",
            "type": "string",
            "in": "formData",
            "description": "Additional information about this host"
          },
          {
            "name": "host[capabilities]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "host[compute_profile_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[interfaces_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Host's network interfaces."
          },
          {
            "name": "host[content_facet_attributes][content_view_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[content_facet_attributes][lifecycle_environment_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[content_facet_attributes][content_source_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "host[content_facet_attributes][kickstart_repository_id]",
            "type": "number",
            "in": "formData",
            "description": "Repository Id associated with the kickstart repo used for provisioning"
          },
          {
            "name": "host[subscription_facet_attributes][release_version]",
            "type": "string",
            "in": "formData",
            "description": "Release version for this Host to use (7Server, 7.1, etc)"
          },
          {
            "name": "host[subscription_facet_attributes][autoheal]",
            "type": "boolean",
            "in": "formData",
            "description": "Sets whether the Host will autoheal subscriptions upon checkin"
          },
          {
            "name": "host[subscription_facet_attributes][purpose_usage]",
            "type": "string",
            "in": "formData",
            "description": "Sets the system purpose usage"
          },
          {
            "name": "host[subscription_facet_attributes][purpose_role]",
            "type": "string",
            "in": "formData",
            "description": "Sets the system purpose usage"
          },
          {
            "name": "host[subscription_facet_attributes][purpose_addons]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Sets the system add-ons"
          },
          {
            "name": "host[subscription_facet_attributes][service_level]",
            "type": "string",
            "in": "formData",
            "description": "Service level to be used for autoheal"
          },
          {
            "name": "host[subscription_facet_attributes][hypervisor_guest_uuids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of hypervisor guest uuids"
          },
          {
            "name": "host[subscription_facet_attributes][installed_products_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of products installed on the host"
          },
          {
            "name": "host[ansible_role_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated ansible roles"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_hosts_id",
        "summary": "Delete a host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{id}/enc": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_id_enc",
        "summary": "Get ENC values of host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{id}/status": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_id_status",
        "summary": "Get configuration status of host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>Return value may either be one of the following:</p>\n<ul><li>\n<p>Alerts disabled</p>\n</li><li>\n<p>No reports</p>\n</li><li>\n<p>Error</p>\n</li><li>\n<p>Out of sync</p>\n</li><li>\n<p>Active</p>\n</li><li>\n<p>Pending</p>\n</li><li>\n<p>No changes</p>\n</li></ul>\n"
      }
    },
    "/hosts/{id}/status/{type}": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_id_status_type",
        "summary": "Get status of host",
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "status type, can be one of\n* global\n* configuration\n* build\n"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>Returns string representing a host status of a given type</p>\n"
      }
    },
    "/hosts/{id}/vm_compute_attributes": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_id_vm_compute_attributes",
        "summary": "Get vm attributes of host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>Return the host&#39;s compute attributes that can be used to create a clone\nof this VM</p>\n"
      }
    },
    "/hosts/{id}/disassociate": {
      "put": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_id_disassociate",
        "summary": "Disassociate the host from a VM",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{id}/power": {
      "put": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_id_power",
        "summary": "Run a power operation on host",
        "parameters": [
          {
            "name": "power_action",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "power action, valid actions are (on/start), (off/stop), (soft/reboot), (cycle/reset), (state/status)"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_id_power",
        "summary": "Fetch the status of whether the host is powered on or not. Supported hosts are VMs and physical hosts with BMCs.",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{id}/boot": {
      "put": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_id_boot",
        "summary": "Boot host from specified device",
        "parameters": [
          {
            "name": "device",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "boot device, valid devices are disk, cdrom, pxe, bios"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/facts": {
      "post": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts_facts",
        "summary": "Upload facts for a host, creating the host if required",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "hostname of the host"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "certname",
            "type": "string",
            "in": "formData",
            "description": "optional: certname of the host"
          },
          {
            "name": "type",
            "type": "string",
            "in": "formData",
            "description": "optional: the STI type of host to create"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{id}/rebuild_config": {
      "put": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_id_rebuild_config",
        "summary": "Rebuild orchestration config",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "only",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Limit rebuild steps, valid steps are DHCP, DNS, TFTP"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{id}/template/{kind}": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_id_template_kind",
        "summary": "Preview rendered provisioning template content",
        "parameters": [
          {
            "name": "kind",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Template kinds, available values: Bootdisk, PXELinux, PXEGrub, PXEGrub2, iPXE, provision, finish, script, user_data, ZTP, POAP, cloud-init, kexec"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{id}/play_roles": {
      "post": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts_id_play_roles",
        "summary": "Plays Ansible roles on a host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/multiple_play_roles": {
      "post": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts_multiple_play_roles",
        "summary": "Plays Ansible roles on hosts",
        "parameters": [
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "IDs of hosts to play roles on"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{id}/ansible_roles": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_id_ansible_roles",
        "summary": "List all Ansible roles for a host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{id}/assign_ansible_roles": {
      "post": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts_id_assign_ansible_roles",
        "summary": "Assigns Ansible roles to a host",
        "parameters": [
          {
            "name": "ansible_role_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Ansible roles to assign to a host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/host_collections": {
      "put": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_host_collections",
        "summary": "Alter a hosts host collections",
        "parameters": [
          {
            "name": "host_collection_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of host collection ids to update"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "The id of the host to alter"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{id}/policies_enc": {
      "get": {
        "tags": [
          "hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_id_policies_enc",
        "summary": "Show config information for foreman_scap_client",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The identifier of the host"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/interfaces": {
      "get": {
        "tags": [
          "interfaces"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_interfaces",
        "summary": "List all interfaces for host",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID or name of subnet"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID or name of domain"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of host"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "interfaces"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts_host_id_interfaces",
        "summary": "Create an interface on a host",
        "parameters": [
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of host"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "interface[mac]",
            "type": "string",
            "in": "formData",
            "description": "MAC address of interface. Required for managed interfaces on bare metal."
          },
          {
            "name": "interface[ip]",
            "type": "string",
            "in": "formData",
            "description": "IPv4 address of interface"
          },
          {
            "name": "interface[ip6]",
            "type": "string",
            "in": "formData",
            "description": "IPv6 address of interface"
          },
          {
            "name": "interface[type]",
            "type": "string",
            "enum": [
              "interface",
              "bmc",
              "bond",
              "bridge"
            ],
            "in": "formData",
            "description": "Interface type, e.g. bmc. Default is interface"
          },
          {
            "name": "interface[name]",
            "type": "string",
            "in": "formData",
            "description": "Interface's DNS name"
          },
          {
            "name": "interface[subnet_id]",
            "type": "number",
            "in": "formData",
            "description": "Satellite subnet ID of IPv4 interface"
          },
          {
            "name": "interface[subnet6_id]",
            "type": "number",
            "in": "formData",
            "description": "Satellite subnet ID of IPv6 interface"
          },
          {
            "name": "interface[domain_id]",
            "type": "number",
            "in": "formData",
            "description": "Satellite domain ID of interface. Required for primary interfaces on managed hosts."
          },
          {
            "name": "interface[identifier]",
            "type": "string",
            "in": "formData",
            "description": "Device identifier, e.g. eth0 or eth1.1"
          },
          {
            "name": "interface[managed]",
            "type": "boolean",
            "in": "formData",
            "description": "Should this interface be managed via DHCP and DNS capsule and should it be configured during provisioning?"
          },
          {
            "name": "interface[primary]",
            "type": "boolean",
            "in": "formData",
            "description": "Should this interface be used for constructing the FQDN of the host? Each managed hosts needs to have one primary interface."
          },
          {
            "name": "interface[provision]",
            "type": "boolean",
            "in": "formData",
            "description": "Should this interface be used for TFTP of PXELinux (or SSH for image-based hosts)? Each managed hosts needs to have one provision interface."
          },
          {
            "name": "interface[username]",
            "type": "string",
            "in": "formData",
            "description": "Only for BMC interfaces."
          },
          {
            "name": "interface[password]",
            "type": "string",
            "in": "formData",
            "description": "Only for BMC interfaces."
          },
          {
            "name": "interface[provider]",
            "type": "string",
            "enum": [
              "IPMI",
              "SSH"
            ],
            "in": "formData",
            "description": "Interface provider, e.g. IPMI. Only for BMC interfaces."
          },
          {
            "name": "interface[virtual]",
            "type": "boolean",
            "in": "formData",
            "description": "Alias or VLAN device"
          },
          {
            "name": "interface[tag]",
            "type": "string",
            "in": "formData",
            "description": "VLAN tag, this attribute has precedence over the subnet VLAN ID. Only for virtual interfaces."
          },
          {
            "name": "interface[mtu]",
            "type": "number",
            "in": "formData",
            "description": "MTU, this attribute has precedence over the subnet MTU."
          },
          {
            "name": "interface[attached_to]",
            "type": "string",
            "in": "formData",
            "description": "Identifier of the interface to which this interface belongs, e.g. eth1. Only for virtual interfaces."
          },
          {
            "name": "interface[mode]",
            "type": "string",
            "enum": [
              "balance-rr",
              "active-backup",
              "balance-xor",
              "broadcast",
              "802.3ad",
              "balance-tlb",
              "balance-alb"
            ],
            "in": "formData",
            "description": "Bond mode of the interface, e.g. balance-rr. Only for bond interfaces."
          },
          {
            "name": "interface[attached_devices]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Identifiers of attached interfaces, e.g. `['eth1', 'eth2']`. For bond interfaces those are the slaves. Only for bond and bridges interfaces."
          },
          {
            "name": "interface[bond_options]",
            "type": "string",
            "in": "formData",
            "description": "Space separated options, e.g. miimon=100. Only for bond interfaces."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/domains/{domain_id}/interfaces": {
      "get": {
        "tags": [
          "interfaces"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_domains_domain_id_interfaces",
        "summary": "List all interfaces for domain",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID or name of subnet"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID or name of host"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of domain"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/subnets/{subnet_id}/interfaces": {
      "get": {
        "tags": [
          "interfaces"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_subnets_subnet_id_interfaces",
        "summary": "List all interfaces for subnet",
        "parameters": [
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID or name of domain"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID or name of host"
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of subnet"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/interfaces/{id}": {
      "get": {
        "tags": [
          "interfaces"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_interfaces_id",
        "summary": "Show an interface for host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of interface"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of host"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "interfaces"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_interfaces_id",
        "summary": "Update a host's interface",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of interface"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of host"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "interface[mac]",
            "type": "string",
            "in": "formData",
            "description": "MAC address of interface. Required for managed interfaces on bare metal."
          },
          {
            "name": "interface[ip]",
            "type": "string",
            "in": "formData",
            "description": "IPv4 address of interface"
          },
          {
            "name": "interface[ip6]",
            "type": "string",
            "in": "formData",
            "description": "IPv6 address of interface"
          },
          {
            "name": "interface[type]",
            "type": "string",
            "enum": [
              "interface",
              "bmc",
              "bond",
              "bridge"
            ],
            "in": "formData",
            "description": "Interface type, e.g. bmc. Default is interface"
          },
          {
            "name": "interface[name]",
            "type": "string",
            "in": "formData",
            "description": "Interface's DNS name"
          },
          {
            "name": "interface[subnet_id]",
            "type": "number",
            "in": "formData",
            "description": "Satellite subnet ID of IPv4 interface"
          },
          {
            "name": "interface[subnet6_id]",
            "type": "number",
            "in": "formData",
            "description": "Satellite subnet ID of IPv6 interface"
          },
          {
            "name": "interface[domain_id]",
            "type": "number",
            "in": "formData",
            "description": "Satellite domain ID of interface. Required for primary interfaces on managed hosts."
          },
          {
            "name": "interface[identifier]",
            "type": "string",
            "in": "formData",
            "description": "Device identifier, e.g. eth0 or eth1.1"
          },
          {
            "name": "interface[managed]",
            "type": "boolean",
            "in": "formData",
            "description": "Should this interface be managed via DHCP and DNS capsule and should it be configured during provisioning?"
          },
          {
            "name": "interface[primary]",
            "type": "boolean",
            "in": "formData",
            "description": "Should this interface be used for constructing the FQDN of the host? Each managed hosts needs to have one primary interface."
          },
          {
            "name": "interface[provision]",
            "type": "boolean",
            "in": "formData",
            "description": "Should this interface be used for TFTP of PXELinux (or SSH for image-based hosts)? Each managed hosts needs to have one provision interface."
          },
          {
            "name": "interface[username]",
            "type": "string",
            "in": "formData",
            "description": "Only for BMC interfaces."
          },
          {
            "name": "interface[password]",
            "type": "string",
            "in": "formData",
            "description": "Only for BMC interfaces."
          },
          {
            "name": "interface[provider]",
            "type": "string",
            "enum": [
              "IPMI",
              "SSH"
            ],
            "in": "formData",
            "description": "Interface provider, e.g. IPMI. Only for BMC interfaces."
          },
          {
            "name": "interface[virtual]",
            "type": "boolean",
            "in": "formData",
            "description": "Alias or VLAN device"
          },
          {
            "name": "interface[tag]",
            "type": "string",
            "in": "formData",
            "description": "VLAN tag, this attribute has precedence over the subnet VLAN ID. Only for virtual interfaces."
          },
          {
            "name": "interface[mtu]",
            "type": "number",
            "in": "formData",
            "description": "MTU, this attribute has precedence over the subnet MTU."
          },
          {
            "name": "interface[attached_to]",
            "type": "string",
            "in": "formData",
            "description": "Identifier of the interface to which this interface belongs, e.g. eth1. Only for virtual interfaces."
          },
          {
            "name": "interface[mode]",
            "type": "string",
            "enum": [
              "balance-rr",
              "active-backup",
              "balance-xor",
              "broadcast",
              "802.3ad",
              "balance-tlb",
              "balance-alb"
            ],
            "in": "formData",
            "description": "Bond mode of the interface, e.g. balance-rr. Only for bond interfaces."
          },
          {
            "name": "interface[attached_devices]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Identifiers of attached interfaces, e.g. `['eth1', 'eth2']`. For bond interfaces those are the slaves. Only for bond and bridges interfaces."
          },
          {
            "name": "interface[bond_options]",
            "type": "string",
            "in": "formData",
            "description": "Space separated options, e.g. miimon=100. Only for bond interfaces."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "interfaces"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_hosts_host_id_interfaces_id",
        "summary": "Delete a host's interface",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of interface"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of host"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups": {
      "get": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups",
        "summary": "List all host groups",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          },
          {
            "name": "include",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": [
              "parameters"
            ],
            "description": "Array of extra information types to include"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hostgroups",
        "summary": "Create a host group",
        "parameters": [
          {
            "name": "hostgroup[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Name of the host group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "hostgroup[description]",
            "type": "string",
            "in": "formData",
            "description": "Host group description"
          },
          {
            "name": "hostgroup[parent_id]",
            "type": "number",
            "in": "formData",
            "description": "Parent ID of the host group"
          },
          {
            "name": "hostgroup[environment_id]",
            "type": "number",
            "in": "formData",
            "description": "Environment ID"
          },
          {
            "name": "hostgroup[compute_profile_id]",
            "type": "number",
            "in": "formData",
            "description": "Compute profile ID"
          },
          {
            "name": "hostgroup[compute_resource_id]",
            "type": "number",
            "in": "formData",
            "description": "Compute resource ID"
          },
          {
            "name": "hostgroup[operatingsystem_id]",
            "type": "number",
            "in": "formData",
            "description": "Operating system ID"
          },
          {
            "name": "hostgroup[architecture_id]",
            "type": "number",
            "in": "formData",
            "description": "Architecture ID"
          },
          {
            "name": "hostgroup[pxe_loader]",
            "type": "string",
            "enum": [
              "None",
              "PXELinux BIOS",
              "PXELinux UEFI",
              "Grub UEFI",
              "Grub2 BIOS",
              "Grub2 ELF",
              "Grub2 UEFI",
              "Grub2 UEFI SecureBoot",
              "iPXE Embedded",
              "iPXE Chain BIOS",
              "iPXE Chain UEFI"
            ],
            "in": "formData",
            "description": "DHCP filename option (Grub2/PXELinux by default)"
          },
          {
            "name": "hostgroup[medium_id]",
            "type": "number",
            "in": "formData",
            "description": "Media ID"
          },
          {
            "name": "hostgroup[ptable_id]",
            "type": "number",
            "in": "formData",
            "description": "Partition table ID"
          },
          {
            "name": "hostgroup[subnet_id]",
            "type": "number",
            "in": "formData",
            "description": "Subnet ID"
          },
          {
            "name": "hostgroup[subnet6_id]",
            "type": "number",
            "in": "formData",
            "description": "Subnet IPv6 ID"
          },
          {
            "name": "hostgroup[domain_id]",
            "type": "number",
            "in": "formData",
            "description": "Domain ID"
          },
          {
            "name": "hostgroup[realm_id]",
            "type": "number",
            "in": "formData",
            "description": "Realm ID"
          },
          {
            "name": "hostgroup[config_group_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated config groups"
          },
          {
            "name": "hostgroup[group_parameters_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of parameters"
          },
          {
            "name": "hostgroup[puppet_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "Puppet Capsule ID"
          },
          {
            "name": "hostgroup[puppet_ca_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "Puppet CA Capsule ID"
          },
          {
            "name": "hostgroup[openscap_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "ID of OpenSCAP Capsule"
          },
          {
            "name": "hostgroup[root_pass]",
            "type": "string",
            "in": "formData",
            "description": "Root password on provisioned hosts"
          },
          {
            "name": "hostgroup[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "hostgroup[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          },
          {
            "name": "hostgroup[ansible_role_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated ansible roles"
          },
          {
            "name": "hostgroup[content_source_id]",
            "type": "number",
            "in": "formData",
            "description": "Content source ID"
          },
          {
            "name": "hostgroup[content_view_id]",
            "type": "number",
            "in": "formData",
            "description": "Content view ID"
          },
          {
            "name": "hostgroup[lifecycle_environment_id]",
            "type": "number",
            "in": "formData",
            "description": "Lifecycle environment ID"
          },
          {
            "name": "hostgroup[kickstart_repository_id]",
            "type": "number",
            "in": "formData",
            "description": "Kickstart repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/puppetclasses/{puppetclass_id}/hostgroups": {
      "get": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_puppetclasses_puppetclass_id_hostgroups",
        "summary": "List all host groups for a Puppet class",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          },
          {
            "name": "include",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": [
              "parameters"
            ],
            "description": "Array of extra information types to include"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/hostgroups": {
      "get": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_hostgroups",
        "summary": "List all host groups per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          },
          {
            "name": "include",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": [
              "parameters"
            ],
            "description": "Array of extra information types to include"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/hostgroups": {
      "get": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_hostgroups",
        "summary": "List all host groups per organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          },
          {
            "name": "include",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": [
              "parameters"
            ],
            "description": "Array of extra information types to include"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{id}": {
      "get": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups_id",
        "summary": "Show a host group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden_parameters",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hostgroups_id",
        "summary": "Update a host group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "hostgroup[name]",
            "type": "string",
            "in": "formData",
            "description": "Name of the host group"
          },
          {
            "name": "hostgroup[description]",
            "type": "string",
            "in": "formData",
            "description": "Host group description"
          },
          {
            "name": "hostgroup[parent_id]",
            "type": "number",
            "in": "formData",
            "description": "Parent ID of the host group"
          },
          {
            "name": "hostgroup[environment_id]",
            "type": "number",
            "in": "formData",
            "description": "Environment ID"
          },
          {
            "name": "hostgroup[compute_profile_id]",
            "type": "number",
            "in": "formData",
            "description": "Compute profile ID"
          },
          {
            "name": "hostgroup[compute_resource_id]",
            "type": "number",
            "in": "formData",
            "description": "Compute resource ID"
          },
          {
            "name": "hostgroup[operatingsystem_id]",
            "type": "number",
            "in": "formData",
            "description": "Operating system ID"
          },
          {
            "name": "hostgroup[architecture_id]",
            "type": "number",
            "in": "formData",
            "description": "Architecture ID"
          },
          {
            "name": "hostgroup[pxe_loader]",
            "type": "string",
            "enum": [
              "None",
              "PXELinux BIOS",
              "PXELinux UEFI",
              "Grub UEFI",
              "Grub2 BIOS",
              "Grub2 ELF",
              "Grub2 UEFI",
              "Grub2 UEFI SecureBoot",
              "iPXE Embedded",
              "iPXE Chain BIOS",
              "iPXE Chain UEFI"
            ],
            "in": "formData",
            "description": "DHCP filename option (Grub2/PXELinux by default)"
          },
          {
            "name": "hostgroup[medium_id]",
            "type": "number",
            "in": "formData",
            "description": "Media ID"
          },
          {
            "name": "hostgroup[ptable_id]",
            "type": "number",
            "in": "formData",
            "description": "Partition table ID"
          },
          {
            "name": "hostgroup[subnet_id]",
            "type": "number",
            "in": "formData",
            "description": "Subnet ID"
          },
          {
            "name": "hostgroup[subnet6_id]",
            "type": "number",
            "in": "formData",
            "description": "Subnet IPv6 ID"
          },
          {
            "name": "hostgroup[domain_id]",
            "type": "number",
            "in": "formData",
            "description": "Domain ID"
          },
          {
            "name": "hostgroup[realm_id]",
            "type": "number",
            "in": "formData",
            "description": "Realm ID"
          },
          {
            "name": "hostgroup[config_group_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated config groups"
          },
          {
            "name": "hostgroup[group_parameters_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of parameters"
          },
          {
            "name": "hostgroup[puppet_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "Puppet Capsule ID"
          },
          {
            "name": "hostgroup[puppet_ca_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "Puppet CA Capsule ID"
          },
          {
            "name": "hostgroup[openscap_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "ID of OpenSCAP Capsule"
          },
          {
            "name": "hostgroup[root_pass]",
            "type": "string",
            "in": "formData",
            "description": "Root password on provisioned hosts"
          },
          {
            "name": "hostgroup[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "hostgroup[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          },
          {
            "name": "hostgroup[ansible_role_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated ansible roles"
          },
          {
            "name": "hostgroup[content_source_id]",
            "type": "number",
            "in": "formData",
            "description": "Content source ID"
          },
          {
            "name": "hostgroup[content_view_id]",
            "type": "number",
            "in": "formData",
            "description": "Content view ID"
          },
          {
            "name": "hostgroup[lifecycle_environment_id]",
            "type": "number",
            "in": "formData",
            "description": "Lifecycle environment ID"
          },
          {
            "name": "hostgroup[kickstart_repository_id]",
            "type": "number",
            "in": "formData",
            "description": "Kickstart repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_hostgroups_id",
        "summary": "Delete a host group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{id}/clone": {
      "post": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hostgroups_id_clone",
        "summary": "Clone a host group",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{id}/rebuild_config": {
      "put": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hostgroups_id_rebuild_config",
        "summary": "Rebuild orchestration config",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "only",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Limit rebuild steps, valid steps are DHCP, DNS, TFTP"
          },
          {
            "name": "children_hosts",
            "type": "boolean",
            "in": "formData",
            "description": "Operate on child hostgroup hosts"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{id}/play_roles": {
      "post": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hostgroups_id_play_roles",
        "summary": "Plays Ansible roles on a hostgroup",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/multiple_play_roles": {
      "post": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hostgroups_multiple_play_roles",
        "summary": "Plays Ansible roles on hostgroups",
        "parameters": [
          {
            "name": "hostgroup_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "IDs of hostgroups to play roles on"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{id}/ansible_roles": {
      "get": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups_id_ansible_roles",
        "summary": "List all Ansible roles for a hostgroup",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{id}/assign_ansible_roles": {
      "post": {
        "tags": [
          "hostgroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hostgroups_id_assign_ansible_roles",
        "summary": "Assigns Ansible roles to a hostgroup",
        "parameters": [
          {
            "name": "ansible_role_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Ansible roles to assign to a hostgroup"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_proxies/{id}/import_puppetclasses": {
      "post": {
        "tags": [
          "environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_smart_proxies_id_import_puppetclasses",
        "summary": "Import puppet classes from puppet Capsule",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "smart_proxy_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "dryrun",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "except",
            "type": "string",
            "in": "formData",
            "description": "Optional comma-delimited string containing either 'new', 'updated', or 'obsolete' that is used to limit the imported Puppet classes"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_proxies/{smart_proxy_id}/environments/{id}/import_puppetclasses": {
      "post": {
        "tags": [
          "environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_smart_proxies_smart_proxy_id_environments_id_import_puppetclasses",
        "summary": "Import puppet classes from puppet Capsule for an environment",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "smart_proxy_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "dryrun",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "except",
            "type": "string",
            "in": "formData",
            "description": "Optional comma-delimited string containing either 'new', 'updated', or 'obsolete' that is used to limit the imported Puppet classes"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/environments/{environment_id}/smart_proxies/{id}/import_puppetclasses": {
      "post": {
        "tags": [
          "environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_environments_environment_id_smart_proxies_id_import_puppetclasses",
        "summary": "Import puppet classes from puppet Capsule for an environment",
        "parameters": [
          {
            "name": "smart_proxy_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "environment_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "dryrun",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "except",
            "type": "string",
            "in": "formData",
            "description": "Optional comma-delimited string containing either 'new', 'updated', or 'obsolete' that is used to limit the imported Puppet classes"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_proxies": {
      "get": {
        "tags": [
          "smart_proxies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_smart_proxies",
        "summary": "List all capsules",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "smart_proxies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_smart_proxies",
        "summary": "Create a capsule",
        "parameters": [
          {
            "name": "smart_proxy[url]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "smart_proxy[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "smart_proxy[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "smart_proxy[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          },
          {
            "name": "smart_proxy[download_policy]",
            "type": "string",
            "in": "formData",
            "description": "Download Policy of the capsule, must be one of immediate, on_demand, background, inherit"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_proxies/{id}": {
      "get": {
        "tags": [
          "smart_proxies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_smart_proxies_id",
        "summary": "Show a capsule",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "smart_proxies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_smart_proxies_id",
        "summary": "Update a capsule",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "smart_proxy[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "smart_proxy[url]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "smart_proxy[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "smart_proxy[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          },
          {
            "name": "smart_proxy[download_policy]",
            "type": "string",
            "in": "formData",
            "description": "Download Policy of the capsule, must be one of immediate, on_demand, background, inherit"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "smart_proxies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_smart_proxies_id",
        "summary": "Delete a capsule",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_proxies/{id}/refresh": {
      "put": {
        "tags": [
          "smart_proxies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_smart_proxies_id_refresh",
        "summary": "Refresh capsule features",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/fact_values": {
      "get": {
        "tags": [
          "fact_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_fact_values",
        "summary": "List all fact values",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/facts": {
      "get": {
        "tags": [
          "fact_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_facts",
        "summary": "List all fact values of a given host",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/orchestration/{id}/tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_orchestration_id_tasks",
        "summary": "List all tasks for a given orchestration event",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/architectures": {
      "get": {
        "tags": [
          "architectures"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_architectures",
        "summary": "List all architectures",
        "parameters": [
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "architectures"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_architectures",
        "summary": "Create an architecture",
        "parameters": [
          {
            "name": "architecture[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "architecture[operatingsystem_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Operating system IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{operatingsystem_id}/architectures": {
      "get": {
        "tags": [
          "architectures"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_operatingsystem_id_architectures",
        "summary": "List all architectures for operating system",
        "parameters": [
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/architectures/{id}": {
      "get": {
        "tags": [
          "architectures"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_architectures_id",
        "summary": "Show an architecture",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "architectures"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_architectures_id",
        "summary": "Update an architecture",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "architecture[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "architecture[operatingsystem_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Operating system IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "architectures"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_architectures_id",
        "summary": "Delete an architecture",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_templates/{config_template_id}/template_combinations": {
      "get": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_config_templates_config_template_id_template_combinations",
        "summary": "List template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_config_templates_config_template_id_template_combinations",
        "summary": "Add a template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "template_combination[environment_id]",
            "type": "number",
            "in": "formData",
            "description": "environment id"
          },
          {
            "name": "template_combination[hostgroup_id]",
            "type": "number",
            "in": "formData",
            "description": "host group id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/provisioning_templates/{provisioning_template_id}/template_combinations": {
      "get": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_provisioning_templates_provisioning_template_id_template_combinations",
        "summary": "List template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_provisioning_templates_provisioning_template_id_template_combinations",
        "summary": "Add a template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "template_combination[environment_id]",
            "type": "number",
            "in": "formData",
            "description": "environment id"
          },
          {
            "name": "template_combination[hostgroup_id]",
            "type": "number",
            "in": "formData",
            "description": "host group id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{hostgroup_id}/template_combinations": {
      "get": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups_hostgroup_id_template_combinations",
        "summary": "List template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hostgroups_hostgroup_id_template_combinations",
        "summary": "Add a template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "template_combination[environment_id]",
            "type": "number",
            "in": "formData",
            "description": "environment id"
          },
          {
            "name": "template_combination[hostgroup_id]",
            "type": "number",
            "in": "formData",
            "description": "host group id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/environments/{environment_id}/template_combinations": {
      "get": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_environments_environment_id_template_combinations",
        "summary": "List template combination",
        "parameters": [
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "environment_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_environments_environment_id_template_combinations",
        "summary": "Add a template combination",
        "parameters": [
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "environment_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "template_combination[environment_id]",
            "type": "number",
            "in": "formData",
            "description": "environment id"
          },
          {
            "name": "template_combination[hostgroup_id]",
            "type": "number",
            "in": "formData",
            "description": "host group id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/template_combinations/{id}": {
      "get": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_template_combinations_id",
        "summary": "Show template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_template_combinations_id",
        "summary": "Delete a template combination",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_templates/{config_template_id}/template_combinations/{id}": {
      "get": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_config_templates_config_template_id_template_combinations_id",
        "summary": "Show template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_config_templates_config_template_id_template_combinations_id",
        "summary": "Update template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "template_combination[environment_id]",
            "type": "number",
            "in": "formData",
            "description": "environment id"
          },
          {
            "name": "template_combination[hostgroup_id]",
            "type": "number",
            "in": "formData",
            "description": "host group id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/provisioning_templates/{provisioning_template_id}/template_combinations/{id}": {
      "get": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_provisioning_templates_provisioning_template_id_template_combinations_id",
        "summary": "Show template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_provisioning_templates_provisioning_template_id_template_combinations_id",
        "summary": "Update template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "template_combination[environment_id]",
            "type": "number",
            "in": "formData",
            "description": "environment id"
          },
          {
            "name": "template_combination[hostgroup_id]",
            "type": "number",
            "in": "formData",
            "description": "host group id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{hostgroup_id}/template_combinations/{id}": {
      "get": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups_hostgroup_id_template_combinations_id",
        "summary": "Show template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hostgroups_hostgroup_id_template_combinations_id",
        "summary": "Update template combination",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "template_combination[environment_id]",
            "type": "number",
            "in": "formData",
            "description": "environment id"
          },
          {
            "name": "template_combination[hostgroup_id]",
            "type": "number",
            "in": "formData",
            "description": "host group id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/environments/{environment_id}/template_combinations/{id}": {
      "get": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_environments_environment_id_template_combinations_id",
        "summary": "Show template combination",
        "parameters": [
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "environment_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "template_combinations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_environments_environment_id_template_combinations_id",
        "summary": "Update template combination",
        "parameters": [
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of config template"
          },
          {
            "name": "environment_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "template_combination[environment_id]",
            "type": "number",
            "in": "formData",
            "description": "environment id"
          },
          {
            "name": "template_combination[hostgroup_id]",
            "type": "number",
            "in": "formData",
            "description": "host group id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/audits": {
      "get": {
        "tags": [
          "audits"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_audits",
        "summary": "List all audits",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/audits": {
      "get": {
        "tags": [
          "audits"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_audits",
        "summary": "List all audits for a given host",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/audits/{id}": {
      "get": {
        "tags": [
          "audits"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_audits_id",
        "summary": "Show an audit",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/permissions": {
      "get": {
        "tags": [
          "permissions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_permissions",
        "summary": "List all permissions",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          },
          {
            "name": "resource_type",
            "type": "string",
            "in": "query"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/permissions/{id}": {
      "get": {
        "tags": [
          "permissions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_permissions_id",
        "summary": "Show a permission",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/permissions/resource_types": {
      "get": {
        "tags": [
          "permissions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_permissions_resource_types",
        "summary": "List available resource types",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/auth_source_externals": {
      "get": {
        "tags": [
          "auth_source_externals"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_auth_source_externals",
        "summary": "List external authentication sources",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/auth_source_externals": {
      "get": {
        "tags": [
          "auth_source_externals"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_auth_source_externals",
        "summary": "List external authentication sources per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/auth_source_externals": {
      "get": {
        "tags": [
          "auth_source_externals"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_auth_source_externals",
        "summary": "List external authentication sources per organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/auth_source_externals/{id}": {
      "get": {
        "tags": [
          "auth_source_externals"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_auth_source_externals_id",
        "summary": "Show an external authentication source",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "auth_source_externals"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_auth_source_externals_id",
        "summary": "Update an external authentication source",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "auth_source_external[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "auth_source_external[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "auth_source_external[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/users/{user_id}/personal_access_tokens": {
      "get": {
        "tags": [
          "personal_access_tokens"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_users_user_id_personal_access_tokens",
        "summary": "List all Personal Access Tokens for a user",
        "parameters": [
          {
            "name": "user_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the user"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "personal_access_tokens"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_users_user_id_personal_access_tokens",
        "summary": "Create a Personal Access Token for a user",
        "parameters": [
          {
            "name": "personal_access_token[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "user_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the user"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "personal_access_token[expires_at]",
            "type": "string",
            "in": "formData",
            "description": "Expiry Date"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/users/{user_id}/personal_access_tokens/{id}": {
      "get": {
        "tags": [
          "personal_access_tokens"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_users_user_id_personal_access_tokens_id",
        "summary": "Show a Personal Access Token for a user",
        "parameters": [
          {
            "name": "user_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the user"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "personal_access_tokens"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_users_user_id_personal_access_tokens_id",
        "summary": "Revoke a Personal Access Token for a user",
        "parameters": [
          {
            "name": "user_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the user"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/auth_source_internals": {
      "get": {
        "tags": [
          "auth_source_internals"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_auth_source_internals",
        "summary": "List internal authentication sources",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/auth_source_internals/{id}": {
      "get": {
        "tags": [
          "auth_source_internals"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_auth_source_internals_id",
        "summary": "Show an internal authentication source",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/plugins": {
      "get": {
        "tags": [
          "plugins"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_plugins",
        "summary": "List installed plugins",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/auth_source_ldaps": {
      "get": {
        "tags": [
          "auth_source_ldaps"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_auth_source_ldaps",
        "summary": "List all LDAP authentication sources",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "auth_source_ldaps"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_auth_source_ldaps",
        "summary": "Create an LDAP authentication source",
        "parameters": [
          {
            "name": "auth_source_ldap[host]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "auth_source_ldap[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "auth_source_ldap[port]",
            "type": "number",
            "in": "formData",
            "description": "defaults to 389"
          },
          {
            "name": "auth_source_ldap[account]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "auth_source_ldap[base_dn]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "auth_source_ldap[account_password]",
            "type": "string",
            "in": "formData",
            "description": "required if onthefly_register is true"
          },
          {
            "name": "auth_source_ldap[attr_login]",
            "type": "string",
            "in": "formData",
            "description": "required if onthefly_register is true"
          },
          {
            "name": "auth_source_ldap[attr_firstname]",
            "type": "string",
            "in": "formData",
            "description": "required if onthefly_register is true"
          },
          {
            "name": "auth_source_ldap[attr_lastname]",
            "type": "string",
            "in": "formData",
            "description": "required if onthefly_register is true"
          },
          {
            "name": "auth_source_ldap[attr_mail]",
            "type": "string",
            "in": "formData",
            "description": "required if onthefly_register is true"
          },
          {
            "name": "auth_source_ldap[attr_photo]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "auth_source_ldap[onthefly_register]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "auth_source_ldap[usergroup_sync]",
            "type": "boolean",
            "in": "formData",
            "description": "sync external user groups on login"
          },
          {
            "name": "auth_source_ldap[tls]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "auth_source_ldap[groups_base]",
            "type": "string",
            "in": "formData",
            "description": "groups base DN"
          },
          {
            "name": "auth_source_ldap[use_netgroups]",
            "type": "boolean",
            "in": "formData",
            "description": "use NIS netgroups instead of posix groups, applicable only when server_type is posix or free_ipa"
          },
          {
            "name": "auth_source_ldap[server_type]",
            "type": "string",
            "enum": [
              "free_ipa",
              "active_directory",
              "posix"
            ],
            "in": "formData",
            "description": "type of the LDAP server"
          },
          {
            "name": "auth_source_ldap[ldap_filter]",
            "type": "string",
            "in": "formData",
            "description": "LDAP filter"
          },
          {
            "name": "auth_source_ldap[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "auth_source_ldap[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/auth_source_ldaps": {
      "get": {
        "tags": [
          "auth_source_ldaps"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_auth_source_ldaps",
        "summary": "List LDAP authentication sources per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/auth_source_ldaps": {
      "get": {
        "tags": [
          "auth_source_ldaps"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_auth_source_ldaps",
        "summary": "List LDAP authentication sources per organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/auth_source_ldaps/{id}": {
      "get": {
        "tags": [
          "auth_source_ldaps"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_auth_source_ldaps_id",
        "summary": "Show an LDAP authentication source",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "auth_source_ldaps"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_auth_source_ldaps_id",
        "summary": "Update an LDAP authentication source",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "auth_source_ldap[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "auth_source_ldap[host]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "auth_source_ldap[port]",
            "type": "number",
            "in": "formData",
            "description": "defaults to 389"
          },
          {
            "name": "auth_source_ldap[account]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "auth_source_ldap[base_dn]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "auth_source_ldap[account_password]",
            "type": "string",
            "in": "formData",
            "description": "required if onthefly_register is true"
          },
          {
            "name": "auth_source_ldap[attr_login]",
            "type": "string",
            "in": "formData",
            "description": "required if onthefly_register is true"
          },
          {
            "name": "auth_source_ldap[attr_firstname]",
            "type": "string",
            "in": "formData",
            "description": "required if onthefly_register is true"
          },
          {
            "name": "auth_source_ldap[attr_lastname]",
            "type": "string",
            "in": "formData",
            "description": "required if onthefly_register is true"
          },
          {
            "name": "auth_source_ldap[attr_mail]",
            "type": "string",
            "in": "formData",
            "description": "required if onthefly_register is true"
          },
          {
            "name": "auth_source_ldap[attr_photo]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "auth_source_ldap[onthefly_register]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "auth_source_ldap[usergroup_sync]",
            "type": "boolean",
            "in": "formData",
            "description": "sync external user groups on login"
          },
          {
            "name": "auth_source_ldap[tls]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "auth_source_ldap[groups_base]",
            "type": "string",
            "in": "formData",
            "description": "groups base DN"
          },
          {
            "name": "auth_source_ldap[use_netgroups]",
            "type": "boolean",
            "in": "formData",
            "description": "use NIS netgroups instead of posix groups, applicable only when server_type is posix or free_ipa"
          },
          {
            "name": "auth_source_ldap[server_type]",
            "type": "string",
            "enum": [
              "free_ipa",
              "active_directory",
              "posix"
            ],
            "in": "formData",
            "description": "type of the LDAP server"
          },
          {
            "name": "auth_source_ldap[ldap_filter]",
            "type": "string",
            "in": "formData",
            "description": "LDAP filter"
          },
          {
            "name": "auth_source_ldap[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "auth_source_ldap[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "auth_source_ldaps"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_auth_source_ldaps_id",
        "summary": "Delete an LDAP authentication source",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/auth_source_ldaps/{id}/test": {
      "put": {
        "tags": [
          "auth_source_ldaps"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_auth_source_ldaps_id_test",
        "summary": "Test LDAP connection",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/templates/{template_id}/template_inputs": {
      "get": {
        "tags": [
          "template_inputs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_templates_template_id_template_inputs",
        "summary": "List template inputs",
        "parameters": [
          {
            "name": "template_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "template_inputs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_templates_template_id_template_inputs",
        "summary": "Create a template input",
        "parameters": [
          {
            "name": "template_input[input_type]",
            "type": "string",
            "enum": [
              "user",
              "fact",
              "variable",
              "puppet_parameter"
            ],
            "in": "formData",
            "required": true,
            "description": "Input type"
          },
          {
            "name": "template_input[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Input name"
          },
          {
            "name": "template_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "template_input[description]",
            "type": "string",
            "in": "formData",
            "description": "Input description"
          },
          {
            "name": "template_input[required]",
            "type": "boolean",
            "in": "formData",
            "description": "Input is required"
          },
          {
            "name": "template_input[advanced]",
            "type": "boolean",
            "in": "formData",
            "description": "Input is advanced"
          },
          {
            "name": "template_input[fact_name]",
            "type": "string",
            "in": "formData",
            "description": "Fact name, used when input type is fact"
          },
          {
            "name": "template_input[variable_name]",
            "type": "string",
            "in": "formData",
            "description": "Variable name, used when input type is variable"
          },
          {
            "name": "template_input[puppet_class_name]",
            "type": "string",
            "in": "formData",
            "description": "Puppet class name, used when input type is puppet_parameter"
          },
          {
            "name": "template_input[puppet_parameter_name]",
            "type": "string",
            "in": "formData",
            "description": "Puppet parameter name, used when input type is puppet_parameter"
          },
          {
            "name": "template_input[options]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Selectable values for user inputs"
          },
          {
            "name": "template_input[value_type]",
            "type": "string",
            "enum": [
              "plain",
              "search",
              "date"
            ],
            "in": "formData",
            "description": "Value type, defaults to plain"
          },
          {
            "name": "template_input[resource_type]",
            "type": "string",
            "enum": [
              "AnsibleRole",
              "AnsibleVariable",
              "Architecture",
              "Audit",
              "AuthSource",
              "Bookmark",
              "ComputeProfile",
              "ComputeResource",
              "ConfigGroup",
              "ConfigReport",
              "DiscoveryRule",
              "Domain",
              "Environment",
              "ExternalUsergroup",
              "FactValue",
              "Filter",
              "ForemanOpenscap::ArfReport",
              "ForemanOpenscap::Policy",
              "ForemanOpenscap::ScapContent",
              "ForemanOpenscap::TailoringFile",
              "ForemanTasks::RecurringLogic",
              "ForemanTasks::Task",
              "ForemanVirtWhoConfigure::Config",
              "Host",
              "HostClass",
              "Hostgroup",
              "HttpProxy",
              "Image",
              "JobInvocation",
              "JobTemplate",
              "Katello::ActivationKey",
              "Katello::ContentView",
              "Katello::GpgKey",
              "Katello::HostCollection",
              "Katello::KTEnvironment",
              "Katello::Product",
              "Katello::Subscription",
              "Katello::SyncPlan",
              "KeyPair",
              "Location",
              "MailNotification",
              "Medium",
              "Model",
              "Operatingsystem",
              "Organization",
              "Parameter",
              "PersonalAccessToken",
              "ProvisioningTemplate",
              "Ptable",
              "Puppetclass",
              "PuppetclassLookupKey",
              "Realm",
              "RemoteExecutionFeature",
              "Report",
              "ReportTemplate",
              "Role",
              "Setting",
              "SmartProxy",
              "SshKey",
              "Subnet",
              "Template",
              "TemplateInvocation",
              "Trend",
              "User",
              "Usergroup",
              "VariableLookupKey"
            ],
            "in": "formData",
            "description": "For values of type search, this is the resource the value searches in"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/templates/{template_id}/template_inputs/{id}": {
      "get": {
        "tags": [
          "template_inputs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_templates_template_id_template_inputs_id",
        "summary": "Show template input details",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "template_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "template_inputs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_templates_template_id_template_inputs_id",
        "summary": "Delete a template input",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "template_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "template_inputs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_templates_template_id_template_inputs_id",
        "summary": "Update a template input",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "template_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "template_input[name]",
            "type": "string",
            "in": "formData",
            "description": "Input name"
          },
          {
            "name": "template_input[description]",
            "type": "string",
            "in": "formData",
            "description": "Input description"
          },
          {
            "name": "template_input[required]",
            "type": "boolean",
            "in": "formData",
            "description": "Input is required"
          },
          {
            "name": "template_input[advanced]",
            "type": "boolean",
            "in": "formData",
            "description": "Input is advanced"
          },
          {
            "name": "template_input[input_type]",
            "type": "string",
            "enum": [
              "user",
              "fact",
              "variable",
              "puppet_parameter"
            ],
            "in": "formData",
            "description": "Input type"
          },
          {
            "name": "template_input[fact_name]",
            "type": "string",
            "in": "formData",
            "description": "Fact name, used when input type is fact"
          },
          {
            "name": "template_input[variable_name]",
            "type": "string",
            "in": "formData",
            "description": "Variable name, used when input type is variable"
          },
          {
            "name": "template_input[puppet_class_name]",
            "type": "string",
            "in": "formData",
            "description": "Puppet class name, used when input type is puppet_parameter"
          },
          {
            "name": "template_input[puppet_parameter_name]",
            "type": "string",
            "in": "formData",
            "description": "Puppet parameter name, used when input type is puppet_parameter"
          },
          {
            "name": "template_input[options]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Selectable values for user inputs"
          },
          {
            "name": "template_input[value_type]",
            "type": "string",
            "enum": [
              "plain",
              "search",
              "date"
            ],
            "in": "formData",
            "description": "Value type, defaults to plain"
          },
          {
            "name": "template_input[resource_type]",
            "type": "string",
            "enum": [
              "AnsibleRole",
              "AnsibleVariable",
              "Architecture",
              "Audit",
              "AuthSource",
              "Bookmark",
              "ComputeProfile",
              "ComputeResource",
              "ConfigGroup",
              "ConfigReport",
              "DiscoveryRule",
              "Domain",
              "Environment",
              "ExternalUsergroup",
              "FactValue",
              "Filter",
              "ForemanOpenscap::ArfReport",
              "ForemanOpenscap::Policy",
              "ForemanOpenscap::ScapContent",
              "ForemanOpenscap::TailoringFile",
              "ForemanTasks::RecurringLogic",
              "ForemanTasks::Task",
              "ForemanVirtWhoConfigure::Config",
              "Host",
              "HostClass",
              "Hostgroup",
              "HttpProxy",
              "Image",
              "JobInvocation",
              "JobTemplate",
              "Katello::ActivationKey",
              "Katello::ContentView",
              "Katello::GpgKey",
              "Katello::HostCollection",
              "Katello::KTEnvironment",
              "Katello::Product",
              "Katello::Subscription",
              "Katello::SyncPlan",
              "KeyPair",
              "Location",
              "MailNotification",
              "Medium",
              "Model",
              "Operatingsystem",
              "Organization",
              "Parameter",
              "PersonalAccessToken",
              "ProvisioningTemplate",
              "Ptable",
              "Puppetclass",
              "PuppetclassLookupKey",
              "Realm",
              "RemoteExecutionFeature",
              "Report",
              "ReportTemplate",
              "Role",
              "Setting",
              "SmartProxy",
              "SshKey",
              "Subnet",
              "Template",
              "TemplateInvocation",
              "Trend",
              "User",
              "Usergroup",
              "VariableLookupKey"
            ],
            "in": "formData",
            "description": "For values of type search, this is the resource the value searches in"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/auth_sources": {
      "get": {
        "tags": [
          "auth_sources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_auth_sources",
        "summary": "List all authentication sources",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/auth_sources": {
      "get": {
        "tags": [
          "auth_sources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_auth_sources",
        "summary": "List all authentication sources per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/auth_sources": {
      "get": {
        "tags": [
          "auth_sources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_auth_sources",
        "summary": "List all authentication sources per organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/template_kinds": {
      "get": {
        "tags": [
          "template_kinds"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_template_kinds",
        "summary": "List all template kinds",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_proxies/smart_proxy_id/autosign": {
      "get": {
        "tags": [
          "autosign"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_smart_proxies_smart_proxy_id_autosign",
        "summary": "List all autosign entries",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_proxies/{smart_proxy_id}/autosign": {
      "post": {
        "tags": [
          "autosign"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_smart_proxies_smart_proxy_id_autosign",
        "summary": "Create autosign entry",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Autosign entry name"
          },
          {
            "name": "smart_proxy_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_proxies/{smart_proxy_id}/autosign/{id}": {
      "delete": {
        "tags": [
          "autosign"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_smart_proxies_smart_proxy_id_autosign_id",
        "summary": "Delete autosign entry",
        "parameters": [
          {
            "name": "smart_proxy_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Autosign entry name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/trends": {
      "get": {
        "tags": [
          "trends"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_trends",
        "summary": "List of trends counters",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "trends"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_trends",
        "summary": "Create a trend counter",
        "parameters": [
          {
            "name": "trendable_type",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "fact_name",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/trends/{id}": {
      "get": {
        "tags": [
          "trends"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_trends_id",
        "summary": "Show a trend",
        "parameters": [
          {
            "name": "trend_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "trends"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_trends_id",
        "summary": "Delete a trend counter",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/bookmarks": {
      "get": {
        "tags": [
          "bookmarks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_bookmarks",
        "summary": "List all bookmarks",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "bookmarks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_bookmarks",
        "summary": "Create a bookmark",
        "parameters": [
          {
            "name": "bookmark[query]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "bookmark[controller]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "bookmark[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "bookmark[public]",
            "type": "boolean",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/bookmarks/{id}": {
      "get": {
        "tags": [
          "bookmarks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_bookmarks_id",
        "summary": "Show a bookmark",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "bookmarks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_bookmarks_id",
        "summary": "Update a bookmark",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "bookmark[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "bookmark[controller]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "bookmark[query]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "bookmark[public]",
            "type": "boolean",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "bookmarks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_bookmarks_id",
        "summary": "Delete a bookmark",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/realms": {
      "get": {
        "tags": [
          "realms"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_realms",
        "summary": "List of realms",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "realms"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_realms",
        "summary": "Create a realm",
        "parameters": [
          {
            "name": "realm[realm_type]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Realm type, e.g. Red Hat Identity Management or Active Directory"
          },
          {
            "name": "realm[realm_proxy_id]",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Capsule ID to use within this realm"
          },
          {
            "name": "realm[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "The realm name, e.g. EXAMPLE.COM"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "realm[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "realm[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>The <strong>name</strong> field is used for the name of the realm.</p>\n"
      }
    },
    "/realms/{id}": {
      "get": {
        "tags": [
          "realms"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_realms_id",
        "summary": "Show a realm",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Numerical ID or realm name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "realms"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_realms_id",
        "summary": "Update a realm",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "realm[name]",
            "type": "string",
            "in": "formData",
            "description": "The realm name, e.g. EXAMPLE.COM"
          },
          {
            "name": "realm[realm_proxy_id]",
            "type": "number",
            "in": "formData",
            "description": "Capsule ID to use within this realm"
          },
          {
            "name": "realm[realm_type]",
            "type": "string",
            "in": "formData",
            "description": "Realm type, e.g. Red Hat Identity Management or Active Directory"
          },
          {
            "name": "realm[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "realm[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "realms"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_realms_id",
        "summary": "Delete a realm",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/common_parameters": {
      "get": {
        "tags": [
          "common_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_common_parameters",
        "summary": "List all global parameters",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "common_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_common_parameters",
        "summary": "Create a global parameter",
        "parameters": [
          {
            "name": "common_parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "required": true,
            "description": "Type of value"
          },
          {
            "name": "common_parameter[value]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "common_parameter[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "common_parameter[hidden_value]",
            "type": "boolean",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/common_parameters/{id}": {
      "get": {
        "tags": [
          "common_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_common_parameters_id",
        "summary": "Show a global parameter",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "common_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_common_parameters_id",
        "summary": "Update a global parameter",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "common_parameter[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "common_parameter[value]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "common_parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Type of value"
          },
          {
            "name": "common_parameter[hidden_value]",
            "type": "boolean",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "common_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_common_parameters_id",
        "summary": "Delete a global parameter",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/report_templates": {
      "get": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_report_templates",
        "summary": "List all report templates",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_report_templates",
        "summary": "Create a report template",
        "parameters": [
          {
            "name": "report_template[template]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "report_template[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "report_template[snippet]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "report_template[audit_comment]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "report_template[locked]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the template is locked for editing"
          },
          {
            "name": "report_template[default]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the template is added automatically to new organizations and locations"
          },
          {
            "name": "report_template[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "report_template[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/report_templates": {
      "get": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_report_templates",
        "summary": "List all report templates per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/report_templates": {
      "get": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_report_templates",
        "summary": "List all report templates per organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/report_templates/{id}": {
      "get": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_report_templates_id",
        "summary": "Show a report template",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_report_templates_id",
        "summary": "Update a report template",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "report_template[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "report_template[template]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "report_template[snippet]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "report_template[audit_comment]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "report_template[locked]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the template is locked for editing"
          },
          {
            "name": "report_template[default]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the template is added automatically to new organizations and locations"
          },
          {
            "name": "report_template[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "report_template[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_report_templates_id",
        "summary": "Delete a report template",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/report_templates/import": {
      "post": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_report_templates_import",
        "summary": "Import a report template",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "report_template[name]",
            "type": "string",
            "in": "formData",
            "description": "template name"
          },
          {
            "name": "report_template[template]",
            "type": "string",
            "in": "formData",
            "description": "template contents including metadata"
          },
          {
            "name": "report_template[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "report_template[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          },
          {
            "name": "options[force]",
            "type": "boolean",
            "in": "formData",
            "description": "use if you want update locked templates"
          },
          {
            "name": "options[associate]",
            "type": "string",
            "enum": [
              "new",
              "always",
              "never"
            ],
            "in": "formData",
            "description": "determines when the template should associate objects based on metadata, new means only when new template is being created, always means both for new and existing template which is only being updated, never ignores metadata"
          },
          {
            "name": "options[lock]",
            "type": "boolean",
            "in": "formData",
            "description": "lock imported templates (false by default)"
          },
          {
            "name": "options[default]",
            "type": "boolean",
            "in": "formData",
            "description": "makes the template default meaning it will be automatically associated with newly created organizations and locations (false by default)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/report_templates/revision": {
      "get": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_report_templates_revision",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "version",
            "type": "string",
            "in": "query",
            "description": "template version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/report_templates/{id}/clone": {
      "post": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_report_templates_id_clone",
        "summary": "Clone a template",
        "parameters": [
          {
            "name": "report_template[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "template name"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/report_templates/{id}/export": {
      "get": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_report_templates_id_export",
        "summary": "Export a report template to ERB",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/report_templates/{id}/generate": {
      "post": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_report_templates_id_generate",
        "summary": "Generate report from a template",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "gzip",
            "type": "boolean",
            "in": "formData",
            "description": "Compress the report uzing gzip",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/report_templates/{id}/schedule_report": {
      "post": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_report_templates_id_schedule_report",
        "summary": "Schedule generating of a report",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "gzip",
            "type": "boolean",
            "in": "formData",
            "description": "Compress the report using gzip"
          },
          {
            "name": "mail_to",
            "type": "string",
            "in": "formData",
            "description": "If set, scheduled report will be delivered via e-mail. Use ',' to separate multiple email addresses."
          },
          {
            "name": "generate_at",
            "type": "string",
            "in": "formData",
            "description": "UTC time to generate report at"
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response",
            "schema": {
              "type": "object",
              "properties": {
                "job_id": {
                  "type": "string",
                  "description": "An ID of job, which generates report. To be used with report_data API endpoint for report data retrieval."
                },
                "data_url": {
                  "type": "string",
                  "description": "An url to get resulting report from. This is not available when report is delivered via e-mail."
                }
              },
              "additionalProperties": false,
              "required": [
                "job_id",
                "data_url"
              ]
            }
          }
        },
        "description": "\n<p>The reports are generated asynchronously. If mail_to is not given, action\nreturns an url to get resulting report from (see\n<strong>report_data</strong>).</p>\n"
      }
    },
    "/report_templates/{id}/report_data/{job_id}": {
      "get": {
        "tags": [
          "report_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_report_templates_id_report_data_job_id",
        "summary": "Downloads a generated report",
        "parameters": [
          {
            "name": "job_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID assigned to generation job by the schedule command"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>Returns the report data as a raw response. In case the report hasn&#39;t\nbeen generated yet, it will return an empty response with http status 204 -\nNoContent.</p>\n"
      }
    },
    "/compute_resources/{compute_resource_id}/compute_profiles/{compute_profile_id}/compute_attributes": {
      "get": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_compute_resource_id_compute_profiles_compute_profile_id_compute_attributes",
        "summary": "List of compute attributes for provided compute profile and compute resource",
        "parameters": [
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of compute_resource"
          },
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of compute profile"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_compute_resources_compute_resource_id_compute_profiles_compute_profile_id_compute_attributes",
        "summary": "Create a compute attributes set",
        "parameters": [
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_profiles/{compute_profile_id}/compute_resources/{compute_resource_id}/compute_attributes": {
      "get": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_profiles_compute_profile_id_compute_resources_compute_resource_id_compute_attributes",
        "summary": "List of compute attributes for provided compute profile and compute resource",
        "parameters": [
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of compute_resource"
          },
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of compute profile"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_compute_profiles_compute_profile_id_compute_resources_compute_resource_id_compute_attributes",
        "summary": "Create a compute attributes set",
        "parameters": [
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{compute_resource_id}/compute_attributes": {
      "get": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_compute_resource_id_compute_attributes",
        "summary": "List of compute attributes for compute resource",
        "parameters": [
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of compute profile"
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of compute_resource"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_compute_resources_compute_resource_id_compute_attributes",
        "summary": "Create a compute attributes set",
        "parameters": [
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_profiles/{compute_profile_id}/compute_attributes": {
      "get": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_profiles_compute_profile_id_compute_attributes",
        "summary": "List of compute attributes for compute profile",
        "parameters": [
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of compute_resource"
          },
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of compute profile"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_compute_profiles_compute_profile_id_compute_attributes",
        "summary": "Create a compute attributes set",
        "parameters": [
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_attributes/{id}": {
      "get": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_attributes_id",
        "summary": "Show a compute attributes set",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compute_attributes_id",
        "summary": "Update a compute attributes set",
        "parameters": [
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{compute_resource_id}/compute_profiles/{compute_profile_id}/compute_attributes/{id}": {
      "get": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_compute_resource_id_compute_profiles_compute_profile_id_compute_attributes_id",
        "summary": "Show a compute attributes set",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_profile_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_resource_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compute_resources_compute_resource_id_compute_profiles_compute_profile_id_compute_attributes_id",
        "summary": "Update a compute attributes set",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_profiles/{compute_profile_id}/compute_resources/{compute_resource_id}/compute_attributes/{id}": {
      "get": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_profiles_compute_profile_id_compute_resources_compute_resource_id_compute_attributes_id",
        "summary": "Show a compute attributes set",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_resource_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_profile_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compute_profiles_compute_profile_id_compute_resources_compute_resource_id_compute_attributes_id",
        "summary": "Update a compute attributes set",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{compute_resource_id}/compute_attributes/{id}": {
      "get": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_compute_resource_id_compute_attributes_id",
        "summary": "Show a compute attributes set",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_resource_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compute_resources_compute_resource_id_compute_attributes_id",
        "summary": "Update a compute attributes set",
        "parameters": [
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_profiles/{compute_profile_id}/compute_attributes/{id}": {
      "get": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_profiles_compute_profile_id_compute_attributes_id",
        "summary": "Show a compute attributes set",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_profile_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compute_profiles_compute_profile_id_compute_attributes_id",
        "summary": "Update a compute attributes set",
        "parameters": [
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_attributes": {
      "post": {
        "tags": [
          "compute_attributes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_compute_attributes",
        "summary": "Create a compute attributes set",
        "parameters": [
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "compute_profile_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_reports",
        "summary": "List all reports",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_reports",
        "summary": "Create a report",
        "parameters": [
          {
            "name": "report[reported_at]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "UTC time of report"
          },
          {
            "name": "report[host]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Hostname or certname"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "report[logs]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Optional array of log hashes"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/reports/{id}": {
      "get": {
        "tags": [
          "reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_reports_id",
        "summary": "Show a report",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_reports_id",
        "summary": "Delete a report",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/reports/last": {
      "get": {
        "tags": [
          "reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_reports_last",
        "summary": "Show the last report for a host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_profiles": {
      "get": {
        "tags": [
          "compute_profiles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_profiles",
        "summary": "List of compute profiles",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "compute_profiles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_compute_profiles",
        "summary": "Create a compute profile",
        "parameters": [
          {
            "name": "compute_profile[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_profiles/{id}": {
      "get": {
        "tags": [
          "compute_profiles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_profiles_id",
        "summary": "Show a compute profile",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "compute_profiles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compute_profiles_id",
        "summary": "Update a compute profile",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "compute_profile[name]",
            "type": "string",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "compute_profiles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_compute_profiles_id",
        "summary": "Delete a compute profile",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "roles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_roles",
        "summary": "List all roles",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "roles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_roles",
        "summary": "Create a role",
        "parameters": [
          {
            "name": "role[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "role[description]",
            "type": "string",
            "in": "formData",
            "description": "Role description"
          },
          {
            "name": "role[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "role[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": [
          "roles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_roles_id",
        "summary": "Show a role",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "description",
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "roles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_roles_id",
        "summary": "Update a role",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "role[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "role[description]",
            "type": "string",
            "in": "formData",
            "description": "Role description"
          },
          {
            "name": "role[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "role[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "roles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_roles_id",
        "summary": "Delete a role",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/roles/{id}/clone": {
      "post": {
        "tags": [
          "roles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_roles_id_clone",
        "summary": "Clone a role",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "role[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "role[description]",
            "type": "string",
            "in": "formData",
            "description": "Role description"
          },
          {
            "name": "role[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "role[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources",
        "summary": "List all compute resources",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_compute_resources",
        "summary": "Create a compute resource",
        "parameters": [
          {
            "name": "compute_resource[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "compute_resource[provider]",
            "type": "string",
            "in": "formData",
            "description": "Providers include Libvirt, Ovirt, EC2, Vmware, Openstack, Rackspace, GCE"
          },
          {
            "name": "compute_resource[url]",
            "type": "string",
            "in": "formData",
            "description": "URL for Libvirt, RHEV, RHEL OpenStack Platform and Rackspace"
          },
          {
            "name": "compute_resource[description]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "compute_resource[user]",
            "type": "string",
            "in": "formData",
            "description": "Username for RHEV, EC2, VMware, RHEL OpenStack Platform. Access Key for EC2."
          },
          {
            "name": "compute_resource[password]",
            "type": "string",
            "in": "formData",
            "description": "Password for RHEV, EC2, VMware, RHEL OpenStack Platform. Secret key for EC2"
          },
          {
            "name": "compute_resource[uuid]",
            "type": "string",
            "in": "formData",
            "description": "Deprecated, please use datacenter"
          },
          {
            "name": "compute_resource[datacenter]",
            "type": "string",
            "in": "formData",
            "description": "for RHEV, VMware Datacenter"
          },
          {
            "name": "compute_resource[use_v4]",
            "type": "boolean",
            "in": "formData",
            "description": "for RHEV only"
          },
          {
            "name": "compute_resource[ovirt_quota]",
            "type": "string",
            "in": "formData",
            "description": "for RHEV only, ID of quota to use"
          },
          {
            "name": "compute_resource[public_key]",
            "type": "string",
            "in": "formData",
            "description": "for RHEV only"
          },
          {
            "name": "compute_resource[region]",
            "type": "string",
            "in": "formData",
            "description": "for EC2 only, use 'us-gov-west-1' for GovCloud region"
          },
          {
            "name": "compute_resource[tenant]",
            "type": "string",
            "in": "formData",
            "description": "for RHEL OpenStack Platform only"
          },
          {
            "name": "compute_resource[domain]",
            "type": "string",
            "in": "formData",
            "description": "for RHEL OpenStack Platform (v3) only"
          },
          {
            "name": "compute_resource[project_domain_name]",
            "type": "string",
            "in": "formData",
            "description": "for RHEL OpenStack Platform (v3) only"
          },
          {
            "name": "compute_resource[project_domain_id]",
            "type": "string",
            "in": "formData",
            "description": "for RHEL OpenStack Platform (v3) only"
          },
          {
            "name": "compute_resource[server]",
            "type": "string",
            "in": "formData",
            "description": "for VMware"
          },
          {
            "name": "compute_resource[set_console_password]",
            "type": "boolean",
            "in": "formData",
            "description": "for Libvirt and VMware only"
          },
          {
            "name": "compute_resource[display_type]",
            "type": "string",
            "enum": [
              "VNC",
              "SPICE"
            ],
            "in": "formData",
            "description": "for Libvirt only"
          },
          {
            "name": "compute_resource[caching_enabled]",
            "type": "boolean",
            "in": "formData",
            "description": "enable caching, for VMware only"
          },
          {
            "name": "compute_resource[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "compute_resource[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id",
        "summary": "Show a compute resource",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compute_resources_id",
        "summary": "Update a compute resource",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "compute_resource[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "compute_resource[provider]",
            "type": "string",
            "in": "formData",
            "description": "Providers include Libvirt, Ovirt, EC2, Vmware, Openstack, Rackspace, GCE"
          },
          {
            "name": "compute_resource[url]",
            "type": "string",
            "in": "formData",
            "description": "URL for Libvirt, RHEV, RHEL OpenStack Platform and Rackspace"
          },
          {
            "name": "compute_resource[description]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "compute_resource[user]",
            "type": "string",
            "in": "formData",
            "description": "Username for RHEV, EC2, VMware, RHEL OpenStack Platform. Access Key for EC2."
          },
          {
            "name": "compute_resource[password]",
            "type": "string",
            "in": "formData",
            "description": "Password for RHEV, EC2, VMware, RHEL OpenStack Platform. Secret key for EC2"
          },
          {
            "name": "compute_resource[uuid]",
            "type": "string",
            "in": "formData",
            "description": "Deprecated, please use datacenter"
          },
          {
            "name": "compute_resource[datacenter]",
            "type": "string",
            "in": "formData",
            "description": "for RHEV, VMware Datacenter"
          },
          {
            "name": "compute_resource[use_v4]",
            "type": "boolean",
            "in": "formData",
            "description": "for RHEV only"
          },
          {
            "name": "compute_resource[ovirt_quota]",
            "type": "string",
            "in": "formData",
            "description": "for RHEV only, ID of quota to use"
          },
          {
            "name": "compute_resource[public_key]",
            "type": "string",
            "in": "formData",
            "description": "for RHEV only"
          },
          {
            "name": "compute_resource[region]",
            "type": "string",
            "in": "formData",
            "description": "for EC2 only, use 'us-gov-west-1' for GovCloud region"
          },
          {
            "name": "compute_resource[tenant]",
            "type": "string",
            "in": "formData",
            "description": "for RHEL OpenStack Platform only"
          },
          {
            "name": "compute_resource[domain]",
            "type": "string",
            "in": "formData",
            "description": "for RHEL OpenStack Platform (v3) only"
          },
          {
            "name": "compute_resource[project_domain_name]",
            "type": "string",
            "in": "formData",
            "description": "for RHEL OpenStack Platform (v3) only"
          },
          {
            "name": "compute_resource[project_domain_id]",
            "type": "string",
            "in": "formData",
            "description": "for RHEL OpenStack Platform (v3) only"
          },
          {
            "name": "compute_resource[server]",
            "type": "string",
            "in": "formData",
            "description": "for VMware"
          },
          {
            "name": "compute_resource[set_console_password]",
            "type": "boolean",
            "in": "formData",
            "description": "for Libvirt and VMware only"
          },
          {
            "name": "compute_resource[display_type]",
            "type": "string",
            "enum": [
              "VNC",
              "SPICE"
            ],
            "in": "formData",
            "description": "for Libvirt only"
          },
          {
            "name": "compute_resource[caching_enabled]",
            "type": "boolean",
            "in": "formData",
            "description": "enable caching, for VMware only"
          },
          {
            "name": "compute_resource[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "compute_resource[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_compute_resources_id",
        "summary": "Delete a compute resource",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_images": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_images",
        "summary": "List available images for a compute resource",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_clusters": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_clusters",
        "summary": "List available clusters for a compute resource",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_flavors": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_flavors",
        "summary": "List available flavors for a compute resource",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_folders": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_folders",
        "summary": "List available folders for a compute resource",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_zones": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_zones",
        "summary": "List available zone for a compute resource",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_networks": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_networks",
        "summary": "List available networks for a compute resource",
        "parameters": [
          {
            "name": "cluster_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_clusters/{cluster_id}/available_networks": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_clusters_cluster_id_available_networks",
        "summary": "List available networks for a compute resource cluster",
        "parameters": [
          {
            "name": "cluster_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_clusters/{cluster_id}/available_resource_pools": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_clusters_cluster_id_available_resource_pools",
        "summary": "List resource pools for a compute resource cluster",
        "parameters": [
          {
            "name": "cluster_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/storage_domains/{storage_domain_id}": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_storage_domains_storage_domain_id",
        "summary": "List attributes for a given storage domain",
        "parameters": [
          {
            "name": "storage_domain_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_storage_domains": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_storage_domains",
        "summary": "List storage domains for a compute resource",
        "parameters": [
          {
            "name": "storage_domain",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "cluster_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_storage_domains/{storage_domain}": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_storage_domains_storage_domain",
        "summary": "List attributes for a given storage domain",
        "parameters": [
          {
            "name": "cluster_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "storage_domain",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_clusters/{cluster_id}/available_storage_domains": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_clusters_cluster_id_available_storage_domains",
        "summary": "List storage domains for a compute resource",
        "parameters": [
          {
            "name": "storage_domain",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "cluster_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/storage_pods/{storage_pod_id}": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_storage_pods_storage_pod_id",
        "summary": "List attributes for a given storage pod",
        "parameters": [
          {
            "name": "storage_pod_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_storage_pods": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_storage_pods",
        "summary": "List storage pods for a compute resource",
        "parameters": [
          {
            "name": "storage_pod",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "cluster_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_storage_pods/{storage_pod}": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_storage_pods_storage_pod",
        "summary": "List attributes for a given storage pod",
        "parameters": [
          {
            "name": "cluster_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "storage_pod",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_clusters/{cluster_id}/available_storage_pods": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_clusters_cluster_id_available_storage_pods",
        "summary": "List storage pods for a compute resource",
        "parameters": [
          {
            "name": "storage_pod",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "cluster_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/available_security_groups": {
      "get": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_id_available_security_groups",
        "summary": "List available security groups for a compute resource",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/associate": {
      "put": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compute_resources_id_associate",
        "summary": "Associate VMs to Hosts",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{id}/refresh_cache": {
      "put": {
        "tags": [
          "compute_resources"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compute_resources_id_refresh_cache",
        "summary": "Refresh Compute Resource Cache",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/usergroups": {
      "get": {
        "tags": [
          "usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_usergroups",
        "summary": "List all user groups",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_usergroups",
        "summary": "Create a user group",
        "parameters": [
          {
            "name": "usergroup[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "usergroup[admin]",
            "type": "boolean",
            "in": "formData",
            "description": "is an admin user group"
          },
          {
            "name": "usergroup[user_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "usergroup[usergroup_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "usergroup[role_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/usergroups/{id}": {
      "get": {
        "tags": [
          "usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_usergroups_id",
        "summary": "Show a user group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_usergroups_id",
        "summary": "Update a user group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "usergroup[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "usergroup[admin]",
            "type": "boolean",
            "in": "formData",
            "description": "is an admin user group"
          },
          {
            "name": "usergroup[user_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "usergroup[usergroup_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "usergroup[role_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>User groups linked to external groups (LDAP) are automatically synced with\nthese groups on update. Remember this synchronization will remove any LDAP\nusers manually added to the Foreman user group. Only LDAP users in the\nexternal groups will remain. Internal users can be added or removed freely.</p>\n"
      },
      "delete": {
        "tags": [
          "usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_usergroups_id",
        "summary": "Delete a user group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_groups": {
      "get": {
        "tags": [
          "config_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_config_groups",
        "summary": "List of config groups",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "config_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_config_groups",
        "summary": "Create a config group",
        "parameters": [
          {
            "name": "config_group[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "config_group[puppetclass_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_groups/{id}": {
      "get": {
        "tags": [
          "config_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_config_groups_id",
        "summary": "Show a config group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "config_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_config_groups_id",
        "summary": "Update a config group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "config_group[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "config_group[puppetclass_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "config_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_config_groups_id",
        "summary": "Delete a config group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/settings": {
      "get": {
        "tags": [
          "settings"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_settings",
        "summary": "List all settings",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/settings/{id}": {
      "get": {
        "tags": [
          "settings"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_settings_id",
        "summary": "Show a setting",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "settings"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_settings_id",
        "summary": "Update a setting",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "setting[value]",
            "type": "string",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_reports": {
      "get": {
        "tags": [
          "config_reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_config_reports",
        "summary": "List all reports",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "config_reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_config_reports",
        "summary": "Create a report",
        "parameters": [
          {
            "name": "config_report[reported_at]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "UTC time of report"
          },
          {
            "name": "config_report[host]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Hostname or certname"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "config_report[logs]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Optional array of log hashes"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_reports/{id}": {
      "get": {
        "tags": [
          "config_reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_config_reports_id",
        "summary": "Show a report",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "config_reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_config_reports_id",
        "summary": "Delete a report",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/config_reports/last": {
      "get": {
        "tags": [
          "config_reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_config_reports_last",
        "summary": "Show the last report for a host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_class_parameters": {
      "get": {
        "tags": [
          "smart_class_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_smart_class_parameters",
        "summary": "List all smart class parameters",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/smart_class_parameters": {
      "get": {
        "tags": [
          "smart_class_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_smart_class_parameters",
        "summary": "List of smart class parameters for a specific host",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{hostgroup_id}/smart_class_parameters": {
      "get": {
        "tags": [
          "smart_class_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups_hostgroup_id_smart_class_parameters",
        "summary": "List of smart class parameters for a specific host group",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/puppetclasses/{puppetclass_id}/smart_class_parameters": {
      "get": {
        "tags": [
          "smart_class_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_puppetclasses_puppetclass_id_smart_class_parameters",
        "summary": "List of smart class parameters for a specific Puppet class",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/environments/{environment_id}/smart_class_parameters": {
      "get": {
        "tags": [
          "smart_class_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_environments_environment_id_smart_class_parameters",
        "summary": "List of smart class parameters for a specific environment",
        "parameters": [
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "environment_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/environments/{environment_id}/puppetclasses/{puppetclass_id}/smart_class_parameters": {
      "get": {
        "tags": [
          "smart_class_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_environments_environment_id_puppetclasses_puppetclass_id_smart_class_parameters",
        "summary": "List of smart class parameters for a specific environment/Puppet class combination",
        "parameters": [
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "environment_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_class_parameters/{id}": {
      "get": {
        "tags": [
          "smart_class_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_smart_class_parameters_id",
        "summary": "Show a smart class parameter",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "smart_class_parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_smart_class_parameters_id",
        "summary": "Update a smart class parameter",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "smart_class_parameter[override]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether the smart class parameter value is managed by Satellite"
          },
          {
            "name": "smart_class_parameter[description]",
            "type": "string",
            "in": "formData",
            "description": "Description of smart class"
          },
          {
            "name": "smart_class_parameter[default_value]",
            "type": "any_type",
            "in": "formData",
            "description": "Value to use when there is no match"
          },
          {
            "name": "smart_class_parameter[hidden_value]",
            "type": "boolean",
            "in": "formData",
            "description": "When enabled the parameter is hidden in the UI"
          },
          {
            "name": "smart_class_parameter[use_puppet_default]",
            "type": "boolean",
            "in": "formData",
            "description": "Deprecated, please use omit"
          },
          {
            "name": "smart_class_parameter[omit]",
            "type": "boolean",
            "in": "formData",
            "description": "Satellite will not send this parameter in classification output. Puppet will use the value defined in the Puppet manifest for this parameter"
          },
          {
            "name": "smart_class_parameter[path]",
            "type": "string",
            "in": "formData",
            "description": "The order in which values are resolved"
          },
          {
            "name": "smart_class_parameter[validator_type]",
            "type": "string",
            "enum": [
              "regexp",
              "list"
            ],
            "in": "formData",
            "description": "Types of validation values"
          },
          {
            "name": "smart_class_parameter[validator_rule]",
            "type": "string",
            "in": "formData",
            "description": "Used to enforce certain values for the parameter values"
          },
          {
            "name": "smart_class_parameter[override_value_order]",
            "type": "string",
            "in": "formData",
            "description": "The order in which values are resolved"
          },
          {
            "name": "smart_class_parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Types of variable values"
          },
          {
            "name": "smart_class_parameter[required]",
            "type": "boolean",
            "in": "formData",
            "description": "If true, will raise an error if there is no default value and no matcher provide a value"
          },
          {
            "name": "smart_class_parameter[merge_overrides]",
            "type": "boolean",
            "in": "formData",
            "description": "Merge all matching values (only array/hash type)"
          },
          {
            "name": "smart_class_parameter[merge_default]",
            "type": "boolean",
            "in": "formData",
            "description": "Include default value when merging all matching values"
          },
          {
            "name": "smart_class_parameter[avoid_duplicates]",
            "type": "boolean",
            "in": "formData",
            "description": "Remove duplicate values (only array type)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_templates": {
      "get": {
        "tags": [
          "config_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_config_templates",
        "summary": "List provisioning templates",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "config_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_config_templates",
        "summary": "Create a provisioning template",
        "parameters": [
          {
            "name": "config_template[template]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "config_template[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "template name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "config_template[snippet]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "config_template[audit_comment]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "config_template[template_kind_id]",
            "type": "number",
            "in": "formData",
            "description": "not relevant for snippet"
          },
          {
            "name": "config_template[template_combinations_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of template combinations (hostgroup_id, environment_id)"
          },
          {
            "name": "config_template[operatingsystem_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of operating system IDs to associate with the template"
          },
          {
            "name": "config_template[locked]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the template is locked for editing"
          },
          {
            "name": "config_template[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "config_template[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{operatingsystem_id}/config_templates": {
      "get": {
        "tags": [
          "config_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_operatingsystem_id_config_templates",
        "summary": "List provisioning templates per operating system",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/config_templates": {
      "get": {
        "tags": [
          "config_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_config_templates",
        "summary": "List provisioning templates per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/config_templates": {
      "get": {
        "tags": [
          "config_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_config_templates",
        "summary": "List provisioning templates per organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_templates/{id}": {
      "get": {
        "tags": [
          "config_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_config_templates_id",
        "summary": "Show provisioning template details",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "config_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_config_templates_id",
        "summary": "Update a provisioning template",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "config_template[name]",
            "type": "string",
            "in": "formData",
            "description": "template name"
          },
          {
            "name": "config_template[template]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "config_template[snippet]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "config_template[audit_comment]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "config_template[template_kind_id]",
            "type": "number",
            "in": "formData",
            "description": "not relevant for snippet"
          },
          {
            "name": "config_template[template_combinations_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of template combinations (hostgroup_id, environment_id)"
          },
          {
            "name": "config_template[operatingsystem_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of operating system IDs to associate with the template"
          },
          {
            "name": "config_template[locked]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the template is locked for editing"
          },
          {
            "name": "config_template[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "config_template[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "config_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_config_templates_id",
        "summary": "Delete a provisioning template",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_templates/revision": {
      "get": {
        "tags": [
          "config_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_config_templates_revision",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "version",
            "type": "string",
            "in": "query",
            "description": "template version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_templates/build_pxe_default": {
      "post": {
        "tags": [
          "config_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_config_templates_build_pxe_default",
        "summary": "Update the default PXE menu on all configured TFTP servers",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_templates/{id}/clone": {
      "post": {
        "tags": [
          "config_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_config_templates_id_clone",
        "summary": "Clone a provision template",
        "parameters": [
          {
            "name": "config_template[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "template name"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_users",
        "summary": "List all users",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "role_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of role"
          },
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_users",
        "summary": "Create a user",
        "parameters": [
          {
            "name": "user[auth_source_id]",
            "type": "number",
            "in": "formData",
            "required": true
          },
          {
            "name": "user[mail]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "user[login]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "user[firstname]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "user[lastname]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "user[description]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "user[admin]",
            "type": "boolean",
            "in": "formData",
            "description": "is an admin account"
          },
          {
            "name": "user[password]",
            "type": "string",
            "in": "formData",
            "description": "Required unless user is in an external authentication source"
          },
          {
            "name": "user[default_location_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "user[default_organization_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "user[timezone]",
            "type": "string",
            "enum": [
              "International Date Line West",
              "American Samoa",
              "Midway Island",
              "Hawaii",
              "Alaska",
              "Pacific Time (US & Canada)",
              "Tijuana",
              "Arizona",
              "Chihuahua",
              "Mazatlan",
              "Mountain Time (US & Canada)",
              "Central America",
              "Central Time (US & Canada)",
              "Guadalajara",
              "Mexico City",
              "Monterrey",
              "Saskatchewan",
              "Bogota",
              "Eastern Time (US & Canada)",
              "Indiana (East)",
              "Lima",
              "Quito",
              "Atlantic Time (Canada)",
              "Caracas",
              "Georgetown",
              "La Paz",
              "Puerto Rico",
              "Santiago",
              "Newfoundland",
              "Brasilia",
              "Buenos Aires",
              "Greenland",
              "Montevideo",
              "Mid-Atlantic",
              "Azores",
              "Cape Verde Is.",
              "Casablanca",
              "Dublin",
              "Edinburgh",
              "Lisbon",
              "London",
              "Monrovia",
              "UTC",
              "Amsterdam",
              "Belgrade",
              "Berlin",
              "Bern",
              "Bratislava",
              "Brussels",
              "Budapest",
              "Copenhagen",
              "Ljubljana",
              "Madrid",
              "Paris",
              "Prague",
              "Rome",
              "Sarajevo",
              "Skopje",
              "Stockholm",
              "Vienna",
              "Warsaw",
              "West Central Africa",
              "Zagreb",
              "Zurich",
              "Athens",
              "Bucharest",
              "Cairo",
              "Harare",
              "Helsinki",
              "Jerusalem",
              "Kaliningrad",
              "Kyiv",
              "Pretoria",
              "Riga",
              "Sofia",
              "Tallinn",
              "Vilnius",
              "Baghdad",
              "Istanbul",
              "Kuwait",
              "Minsk",
              "Moscow",
              "Nairobi",
              "Riyadh",
              "St. Petersburg",
              "Tehran",
              "Abu Dhabi",
              "Baku",
              "Muscat",
              "Samara",
              "Tbilisi",
              "Volgograd",
              "Yerevan",
              "Kabul",
              "Ekaterinburg",
              "Islamabad",
              "Karachi",
              "Tashkent",
              "Chennai",
              "Kolkata",
              "Mumbai",
              "New Delhi",
              "Sri Jayawardenepura",
              "Kathmandu",
              "Almaty",
              "Astana",
              "Dhaka",
              "Urumqi",
              "Rangoon",
              "Bangkok",
              "Hanoi",
              "Jakarta",
              "Krasnoyarsk",
              "Novosibirsk",
              "Beijing",
              "Chongqing",
              "Hong Kong",
              "Irkutsk",
              "Kuala Lumpur",
              "Perth",
              "Singapore",
              "Taipei",
              "Ulaanbaatar",
              "Osaka",
              "Sapporo",
              "Seoul",
              "Tokyo",
              "Yakutsk",
              "Adelaide",
              "Darwin",
              "Brisbane",
              "Canberra",
              "Guam",
              "Hobart",
              "Melbourne",
              "Port Moresby",
              "Sydney",
              "Vladivostok",
              "Magadan",
              "New Caledonia",
              "Solomon Is.",
              "Srednekolymsk",
              "Auckland",
              "Fiji",
              "Kamchatka",
              "Marshall Is.",
              "Wellington",
              "Chatham Is.",
              "Nuku'alofa",
              "Samoa",
              "Tokelau Is."
            ],
            "in": "formData",
            "description": "User's timezone"
          },
          {
            "name": "user[locale]",
            "type": "string",
            "enum": [
              "ca",
              "cs_CZ",
              "de",
              "en",
              "en_GB",
              "es",
              "fr",
              "gl",
              "it",
              "ja",
              "ko",
              "nl_NL",
              "pl",
              "pt_BR",
              "ru",
              "sv_SE",
              "zh_CN",
              "zh_TW"
            ],
            "in": "formData",
            "description": "User's preferred locale"
          },
          {
            "name": "user[role_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "user[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "user[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>Adds role &#39;Default role&#39; to the user by default</p>\n"
      }
    },
    "/auth_source_ldaps/{auth_source_ldap_id}/users": {
      "get": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_auth_source_ldaps_auth_source_ldap_id_users",
        "summary": "List all users for LDAP authentication source",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "role_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of role"
          },
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/auth_source_externals/{auth_source_external_id}/users": {
      "get": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_auth_source_externals_auth_source_external_id_users",
        "summary": "List all users for external authentication source",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "role_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of role"
          },
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "auth_source_external_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/usergroups/{usergroup_id}/users": {
      "get": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_usergroups_usergroup_id_users",
        "summary": "List all users for user group",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "role_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of role"
          },
          {
            "name": "auth_source_ldap_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of user group"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/roles/{role_id}/users": {
      "get": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_roles_role_id_users",
        "summary": "List all users for role",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "role_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of role"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/users": {
      "get": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_users",
        "summary": "List all users for location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "role_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of role"
          },
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/users": {
      "get": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_users",
        "summary": "List all users for organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "role_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of role"
          },
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_users_id",
        "summary": "Show a user",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_users_id",
        "summary": "Update a user",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "user[login]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "user[firstname]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "user[lastname]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "user[mail]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "user[description]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "user[admin]",
            "type": "boolean",
            "in": "formData",
            "description": "is an admin account"
          },
          {
            "name": "user[password]",
            "type": "string",
            "in": "formData",
            "description": "Required unless user is in an external authentication source"
          },
          {
            "name": "user[default_location_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "user[default_organization_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "user[auth_source_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "user[timezone]",
            "type": "string",
            "enum": [
              "International Date Line West",
              "American Samoa",
              "Midway Island",
              "Hawaii",
              "Alaska",
              "Pacific Time (US & Canada)",
              "Tijuana",
              "Arizona",
              "Chihuahua",
              "Mazatlan",
              "Mountain Time (US & Canada)",
              "Central America",
              "Central Time (US & Canada)",
              "Guadalajara",
              "Mexico City",
              "Monterrey",
              "Saskatchewan",
              "Bogota",
              "Eastern Time (US & Canada)",
              "Indiana (East)",
              "Lima",
              "Quito",
              "Atlantic Time (Canada)",
              "Caracas",
              "Georgetown",
              "La Paz",
              "Puerto Rico",
              "Santiago",
              "Newfoundland",
              "Brasilia",
              "Buenos Aires",
              "Greenland",
              "Montevideo",
              "Mid-Atlantic",
              "Azores",
              "Cape Verde Is.",
              "Casablanca",
              "Dublin",
              "Edinburgh",
              "Lisbon",
              "London",
              "Monrovia",
              "UTC",
              "Amsterdam",
              "Belgrade",
              "Berlin",
              "Bern",
              "Bratislava",
              "Brussels",
              "Budapest",
              "Copenhagen",
              "Ljubljana",
              "Madrid",
              "Paris",
              "Prague",
              "Rome",
              "Sarajevo",
              "Skopje",
              "Stockholm",
              "Vienna",
              "Warsaw",
              "West Central Africa",
              "Zagreb",
              "Zurich",
              "Athens",
              "Bucharest",
              "Cairo",
              "Harare",
              "Helsinki",
              "Jerusalem",
              "Kaliningrad",
              "Kyiv",
              "Pretoria",
              "Riga",
              "Sofia",
              "Tallinn",
              "Vilnius",
              "Baghdad",
              "Istanbul",
              "Kuwait",
              "Minsk",
              "Moscow",
              "Nairobi",
              "Riyadh",
              "St. Petersburg",
              "Tehran",
              "Abu Dhabi",
              "Baku",
              "Muscat",
              "Samara",
              "Tbilisi",
              "Volgograd",
              "Yerevan",
              "Kabul",
              "Ekaterinburg",
              "Islamabad",
              "Karachi",
              "Tashkent",
              "Chennai",
              "Kolkata",
              "Mumbai",
              "New Delhi",
              "Sri Jayawardenepura",
              "Kathmandu",
              "Almaty",
              "Astana",
              "Dhaka",
              "Urumqi",
              "Rangoon",
              "Bangkok",
              "Hanoi",
              "Jakarta",
              "Krasnoyarsk",
              "Novosibirsk",
              "Beijing",
              "Chongqing",
              "Hong Kong",
              "Irkutsk",
              "Kuala Lumpur",
              "Perth",
              "Singapore",
              "Taipei",
              "Ulaanbaatar",
              "Osaka",
              "Sapporo",
              "Seoul",
              "Tokyo",
              "Yakutsk",
              "Adelaide",
              "Darwin",
              "Brisbane",
              "Canberra",
              "Guam",
              "Hobart",
              "Melbourne",
              "Port Moresby",
              "Sydney",
              "Vladivostok",
              "Magadan",
              "New Caledonia",
              "Solomon Is.",
              "Srednekolymsk",
              "Auckland",
              "Fiji",
              "Kamchatka",
              "Marshall Is.",
              "Wellington",
              "Chatham Is.",
              "Nuku'alofa",
              "Samoa",
              "Tokelau Is."
            ],
            "in": "formData",
            "description": "User's timezone"
          },
          {
            "name": "user[locale]",
            "type": "string",
            "enum": [
              "ca",
              "cs_CZ",
              "de",
              "en",
              "en_GB",
              "es",
              "fr",
              "gl",
              "it",
              "ja",
              "ko",
              "nl_NL",
              "pl",
              "pt_BR",
              "ru",
              "sv_SE",
              "zh_CN",
              "zh_TW"
            ],
            "in": "formData",
            "description": "User's preferred locale"
          },
          {
            "name": "user[role_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "user[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "user[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          },
          {
            "name": "user[current_password]",
            "type": "string",
            "in": "formData",
            "description": "Required when user want to change own password"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>Adds role &#39;Default role&#39; to the user if it is not already present.\nOnly another admin can change the admin account attribute.</p>\n"
      },
      "delete": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_users_id",
        "summary": "Delete a user",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/dashboard": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_dashboard",
        "summary": "Get dashboard details",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/domains": {
      "get": {
        "tags": [
          "domains"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_domains",
        "summary": "List of domains",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "domains"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_domains",
        "summary": "Create a domain",
        "parameters": [
          {
            "name": "domain[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "The full DNS domain name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "domain[fullname]",
            "type": "string",
            "in": "formData",
            "description": "Description of the domain"
          },
          {
            "name": "domain[dns_id]",
            "type": "number",
            "in": "formData",
            "description": "DNS Capsule ID to use within this domain"
          },
          {
            "name": "domain[domain_parameters_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of parameters (name, value)"
          },
          {
            "name": "domain[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "domain[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>The <strong>fullname</strong> field is used for human readability in\nreports and other pages that refer to domains, and also available as an\nexternal node parameter</p>\n"
      }
    },
    "/subnets/{subnet_id}/domains": {
      "get": {
        "tags": [
          "domains"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_subnets_subnet_id_domains",
        "summary": "List of domains per subnet",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/domains": {
      "get": {
        "tags": [
          "domains"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_domains",
        "summary": "List of domains per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/domains": {
      "get": {
        "tags": [
          "domains"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_domains",
        "summary": "List of domains per organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/domains/{id}": {
      "get": {
        "tags": [
          "domains"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_domains_id",
        "summary": "Show a domain",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Numerical ID or domain name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden_parameters",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "domains"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_domains_id",
        "summary": "Update a domain",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "domain[name]",
            "type": "string",
            "in": "formData",
            "description": "The full DNS domain name"
          },
          {
            "name": "domain[fullname]",
            "type": "string",
            "in": "formData",
            "description": "Description of the domain"
          },
          {
            "name": "domain[dns_id]",
            "type": "number",
            "in": "formData",
            "description": "DNS Capsule ID to use within this domain"
          },
          {
            "name": "domain[domain_parameters_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of parameters (name, value)"
          },
          {
            "name": "domain[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "domain[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "domains"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_domains_id",
        "summary": "Delete a domain",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/environments": {
      "get": {
        "tags": [
          "lifecycle_environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_environments",
        "summary": "List environments in an organization",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "library",
            "type": "boolean",
            "in": "query",
            "description": "set true if you want to see only library environments"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "filter only environments containing this name"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "lifecycle_environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_environments",
        "summary": "Create an environment",
        "parameters": [
          {
            "name": "prior_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "      ID of an environment that is prior to the new environment in the chain. It has to be\n      either the ID of Library or the ID of an environment at the end of a chain.\n"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "name of the environment"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "name of organization"
          },
          {
            "name": "label",
            "type": "string",
            "in": "formData",
            "description": "label of the environment"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "description of the environment"
          },
          {
            "name": "registry_name_pattern",
            "type": "string",
            "in": "formData",
            "description": "pattern for container image names"
          },
          {
            "name": "registry_unauthenticated_pull",
            "type": "boolean",
            "in": "formData",
            "description": "allow unauthenticed pull of container images"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/puppetclasses/{puppetclass_id}/environments": {
      "get": {
        "tags": [
          "environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_puppetclasses_puppetclass_id_environments",
        "summary": "List environments of Puppet class",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/environments": {
      "get": {
        "tags": [
          "environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_environments",
        "summary": "List environments per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/environments": {
      "get": {
        "tags": [
          "lifecycle_environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_environments",
        "summary": "List environments in an organization",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "library",
            "type": "boolean",
            "in": "query",
            "description": "set true if you want to see only library environments"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "filter only environments containing this name"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "lifecycle_environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_organizations_organization_id_environments",
        "summary": "Create an environment in an organization",
        "parameters": [
          {
            "name": "prior_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "      ID of an environment that is prior to the new environment in the chain. It has to be\n      either the ID of Library or the ID of an environment at the end of a chain.\n"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "name of the environment"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "name of organization"
          },
          {
            "name": "label",
            "type": "string",
            "in": "formData",
            "description": "label of the environment"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "description of the environment"
          },
          {
            "name": "registry_name_pattern",
            "type": "string",
            "in": "formData",
            "description": "pattern for container image names"
          },
          {
            "name": "registry_unauthenticated_pull",
            "type": "boolean",
            "in": "formData",
            "description": "allow unauthenticed pull of container images"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/environments/{id}": {
      "get": {
        "tags": [
          "lifecycle_environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_environments_id",
        "summary": "Show an environment",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "lifecycle_environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_environments_id",
        "summary": "Update an environment",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "name of the organization"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the environment"
          },
          {
            "name": "new_name",
            "type": "string",
            "in": "formData",
            "description": "new name to be given to the environment"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "description of the environment"
          },
          {
            "name": "registry_name_pattern",
            "type": "string",
            "in": "formData",
            "description": "pattern for container image names"
          },
          {
            "name": "registry_unauthenticated_pull",
            "type": "boolean",
            "in": "formData",
            "description": "allow unauthenticed pull of container images"
          },
          {
            "name": "async",
            "type": "boolean",
            "in": "formData",
            "description": "Do not wait for the update action to finish. Default: true"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "lifecycle_environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_environments_id",
        "summary": "Destroy an environment",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/usergroups/{usergroup_id}/external_usergroups": {
      "get": {
        "tags": [
          "external_usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_usergroups_usergroup_id_external_usergroups",
        "summary": "List all external user groups for user group",
        "parameters": [
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of user group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "external_usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_usergroups_usergroup_id_external_usergroups",
        "summary": "Create an external user group linked to a user group",
        "parameters": [
          {
            "name": "external_usergroup[auth_source_id]",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of linked authentication source"
          },
          {
            "name": "external_usergroup[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "External user group name"
          },
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of user group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/auth_source_ldaps/{auth_source_ldap_id}/external_usergroups": {
      "get": {
        "tags": [
          "external_usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_auth_source_ldaps_auth_source_ldap_id_external_usergroups",
        "summary": "List all external user groups for LDAP authentication source",
        "parameters": [
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID or name of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/usergroups/{usergroup_id}/external_usergroups/{id}": {
      "get": {
        "tags": [
          "external_usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_usergroups_usergroup_id_external_usergroups_id",
        "summary": "Show an external user group for user group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of external user group"
          },
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of user group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "external_usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_usergroups_usergroup_id_external_usergroups_id",
        "summary": "Update external user group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of external user group"
          },
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of user group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "external_usergroup[name]",
            "type": "string",
            "in": "formData",
            "description": "External user group name"
          },
          {
            "name": "external_usergroup[auth_source_id]",
            "type": "number",
            "in": "formData",
            "description": "ID of linked authentication source"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "external_usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_usergroups_usergroup_id_external_usergroups_id",
        "summary": "Delete an external user group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name external user group"
          },
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of user group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/auth_source_ldaps/{auth_source_ldap_id}/external_usergroups/{id}": {
      "get": {
        "tags": [
          "external_usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_auth_source_ldaps_auth_source_ldap_id_external_usergroups_id",
        "summary": "Show an external user group for LDAP authentication source",
        "parameters": [
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID or name of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of external user group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/usergroups/{usergroup_id}/external_usergroups/{id}/refresh": {
      "put": {
        "tags": [
          "external_usergroups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_usergroups_usergroup_id_external_usergroups_id_refresh",
        "summary": "Refresh external user group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of external user group"
          },
          {
            "name": "usergroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID or name of user group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/filters": {
      "get": {
        "tags": [
          "filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_filters",
        "summary": "List all filters",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_filters",
        "summary": "Create a filter",
        "parameters": [
          {
            "name": "filter[role_id]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "filter[search]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "filter[override]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "filter[permission_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "filter[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "filter[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/filters/{id}": {
      "get": {
        "tags": [
          "filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_filters_id",
        "summary": "Show a filter",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_filters_id",
        "summary": "Update a filter",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "filter[role_id]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "filter[search]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "filter[override]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "filter[permission_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "filter[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "filter[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_filters_id",
        "summary": "Delete a filter",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/": {
      "get": {
        "tags": [
          "subnet_disks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get",
        "summary": "Subnet boot disks",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/status": {
      "get": {
        "tags": [
          "ping"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_status",
        "summary": "Shows version information",
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>This service is available for unauthenticated users</p>\n"
      }
    },
    "/hosts/{host_id}/puppetclass_ids": {
      "get": {
        "tags": [
          "host_classes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_puppetclass_ids",
        "summary": "List all Puppet class IDs for host",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "host_classes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts_host_id_puppetclass_ids",
        "summary": "Add a Puppet class to host",
        "parameters": [
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/puppetclass_ids/{id}": {
      "delete": {
        "tags": [
          "host_classes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_hosts_host_id_puppetclass_ids_id",
        "summary": "Remove a Puppet class from host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_variables": {
      "get": {
        "tags": [
          "smart_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_smart_variables",
        "summary": "List all smart variables",
        "parameters": [
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "smart_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_smart_variables",
        "summary": "Create a smart variable",
        "parameters": [
          {
            "name": "smart_variable[variable]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Name of variable"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "smart_variable[puppetclass_id]",
            "type": "number",
            "in": "formData",
            "description": "Puppet class ID"
          },
          {
            "name": "smart_variable[default_value]",
            "type": "any_type",
            "in": "formData",
            "description": "Default value of variable"
          },
          {
            "name": "smart_variable[hidden_value]",
            "type": "boolean",
            "in": "formData",
            "description": "When enabled the parameter is hidden in the UI"
          },
          {
            "name": "smart_variable[override_value_order]",
            "type": "string",
            "in": "formData",
            "description": "The order in which values are resolved"
          },
          {
            "name": "smart_variable[description]",
            "type": "string",
            "in": "formData",
            "description": "Description of variable"
          },
          {
            "name": "smart_variable[validator_type]",
            "type": "string",
            "enum": [
              "regexp",
              "list"
            ],
            "in": "formData",
            "description": "Types of validation values"
          },
          {
            "name": "smart_variable[validator_rule]",
            "type": "string",
            "in": "formData",
            "description": "Used to enforce certain values for the parameter values"
          },
          {
            "name": "smart_variable[variable_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Types of variable values"
          },
          {
            "name": "smart_variable[merge_overrides]",
            "type": "boolean",
            "in": "formData",
            "description": "Merge all matching values (only array/hash type)"
          },
          {
            "name": "smart_variable[merge_default]",
            "type": "boolean",
            "in": "formData",
            "description": "Include default value when merging all matching values"
          },
          {
            "name": "smart_variable[avoid_duplicates]",
            "type": "boolean",
            "in": "formData",
            "description": "Remove duplicate values (only array type)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/smart_variables": {
      "get": {
        "tags": [
          "smart_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_smart_variables",
        "summary": "List of smart variables for a specific host",
        "parameters": [
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{hostgroup_id}/smart_variables": {
      "get": {
        "tags": [
          "smart_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups_hostgroup_id_smart_variables",
        "summary": "List of smart variables for a specific host group",
        "parameters": [
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/puppetclasses/{puppetclass_id}/smart_variables": {
      "get": {
        "tags": [
          "smart_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_puppetclasses_puppetclass_id_smart_variables",
        "summary": "List of smart variables for a specific Puppet class",
        "parameters": [
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_variables/{id}": {
      "get": {
        "tags": [
          "smart_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_smart_variables_id",
        "summary": "Show a smart variable",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "smart_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_smart_variables_id",
        "summary": "Update a smart variable",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "smart_variable[variable]",
            "type": "string",
            "in": "formData",
            "description": "Name of variable"
          },
          {
            "name": "smart_variable[puppetclass_id]",
            "type": "number",
            "in": "formData",
            "description": "Puppet class ID"
          },
          {
            "name": "smart_variable[default_value]",
            "type": "any_type",
            "in": "formData",
            "description": "Default value of variable"
          },
          {
            "name": "smart_variable[hidden_value]",
            "type": "boolean",
            "in": "formData",
            "description": "When enabled the parameter is hidden in the UI"
          },
          {
            "name": "smart_variable[override_value_order]",
            "type": "string",
            "in": "formData",
            "description": "The order in which values are resolved"
          },
          {
            "name": "smart_variable[description]",
            "type": "string",
            "in": "formData",
            "description": "Description of variable"
          },
          {
            "name": "smart_variable[validator_type]",
            "type": "string",
            "enum": [
              "regexp",
              "list"
            ],
            "in": "formData",
            "description": "Types of validation values"
          },
          {
            "name": "smart_variable[validator_rule]",
            "type": "string",
            "in": "formData",
            "description": "Used to enforce certain values for the parameter values"
          },
          {
            "name": "smart_variable[variable_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Types of variable values"
          },
          {
            "name": "smart_variable[merge_overrides]",
            "type": "boolean",
            "in": "formData",
            "description": "Merge all matching values (only array/hash type)"
          },
          {
            "name": "smart_variable[merge_default]",
            "type": "boolean",
            "in": "formData",
            "description": "Include default value when merging all matching values"
          },
          {
            "name": "smart_variable[avoid_duplicates]",
            "type": "boolean",
            "in": "formData",
            "description": "Remove duplicate values (only array type)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "smart_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_smart_variables_id",
        "summary": "Delete a smart variable",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{hostgroup_id}/puppetclass_ids": {
      "get": {
        "tags": [
          "hostgroup_classes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups_hostgroup_id_puppetclass_ids",
        "summary": "List all Puppet class IDs for host group",
        "parameters": [
          {
            "name": "hostgroup_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "hostgroup_classes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hostgroups_hostgroup_id_puppetclass_ids",
        "summary": "Add a Puppet class to host group",
        "parameters": [
          {
            "name": "puppetclass_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{hostgroup_id}/puppetclass_ids/{id}": {
      "delete": {
        "tags": [
          "hostgroup_classes"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_hostgroups_hostgroup_id_puppetclass_ids_id",
        "summary": "Remove a Puppet class from host group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/http_proxies": {
      "get": {
        "tags": [
          "http_proxies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_http_proxies",
        "summary": "List of HTTP Proxies",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "http_proxies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_http_proxies",
        "summary": "Create an HTTP Proxy",
        "parameters": [
          {
            "name": "http_proxy[url]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "URL of the HTTP Proxy"
          },
          {
            "name": "http_proxy[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "The HTTP Proxy name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "http_proxy[username]",
            "type": "string",
            "in": "formData",
            "description": "Username used to authenticate with the HTTP Proxy"
          },
          {
            "name": "http_proxy[password]",
            "type": "string",
            "in": "formData",
            "description": "Password used to authenticate with the HTTP Proxy"
          },
          {
            "name": "http_proxy[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "http_proxy[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/http_proxies/{id}": {
      "get": {
        "tags": [
          "http_proxies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_http_proxies_id",
        "summary": "Show an HTTP Proxy",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Numerical ID or HTTP Proxy name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "http_proxies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_http_proxies_id",
        "summary": "Update an HTTP Proxy",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "http_proxy[name]",
            "type": "string",
            "in": "formData",
            "description": "The HTTP Proxy name"
          },
          {
            "name": "http_proxy[url]",
            "type": "string",
            "in": "formData",
            "description": "URL of the HTTP Proxy"
          },
          {
            "name": "http_proxy[username]",
            "type": "string",
            "in": "formData",
            "description": "Username used to authenticate with the HTTP Proxy"
          },
          {
            "name": "http_proxy[password]",
            "type": "string",
            "in": "formData",
            "description": "Password used to authenticate with the HTTP Proxy"
          },
          {
            "name": "http_proxy[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "http_proxy[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "http_proxies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_http_proxies_id",
        "summary": "Delete an HTTP Proxy",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{compute_resource_id}/images": {
      "get": {
        "tags": [
          "images"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_compute_resource_id_images",
        "summary": "List all images for a compute resource",
        "parameters": [
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "architecture_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of architecture"
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of compute resource"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "images"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_compute_resources_compute_resource_id_images",
        "summary": "Create an image",
        "parameters": [
          {
            "name": "image[uuid]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Template ID in the compute resource"
          },
          {
            "name": "image[username]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "image[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "image[password]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "image[compute_resource_id]",
            "type": "string",
            "in": "formData",
            "description": "ID of compute resource"
          },
          {
            "name": "image[architecture_id]",
            "type": "string",
            "in": "formData",
            "description": "ID of architecture"
          },
          {
            "name": "image[operatingsystem_id]",
            "type": "string",
            "in": "formData",
            "description": "ID of operating system"
          },
          {
            "name": "image[user_data]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the image supports user data"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{operatingsystem_id}/images": {
      "get": {
        "tags": [
          "images"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_operatingsystem_id_images",
        "summary": "List all images for operating system",
        "parameters": [
          {
            "name": "architecture_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of architecture"
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of compute resource"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/architectures/{architecture_id}/images": {
      "get": {
        "tags": [
          "images"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_architectures_architecture_id_images",
        "summary": "List all images for architecture",
        "parameters": [
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of compute resource"
          },
          {
            "name": "architecture_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of architecture"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compute_resources/{compute_resource_id}/images/{id}": {
      "get": {
        "tags": [
          "images"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compute_resources_compute_resource_id_images_id",
        "summary": "Show an image",
        "parameters": [
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "architecture_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of architecture"
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of compute resource"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "images"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compute_resources_compute_resource_id_images_id",
        "summary": "Update an image",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "image[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "image[username]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "image[uuid]",
            "type": "string",
            "in": "formData",
            "description": "Template ID in the compute resource"
          },
          {
            "name": "image[password]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "image[compute_resource_id]",
            "type": "string",
            "in": "formData",
            "description": "ID of compute resource"
          },
          {
            "name": "image[architecture_id]",
            "type": "string",
            "in": "formData",
            "description": "ID of architecture"
          },
          {
            "name": "image[operatingsystem_id]",
            "type": "string",
            "in": "formData",
            "description": "ID of operating system"
          },
          {
            "name": "image[user_data]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the image supports user data"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "images"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_compute_resources_compute_resource_id_images_id",
        "summary": "Delete an image",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{operatingsystem_id}/images/{id}": {
      "get": {
        "tags": [
          "images"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_operatingsystem_id_images_id",
        "summary": "Show an image",
        "parameters": [
          {
            "name": "architecture_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of architecture"
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of compute resource"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/architectures/{architecture_id}/images/{id}": {
      "get": {
        "tags": [
          "images"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_architectures_architecture_id_images_id",
        "summary": "Show an image",
        "parameters": [
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "compute_resource_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of compute resource"
          },
          {
            "name": "architecture_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of architecture"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations": {
      "get": {
        "tags": [
          "locations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations",
        "summary": "List all locations",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "locations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_locations",
        "summary": "Create a location",
        "parameters": [
          {
            "name": "location[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "location[description]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "location[user_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "User IDs"
          },
          {
            "name": "location[smart_proxy_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Capsule IDs"
          },
          {
            "name": "location[compute_resource_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Compute resource IDs"
          },
          {
            "name": "location[medium_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Medium IDs"
          },
          {
            "name": "location[config_template_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Provisioning template IDs"
          },
          {
            "name": "location[ptable_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Partition template IDs"
          },
          {
            "name": "location[provisioning_template_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Provisioning template IDs"
          },
          {
            "name": "location[domain_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Domain IDs"
          },
          {
            "name": "location[realm_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Realm IDs"
          },
          {
            "name": "location[hostgroup_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Host group IDs"
          },
          {
            "name": "location[environment_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Environment IDs"
          },
          {
            "name": "location[subnet_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Subnet IDs"
          },
          {
            "name": "location[parent_id]",
            "type": "number",
            "in": "formData",
            "description": "Parent ID"
          },
          {
            "name": "location[ignore_types]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of resources types that will be automatically associated"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{id}": {
      "get": {
        "tags": [
          "locations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_id",
        "summary": "Show a location",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden_parameters",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "locations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_locations_id",
        "summary": "Update a location",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "location[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "location[description]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "location[user_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "User IDs"
          },
          {
            "name": "location[smart_proxy_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Capsule IDs"
          },
          {
            "name": "location[compute_resource_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Compute resource IDs"
          },
          {
            "name": "location[medium_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Medium IDs"
          },
          {
            "name": "location[config_template_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Provisioning template IDs"
          },
          {
            "name": "location[ptable_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Partition template IDs"
          },
          {
            "name": "location[provisioning_template_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Provisioning template IDs"
          },
          {
            "name": "location[domain_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Domain IDs"
          },
          {
            "name": "location[realm_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Realm IDs"
          },
          {
            "name": "location[hostgroup_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Host group IDs"
          },
          {
            "name": "location[environment_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Environment IDs"
          },
          {
            "name": "location[subnet_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Subnet IDs"
          },
          {
            "name": "location[parent_id]",
            "type": "number",
            "in": "formData",
            "description": "Parent ID"
          },
          {
            "name": "location[ignore_types]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of resources types that will be automatically associated"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "locations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_locations_id",
        "summary": "Delete a location",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/users/{user_id}/ssh_keys": {
      "get": {
        "tags": [
          "ssh_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_users_user_id_ssh_keys",
        "summary": "List all SSH keys for a user",
        "parameters": [
          {
            "name": "user_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the user"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "ssh_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_users_user_id_ssh_keys",
        "summary": "Add an SSH key for a user",
        "parameters": [
          {
            "name": "ssh_key[key]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Public SSH key"
          },
          {
            "name": "ssh_key[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "user_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the user"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/users/{user_id}/ssh_keys/{id}": {
      "get": {
        "tags": [
          "ssh_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_users_user_id_ssh_keys_id",
        "summary": "Show an SSH key from a user",
        "parameters": [
          {
            "name": "user_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the user"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "ssh_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_users_user_id_ssh_keys_id",
        "summary": "Delete an SSH key for a user",
        "parameters": [
          {
            "name": "user_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the user"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/mail_notifications": {
      "get": {
        "tags": [
          "mail_notifications"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_mail_notifications",
        "summary": "List of email notifications",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/mail_notifications/{id}": {
      "get": {
        "tags": [
          "mail_notifications"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_mail_notifications_id",
        "summary": "Show an email notification",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Numerical ID or email notification name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/media": {
      "get": {
        "tags": [
          "media"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_media",
        "summary": "List all installation media",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "media"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_media",
        "summary": "Create a medium",
        "parameters": [
          {
            "name": "medium[path]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "The path to the medium, can be a URL or a valid NFS server (exclusive of the architecture).\n\nfor example http://mirror.centos.org/centos/$version/os/$arch\nwhere $arch will be substituted for the host's actual OS architecture and $version, $major and $minor\nwill be substituted for the version of the operating system.\n\nSolaris and Debian media may also use $release.\n"
          },
          {
            "name": "medium[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Name of media"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "medium[os_family]",
            "type": "string",
            "in": "formData",
            "description": "Operating system family, available values: AIX, Altlinux, Archlinux, Coreos, Debian, Freebsd, Gentoo, Junos, NXOS, Rancheros, Redhat, Solaris, Suse, VRP, Windows, Xenserver"
          },
          {
            "name": "medium[operatingsystem_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "medium[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "medium[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{operatingsystem_id}/media": {
      "get": {
        "tags": [
          "media"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_operatingsystem_id_media",
        "summary": "List all media for an operating system",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/media": {
      "get": {
        "tags": [
          "media"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_media",
        "summary": "List all media per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/media": {
      "get": {
        "tags": [
          "media"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_media",
        "summary": "List all media per organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/media/{id}": {
      "get": {
        "tags": [
          "media"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_media_id",
        "summary": "Show a medium",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "media"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_media_id",
        "summary": "Update a medium",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "medium[name]",
            "type": "string",
            "in": "formData",
            "description": "Name of media"
          },
          {
            "name": "medium[path]",
            "type": "string",
            "in": "formData",
            "description": "The path to the medium, can be a URL or a valid NFS server (exclusive of the architecture).\n\nfor example http://mirror.centos.org/centos/$version/os/$arch\nwhere $arch will be substituted for the host's actual OS architecture and $version, $major and $minor\nwill be substituted for the version of the operating system.\n\nSolaris and Debian media may also use $release.\n"
          },
          {
            "name": "medium[os_family]",
            "type": "string",
            "in": "formData",
            "description": "Operating system family, available values: AIX, Altlinux, Archlinux, Coreos, Debian, Freebsd, Gentoo, Junos, NXOS, Rancheros, Redhat, Solaris, Suse, VRP, Windows, Xenserver"
          },
          {
            "name": "medium[operatingsystem_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "medium[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "medium[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "media"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_media_id",
        "summary": "Delete a medium",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/models": {
      "get": {
        "tags": [
          "models"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_models",
        "summary": "List all hardware models",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "models"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_models",
        "summary": "Create a hardware model",
        "parameters": [
          {
            "name": "model[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "model[info]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "model[vendor_class]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "model[hardware_model]",
            "type": "string",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/models/{id}": {
      "get": {
        "tags": [
          "models"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_models_id",
        "summary": "Show a hardware model",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "models"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_models_id",
        "summary": "Update a hardware model",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "model[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "model[info]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "model[vendor_class]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "model[hardware_model]",
            "type": "string",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "models"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_models_id",
        "summary": "Delete a hardware model",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/statistics": {
      "get": {
        "tags": [
          "statistics"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_statistics",
        "summary": "Get statistics",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems": {
      "get": {
        "tags": [
          "operatingsystems"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems",
        "summary": "List all operating systems",
        "parameters": [
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of template"
          },
          {
            "name": "ptable_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of partition table"
          },
          {
            "name": "medium_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of medium"
          },
          {
            "name": "architecture_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of architecture"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "os_parameters_attributes",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Array of parameters"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "operatingsystems"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_operatingsystems",
        "summary": "Create an operating system",
        "parameters": [
          {
            "name": "operatingsystem[major]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "operatingsystem[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "operatingsystem[minor]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "operatingsystem[description]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "operatingsystem[family]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "operatingsystem[release_name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "operatingsystem[os_parameters_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of parameters"
          },
          {
            "name": "operatingsystem[password_hash]",
            "type": "string",
            "in": "formData",
            "description": "Root password hash function to use, one of MD5, SHA256, SHA512, Base64"
          },
          {
            "name": "operatingsystem[architecture_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated architectures"
          },
          {
            "name": "operatingsystem[config_template_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated provisioning templates"
          },
          {
            "name": "operatingsystem[provisioning_template_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated provisioning templates"
          },
          {
            "name": "operatingsystem[medium_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated media"
          },
          {
            "name": "operatingsystem[ptable_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated partition tables"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/architectures/{architecture_id}/operatingsystems": {
      "get": {
        "tags": [
          "operatingsystems"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_architectures_architecture_id_operatingsystems",
        "summary": "List all operating systems for nested architecture",
        "parameters": [
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of template"
          },
          {
            "name": "ptable_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of partition table"
          },
          {
            "name": "medium_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of medium"
          },
          {
            "name": "architecture_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of architecture"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "os_parameters_attributes",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Array of parameters"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/media/{medium_id}/operatingsystems": {
      "get": {
        "tags": [
          "operatingsystems"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_media_medium_id_operatingsystems",
        "summary": "List all operating systems for nested medium",
        "parameters": [
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of template"
          },
          {
            "name": "ptable_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of partition table"
          },
          {
            "name": "architecture_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of architecture"
          },
          {
            "name": "medium_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of medium"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "os_parameters_attributes",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Array of parameters"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ptables/{ptable_id}/operatingsystems": {
      "get": {
        "tags": [
          "operatingsystems"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ptables_ptable_id_operatingsystems",
        "summary": "List all operating systems for nested partition table",
        "parameters": [
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of template"
          },
          {
            "name": "medium_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of medium"
          },
          {
            "name": "architecture_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of architecture"
          },
          {
            "name": "ptable_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of partition table"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "os_parameters_attributes",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Array of parameters"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_templates/{config_template_id}/operatingsystems": {
      "get": {
        "tags": [
          "operatingsystems"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_config_templates_config_template_id_operatingsystems",
        "summary": "List all operating systems for nested provisioning template",
        "parameters": [
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of template"
          },
          {
            "name": "ptable_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of partition table"
          },
          {
            "name": "medium_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of medium"
          },
          {
            "name": "architecture_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of architecture"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of template"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "os_parameters_attributes",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Array of parameters"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/provisioning_templates/{provisioning_template_id}/operatingsystems": {
      "get": {
        "tags": [
          "operatingsystems"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_provisioning_templates_provisioning_template_id_operatingsystems",
        "summary": "List all operating systems for nested provisioning template",
        "parameters": [
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of template"
          },
          {
            "name": "ptable_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of partition table"
          },
          {
            "name": "medium_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of medium"
          },
          {
            "name": "architecture_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of architecture"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of template"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "os_parameters_attributes",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Array of parameters"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{id}": {
      "get": {
        "tags": [
          "operatingsystems"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_id",
        "summary": "Show an operating system",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden_parameters",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "operatingsystems"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_operatingsystems_id",
        "summary": "Update an operating system",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "operatingsystem[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "operatingsystem[major]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "operatingsystem[minor]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "operatingsystem[description]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "operatingsystem[family]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "operatingsystem[release_name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "operatingsystem[os_parameters_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of parameters"
          },
          {
            "name": "operatingsystem[password_hash]",
            "type": "string",
            "in": "formData",
            "description": "Root password hash function to use, one of MD5, SHA256, SHA512, Base64"
          },
          {
            "name": "operatingsystem[architecture_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated architectures"
          },
          {
            "name": "operatingsystem[config_template_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated provisioning templates"
          },
          {
            "name": "operatingsystem[provisioning_template_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated provisioning templates"
          },
          {
            "name": "operatingsystem[medium_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated media"
          },
          {
            "name": "operatingsystem[ptable_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "IDs of associated partition tables"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "operatingsystems"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_operatingsystems_id",
        "summary": "Delete an operating system",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{id}/bootfiles": {
      "get": {
        "tags": [
          "operatingsystems"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_id_bootfiles",
        "summary": "List boot files for an operating system",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "medium",
            "type": "string",
            "in": "query"
          },
          {
            "name": "architecture",
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "organizations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations",
        "summary": "List all organizations",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "organizations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_organizations",
        "summary": "Create organization",
        "parameters": [
          {
            "name": "organization[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "label",
            "type": "string",
            "in": "formData",
            "description": "unique label"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "description"
          },
          {
            "name": "organization[description]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "organization[user_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "User IDs"
          },
          {
            "name": "organization[smart_proxy_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Capsule IDs"
          },
          {
            "name": "organization[compute_resource_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Compute resource IDs"
          },
          {
            "name": "organization[medium_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Medium IDs"
          },
          {
            "name": "organization[config_template_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Provisioning template IDs"
          },
          {
            "name": "organization[ptable_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Partition template IDs"
          },
          {
            "name": "organization[provisioning_template_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Provisioning template IDs"
          },
          {
            "name": "organization[domain_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Domain IDs"
          },
          {
            "name": "organization[realm_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Realm IDs"
          },
          {
            "name": "organization[hostgroup_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Host group IDs"
          },
          {
            "name": "organization[environment_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Environment IDs"
          },
          {
            "name": "organization[subnet_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Subnet IDs"
          },
          {
            "name": "organization[label]",
            "type": "string",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{id}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_id",
        "summary": "Show organization",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "organization ID"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "organizations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_organizations_id",
        "summary": "Update organization",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "organization ID"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "redhat_repository_url",
            "type": "string",
            "in": "formData",
            "description": "Red Hat CDN URL"
          },
          {
            "name": "organization[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "organization[description]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "organization[user_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "User IDs"
          },
          {
            "name": "organization[smart_proxy_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Capsule IDs"
          },
          {
            "name": "organization[compute_resource_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Compute resource IDs"
          },
          {
            "name": "organization[medium_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Medium IDs"
          },
          {
            "name": "organization[config_template_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Provisioning template IDs"
          },
          {
            "name": "organization[ptable_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Partition template IDs"
          },
          {
            "name": "organization[provisioning_template_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Provisioning template IDs"
          },
          {
            "name": "organization[domain_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Domain IDs"
          },
          {
            "name": "organization[realm_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Realm IDs"
          },
          {
            "name": "organization[hostgroup_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Host group IDs"
          },
          {
            "name": "organization[environment_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Environment IDs"
          },
          {
            "name": "organization[subnet_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Subnet IDs"
          },
          {
            "name": "organization[parent_id]",
            "type": "number",
            "in": "formData",
            "description": "Parent ID"
          },
          {
            "name": "organization[ignore_types]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of resources types that will be automatically associated"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_organizations_id",
        "summary": "Delete an organization",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization ID"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{id}/repo_discover": {
      "put": {
        "tags": [
          "organizations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_organizations_id_repo_discover",
        "summary": "Discover Repositories",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization ID"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "url",
            "type": "string",
            "in": "formData",
            "description": "Base URL to perform repo discovery on"
          },
          {
            "name": "content_type",
            "type": "string",
            "in": "formData",
            "description": "One of yum or docker"
          },
          {
            "name": "upstream_username",
            "type": "string",
            "in": "formData",
            "description": "Username to access URL"
          },
          {
            "name": "upstream_password",
            "type": "string",
            "in": "formData",
            "description": "Password to access URL"
          },
          {
            "name": "search",
            "type": "string",
            "in": "formData",
            "description": "Search pattern (defaults to '*')"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{label}/cancel_repo_discover": {
      "put": {
        "tags": [
          "organizations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_organizations_label_cancel_repo_discover",
        "summary": "Cancel repository discovery",
        "parameters": [
          {
            "name": "label",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Organization label"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "url",
            "type": "string",
            "in": "formData",
            "description": "base url to perform repo discovery on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{label}/download_debug_certificate": {
      "get": {
        "tags": [
          "organizations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_label_download_debug_certificate",
        "summary": "Download a debug certificate",
        "parameters": [
          {
            "name": "label",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Organization label"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{id}/releases": {
      "get": {
        "tags": [
          "organizations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_id_releases",
        "summary": "List available releases in the organization",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the Organization"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{id}/autoattach_subscriptions": {
      "post": {
        "tags": [
          "organizations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_organizations_id_autoattach_subscriptions",
        "summary": "Auto-attach available subscriptions to all hosts within an organization. Asynchronous operation.",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{id}/redhat_provider": {
      "get": {
        "tags": [
          "organizations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_id_redhat_provider",
        "summary": "List all :resource_id",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/subnets": {
      "get": {
        "tags": [
          "subnets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_subnets",
        "summary": "List of subnets",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "subnets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_subnets",
        "summary": "Create a subnet",
        "parameters": [
          {
            "name": "subnet[mask]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Netmask for this subnet"
          },
          {
            "name": "subnet[network]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Subnet network"
          },
          {
            "name": "subnet[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Subnet name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "subnet[description]",
            "type": "string",
            "in": "formData",
            "description": "Subnet description"
          },
          {
            "name": "subnet[network_type]",
            "type": "string",
            "enum": [
              "IPv4",
              "IPv6"
            ],
            "in": "formData",
            "description": "Type or protocol, IPv4 or IPv6, defaults to IPv4"
          },
          {
            "name": "subnet[gateway]",
            "type": "string",
            "in": "formData",
            "description": "Subnet gateway"
          },
          {
            "name": "subnet[dns_primary]",
            "type": "string",
            "in": "formData",
            "description": "Primary DNS for this subnet"
          },
          {
            "name": "subnet[dns_secondary]",
            "type": "string",
            "in": "formData",
            "description": "Secondary DNS for this subnet"
          },
          {
            "name": "subnet[ipam]",
            "type": "string",
            "in": "formData",
            "description": "IP Address auto suggestion mode for this subnet, valid values are \"DHCP\", \"Internal DB\", \"None\""
          },
          {
            "name": "subnet[from]",
            "type": "string",
            "in": "formData",
            "description": "Starting IP Address for IP auto suggestion"
          },
          {
            "name": "subnet[to]",
            "type": "string",
            "in": "formData",
            "description": "Ending IP Address for IP auto suggestion"
          },
          {
            "name": "subnet[vlanid]",
            "type": "string",
            "in": "formData",
            "description": "VLAN ID for this subnet"
          },
          {
            "name": "subnet[mtu]",
            "type": "number",
            "in": "formData",
            "description": "MTU for this subnet"
          },
          {
            "name": "subnet[domain_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Domains in which this subnet is part"
          },
          {
            "name": "subnet[dhcp_id]",
            "type": "number",
            "in": "formData",
            "description": "DHCP Capsule ID to use within this subnet"
          },
          {
            "name": "subnet[tftp_id]",
            "type": "number",
            "in": "formData",
            "description": "TFTP Capsule ID to use within this subnet"
          },
          {
            "name": "subnet[httpboot_id]",
            "type": "number",
            "in": "formData",
            "description": "HTTPBoot Capsule ID to use within this subnet"
          },
          {
            "name": "subnet[dns_id]",
            "type": "number",
            "in": "formData",
            "description": "DNS Capsule ID to use within this subnet"
          },
          {
            "name": "subnet[template_id]",
            "type": "number",
            "in": "formData",
            "description": "Template HTTP(S) Capsule ID to use within this subnet"
          },
          {
            "name": "subnet[discovery_id]",
            "type": "number",
            "in": "formData",
            "description": "ID of Discovery Capsule to use within this subnet for managing connection to discovered hosts"
          },
          {
            "name": "subnet[boot_mode]",
            "type": "string",
            "in": "formData",
            "description": "Default boot mode for interfaces assigned to this subnet, valid values are \"Static\", \"DHCP\""
          },
          {
            "name": "subnet[subnet_parameters_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of parameters (name, value)"
          },
          {
            "name": "subnet[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "subnet[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/domains/{domain_id}/subnets": {
      "get": {
        "tags": [
          "subnets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_domains_domain_id_subnets",
        "summary": "List of subnets for a domain",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/subnets": {
      "get": {
        "tags": [
          "subnets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_subnets",
        "summary": "List of subnets per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/subnets": {
      "get": {
        "tags": [
          "subnets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_subnets",
        "summary": "List of subnets per organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/subnets/{id}": {
      "get": {
        "tags": [
          "subnets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_subnets_id",
        "summary": "Show a subnet",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden_parameters",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "subnets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_subnets_id",
        "summary": "Update a subnet",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Subnet numeric identifier"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "subnet[name]",
            "type": "string",
            "in": "formData",
            "description": "Subnet name"
          },
          {
            "name": "subnet[description]",
            "type": "string",
            "in": "formData",
            "description": "Subnet description"
          },
          {
            "name": "subnet[network_type]",
            "type": "string",
            "enum": [
              "IPv4",
              "IPv6"
            ],
            "in": "formData",
            "description": "Type or protocol, IPv4 or IPv6, defaults to IPv4"
          },
          {
            "name": "subnet[network]",
            "type": "string",
            "in": "formData",
            "description": "Subnet network"
          },
          {
            "name": "subnet[mask]",
            "type": "string",
            "in": "formData",
            "description": "Netmask for this subnet"
          },
          {
            "name": "subnet[gateway]",
            "type": "string",
            "in": "formData",
            "description": "Subnet gateway"
          },
          {
            "name": "subnet[dns_primary]",
            "type": "string",
            "in": "formData",
            "description": "Primary DNS for this subnet"
          },
          {
            "name": "subnet[dns_secondary]",
            "type": "string",
            "in": "formData",
            "description": "Secondary DNS for this subnet"
          },
          {
            "name": "subnet[ipam]",
            "type": "string",
            "in": "formData",
            "description": "IP Address auto suggestion mode for this subnet, valid values are \"DHCP\", \"Internal DB\", \"None\""
          },
          {
            "name": "subnet[from]",
            "type": "string",
            "in": "formData",
            "description": "Starting IP Address for IP auto suggestion"
          },
          {
            "name": "subnet[to]",
            "type": "string",
            "in": "formData",
            "description": "Ending IP Address for IP auto suggestion"
          },
          {
            "name": "subnet[vlanid]",
            "type": "string",
            "in": "formData",
            "description": "VLAN ID for this subnet"
          },
          {
            "name": "subnet[mtu]",
            "type": "number",
            "in": "formData",
            "description": "MTU for this subnet"
          },
          {
            "name": "subnet[domain_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Domains in which this subnet is part"
          },
          {
            "name": "subnet[dhcp_id]",
            "type": "number",
            "in": "formData",
            "description": "DHCP Capsule ID to use within this subnet"
          },
          {
            "name": "subnet[tftp_id]",
            "type": "number",
            "in": "formData",
            "description": "TFTP Capsule ID to use within this subnet"
          },
          {
            "name": "subnet[httpboot_id]",
            "type": "number",
            "in": "formData",
            "description": "HTTPBoot Capsule ID to use within this subnet"
          },
          {
            "name": "subnet[dns_id]",
            "type": "number",
            "in": "formData",
            "description": "DNS Capsule ID to use within this subnet"
          },
          {
            "name": "subnet[template_id]",
            "type": "number",
            "in": "formData",
            "description": "Template HTTP(S) Capsule ID to use within this subnet"
          },
          {
            "name": "subnet[discovery_id]",
            "type": "number",
            "in": "formData",
            "description": "ID of Discovery Capsule to use within this subnet for managing connection to discovered hosts"
          },
          {
            "name": "subnet[boot_mode]",
            "type": "string",
            "in": "formData",
            "description": "Default boot mode for interfaces assigned to this subnet, valid values are \"Static\", \"DHCP\""
          },
          {
            "name": "subnet[subnet_parameters_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of parameters (name, value)"
          },
          {
            "name": "subnet[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "subnet[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "subnets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_subnets_id",
        "summary": "Delete a subnet",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Subnet numeric identifier"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/subnets/{id}/freeip": {
      "get": {
        "tags": [
          "subnets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_subnets_id_freeip",
        "summary": "Provides an unused IP address in this subnet",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "mac",
            "type": "string",
            "in": "query",
            "description": "MAC address to reuse the IP for this host"
          },
          {
            "name": "excluded_ips",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "IP addresses that should be excluded from suggestion"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{operatingsystem_id}/os_default_templates": {
      "get": {
        "tags": [
          "os_default_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_operatingsystem_id_os_default_templates",
        "summary": "List default templates combinations for an operating system",
        "parameters": [
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of provisioning template"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of provisioning template"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "os_default_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_operatingsystems_operatingsystem_id_os_default_templates",
        "summary": "Create a default template combination for an operating system",
        "parameters": [
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "os_default_template[template_kind_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "os_default_template[config_template_id]",
            "type": "number",
            "in": "formData",
            "description": "ID of provisioning template"
          },
          {
            "name": "os_default_template[provisioning_template_id]",
            "type": "number",
            "in": "formData",
            "description": "ID of provisioning template"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/config_templates/{config_template_id}/os_default_templates": {
      "get": {
        "tags": [
          "os_default_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_config_templates_config_template_id_os_default_templates",
        "summary": "List operating systems where this template is set as a default",
        "parameters": [
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of provisioning template"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "config_template_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of provisioning template"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/provisioning_templates/{provisioning_template_id}/os_default_templates": {
      "get": {
        "tags": [
          "os_default_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_provisioning_templates_provisioning_template_id_os_default_templates",
        "summary": "List operating systems where this template is set as a default",
        "parameters": [
          {
            "name": "config_template_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of provisioning template"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "provisioning_template_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of provisioning template"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{operatingsystem_id}/os_default_templates/{id}": {
      "get": {
        "tags": [
          "os_default_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_operatingsystem_id_os_default_templates_id",
        "summary": "Show a default template combination for an operating system",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "os_default_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_operatingsystems_operatingsystem_id_os_default_templates_id",
        "summary": "Update a default template combination for an operating system",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "os_default_template[template_kind_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "os_default_template[config_template_id]",
            "type": "number",
            "in": "formData",
            "description": "ID of provisioning template"
          },
          {
            "name": "os_default_template[provisioning_template_id]",
            "type": "number",
            "in": "formData",
            "description": "ID of provisioning template"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "os_default_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_operatingsystems_operatingsystem_id_os_default_templates_id",
        "summary": "Delete a default template combination for an operating system",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/users/{user_id}/table_preferences": {
      "get": {
        "tags": [
          "table_preferences"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_users_user_id_table_preferences",
        "summary": "List of table preferences for a user",
        "parameters": [
          {
            "name": "user_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "table_preferences"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_users_user_id_table_preferences",
        "summary": "Creates a table preference for a given table",
        "parameters": [
          {
            "name": "table_preferences[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Name of the table"
          },
          {
            "name": "user_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "table_preferences[columns]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of user selected columns"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/users/{user_id}/table_preferences/{name}": {
      "get": {
        "tags": [
          "table_preferences"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_users_user_id_table_preferences_name",
        "summary": "Table preference details of a given table",
        "parameters": [
          {
            "name": "user_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "name",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "table_preferences"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_users_user_id_table_preferences_name",
        "summary": "Updates a table preference for a given table",
        "parameters": [
          {
            "name": "table_preferences[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Name of the table"
          },
          {
            "name": "name",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "user_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "table_preferences[columns]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of user selected columns"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "table_preferences"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_users_user_id_table_preferences_name",
        "summary": "Delete a table preference for a given table",
        "parameters": [
          {
            "name": "user_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "name",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "name of the table"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_variables/{smart_variable_id}/override_values": {
      "get": {
        "tags": [
          "override_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_smart_variables_smart_variable_id_override_values",
        "summary": "List of override values for a specific smart variable",
        "parameters": [
          {
            "name": "smart_class_parameter_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "smart_variable_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "override_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_smart_variables_smart_variable_id_override_values",
        "summary": "Create an override value for a specific smart variable",
        "parameters": [
          {
            "name": "override_value[match]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Override match"
          },
          {
            "name": "smart_class_parameter_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "smart_variable_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "override_value[value]",
            "type": "any_type",
            "in": "formData",
            "description": "Override value, required if omit is false"
          },
          {
            "name": "override_value[use_puppet_default]",
            "type": "boolean",
            "in": "formData",
            "description": "Deprecated, please use omit"
          },
          {
            "name": "override_value[omit]",
            "type": "boolean",
            "in": "formData",
            "description": "Satellite will not send this parameter in classification output, replaces use_puppet_default"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_class_parameters/{smart_class_parameter_id}/override_values": {
      "get": {
        "tags": [
          "override_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_smart_class_parameters_smart_class_parameter_id_override_values",
        "summary": "List of override values for a specific smart class parameter",
        "parameters": [
          {
            "name": "smart_variable_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "smart_class_parameter_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "override_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_smart_class_parameters_smart_class_parameter_id_override_values",
        "summary": "Create an override value for a specific smart class parameter",
        "parameters": [
          {
            "name": "override_value[match]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Override match"
          },
          {
            "name": "smart_variable_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "smart_class_parameter_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "override_value[value]",
            "type": "any_type",
            "in": "formData",
            "description": "Override value, required if omit is false"
          },
          {
            "name": "override_value[use_puppet_default]",
            "type": "boolean",
            "in": "formData",
            "description": "Deprecated, please use omit"
          },
          {
            "name": "override_value[omit]",
            "type": "boolean",
            "in": "formData",
            "description": "Satellite will not send this parameter in classification output, replaces use_puppet_default"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_variables/{smart_variable_id}/override_values/{id}": {
      "get": {
        "tags": [
          "override_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_smart_variables_smart_variable_id_override_values_id",
        "summary": "Show an override value for a specific smart variable",
        "parameters": [
          {
            "name": "smart_class_parameter_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "smart_variable_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "override_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_smart_variables_smart_variable_id_override_values_id",
        "summary": "Update an override value for a specific smart variable",
        "parameters": [
          {
            "name": "smart_class_parameter_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "smart_variable_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "override_value[match]",
            "type": "string",
            "in": "formData",
            "description": "Override match"
          },
          {
            "name": "override_value[value]",
            "type": "any_type",
            "in": "formData",
            "description": "Override value, required if omit is false"
          },
          {
            "name": "override_value[use_puppet_default]",
            "type": "boolean",
            "in": "formData",
            "description": "Deprecated, please use omit"
          },
          {
            "name": "override_value[omit]",
            "type": "boolean",
            "in": "formData",
            "description": "Satellite will not send this parameter in classification output, replaces use_puppet_default"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "override_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_smart_variables_smart_variable_id_override_values_id",
        "summary": "Delete an override value for a specific smart variable",
        "parameters": [
          {
            "name": "smart_class_parameter_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "smart_variable_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/smart_class_parameters/{smart_class_parameter_id}/override_values/{id}": {
      "get": {
        "tags": [
          "override_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_smart_class_parameters_smart_class_parameter_id_override_values_id",
        "summary": "Show an override value for a specific smart class parameter",
        "parameters": [
          {
            "name": "smart_variable_id",
            "type": "string",
            "in": "query",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "smart_class_parameter_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "override_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_smart_class_parameters_smart_class_parameter_id_override_values_id",
        "summary": "Update an override value for a specific smart class parameter",
        "parameters": [
          {
            "name": "smart_variable_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "smart_class_parameter_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "override_value[match]",
            "type": "string",
            "in": "formData",
            "description": "Override match"
          },
          {
            "name": "override_value[value]",
            "type": "any_type",
            "in": "formData",
            "description": "Override value, required if omit is false"
          },
          {
            "name": "override_value[use_puppet_default]",
            "type": "boolean",
            "in": "formData",
            "description": "Deprecated, please use omit"
          },
          {
            "name": "override_value[omit]",
            "type": "boolean",
            "in": "formData",
            "description": "Satellite will not send this parameter in classification output, replaces use_puppet_default"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "override_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_smart_class_parameters_smart_class_parameter_id_override_values_id",
        "summary": "Delete an override value for a specific smart class parameter",
        "parameters": [
          {
            "name": "smart_variable_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "smart_class_parameter_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/parameters": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_parameters",
        "summary": "List all parameters for a host",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts_host_id_parameters",
        "summary": "Create a nested parameter for a host",
        "parameters": [
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "required": true,
            "description": "Type of value"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_hosts_host_id_parameters",
        "summary": "Delete all nested parameters for a host",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{hostgroup_id}/parameters": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups_hostgroup_id_parameters",
        "summary": "List all parameters for a host group",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hostgroups_hostgroup_id_parameters",
        "summary": "Create a nested parameter for a host group",
        "parameters": [
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "required": true,
            "description": "Type of value"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_hostgroups_hostgroup_id_parameters",
        "summary": "Delete all nested parameters for a host group",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/domains/{domain_id}/parameters": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_domains_domain_id_parameters",
        "summary": "List all parameters for a domain",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_domains_domain_id_parameters",
        "summary": "Create a nested parameter for a domain",
        "parameters": [
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "required": true,
            "description": "Type of value"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of domain"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_domains_domain_id_parameters",
        "summary": "Delete all nested parameters for a domain",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of domain"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{operatingsystem_id}/parameters": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_operatingsystem_id_parameters",
        "summary": "List all parameters for an operating system",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_operatingsystems_operatingsystem_id_parameters",
        "summary": "Create a nested parameter for an operating system",
        "parameters": [
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "required": true,
            "description": "Type of value"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_operatingsystems_operatingsystem_id_parameters",
        "summary": "Delete all nested parameters for an operating system",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/parameters": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_parameters",
        "summary": "List all parameters for a location",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_locations_location_id_parameters",
        "summary": "Create a nested parameter for a location",
        "parameters": [
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "required": true,
            "description": "Type of value"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of location"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_locations_location_id_parameters",
        "summary": "Delete all nested parameter for a location",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of location"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/parameters": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_parameters",
        "summary": "List all parameters for an organization",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_organizations_organization_id_parameters",
        "summary": "Create a nested parameter for an organization",
        "parameters": [
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "required": true,
            "description": "Type of value"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of organization"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_organizations_organization_id_parameters",
        "summary": "Delete all nested parameter for an organization",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of organization"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/subnets/{subnet_id}/parameters": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_subnets_subnet_id_parameters",
        "summary": "List all parameters for a subnet",
        "parameters": [
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_subnets_subnet_id_parameters",
        "summary": "Create a nested parameter for a subnet",
        "parameters": [
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "required": true,
            "description": "Type of value"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of subnet"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_subnets_subnet_id_parameters",
        "summary": "Delete all nested parameters for a subnet",
        "parameters": [
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of subnet"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/parameters/{id}": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_parameters_id",
        "summary": "Show a nested parameter for a host",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_parameters_id",
        "summary": "Update a nested parameter for a host",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Type of value"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_hosts_host_id_parameters_id",
        "summary": "Delete a nested parameter for a host",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{hostgroup_id}/parameters/{id}": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups_hostgroup_id_parameters_id",
        "summary": "Show a nested parameter for a host group",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hostgroups_hostgroup_id_parameters_id",
        "summary": "Update a nested parameter for a host group",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Type of value"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_hostgroups_hostgroup_id_parameters_id",
        "summary": "Delete a nested parameter for a host group",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/domains/{domain_id}/parameters/{id}": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_domains_domain_id_parameters_id",
        "summary": "Show a nested parameter for a domain",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_domains_domain_id_parameters_id",
        "summary": "Update a nested parameter for a domain",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Type of value"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_domains_domain_id_parameters_id",
        "summary": "Delete a nested parameter for a domain",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of domain"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{operatingsystem_id}/parameters/{id}": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_operatingsystem_id_parameters_id",
        "summary": "Show a nested parameter for an operating system",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_operatingsystems_operatingsystem_id_parameters_id",
        "summary": "Update a nested parameter for an operating system",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Type of value"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_operatingsystems_operatingsystem_id_parameters_id",
        "summary": "Delete a nested parameter for an operating system",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/parameters/{id}": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_parameters_id",
        "summary": "Show a nested parameter for a location",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_locations_location_id_parameters_id",
        "summary": "Update a nested parameter for a location",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Type of value"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_locations_location_id_parameters_id",
        "summary": "Delete a nested parameter for a location",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of location"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/parameters/{id}": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_parameters_id",
        "summary": "Show a nested parameter for an organization",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_organizations_organization_id_parameters_id",
        "summary": "Update a nested parameter for an organization",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Type of value"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_organizations_organization_id_parameters_id",
        "summary": "Delete a nested parameter for an organization",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "organization_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of organization"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/subnets/{subnet_id}/parameters/{id}": {
      "get": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_subnets_subnet_id_parameters_id",
        "summary": "Show a nested parameter for a subnet",
        "parameters": [
          {
            "name": "organization_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "type": "boolean",
            "in": "query",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_subnets_subnet_id_parameters_id",
        "summary": "Update a nested parameter for a subnet",
        "parameters": [
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          },
          {
            "name": "parameter[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[value]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "parameter[parameter_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Type of value"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "parameters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_subnets_subnet_id_parameters_id",
        "summary": "Delete a nested parameter for a subnet",
        "parameters": [
          {
            "name": "organization_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "subnet_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of subnet"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/provisioning_templates": {
      "get": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_provisioning_templates",
        "summary": "List provisioning templates",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_provisioning_templates",
        "summary": "Create a provisioning template",
        "parameters": [
          {
            "name": "provisioning_template[template]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "provisioning_template[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "template name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "provisioning_template[snippet]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "provisioning_template[audit_comment]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "provisioning_template[template_kind_id]",
            "type": "number",
            "in": "formData",
            "description": "not relevant for snippet"
          },
          {
            "name": "provisioning_template[template_combinations_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of template combinations (hostgroup_id, environment_id)"
          },
          {
            "name": "provisioning_template[operatingsystem_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of operating system IDs to associate with the template"
          },
          {
            "name": "provisioning_template[locked]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the template is locked for editing"
          },
          {
            "name": "provisioning_template[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "provisioning_template[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{operatingsystem_id}/provisioning_templates": {
      "get": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_operatingsystem_id_provisioning_templates",
        "summary": "List provisioning templates per operating system",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/provisioning_templates": {
      "get": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_provisioning_templates",
        "summary": "List provisioning templates per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/provisioning_templates": {
      "get": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_provisioning_templates",
        "summary": "List provisioning templates per organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/provisioning_templates/{id}": {
      "get": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_provisioning_templates_id",
        "summary": "Show provisioning template details",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_provisioning_templates_id",
        "summary": "Update a provisioning template",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "provisioning_template[name]",
            "type": "string",
            "in": "formData",
            "description": "template name"
          },
          {
            "name": "provisioning_template[template]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "provisioning_template[snippet]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "provisioning_template[audit_comment]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "provisioning_template[template_kind_id]",
            "type": "number",
            "in": "formData",
            "description": "not relevant for snippet"
          },
          {
            "name": "provisioning_template[template_combinations_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of template combinations (hostgroup_id, environment_id)"
          },
          {
            "name": "provisioning_template[operatingsystem_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of operating system IDs to associate with the template"
          },
          {
            "name": "provisioning_template[locked]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the template is locked for editing"
          },
          {
            "name": "provisioning_template[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "provisioning_template[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_provisioning_templates_id",
        "summary": "Delete a provisioning template",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/provisioning_templates/import": {
      "post": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_provisioning_templates_import",
        "summary": "Import a provisioning template",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "provisioning_template[name]",
            "type": "string",
            "in": "formData",
            "description": "template name"
          },
          {
            "name": "provisioning_template[template]",
            "type": "string",
            "in": "formData",
            "description": "template contents including metadata"
          },
          {
            "name": "provisioning_template[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "provisioning_template[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          },
          {
            "name": "options[force]",
            "type": "boolean",
            "in": "formData",
            "description": "use if you want update locked templates"
          },
          {
            "name": "options[associate]",
            "type": "string",
            "enum": [
              "new",
              "always",
              "never"
            ],
            "in": "formData",
            "description": "determines when the template should associate objects based on metadata, new means only when new template is being created, always means both for new and existing template which is only being updated, never ignores metadata"
          },
          {
            "name": "options[lock]",
            "type": "boolean",
            "in": "formData",
            "description": "lock imported templates (false by default)"
          },
          {
            "name": "options[default]",
            "type": "boolean",
            "in": "formData",
            "description": "makes the template default meaning it will be automatically associated with newly created organizations and locations (false by default)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/provisioning_templates/revision": {
      "get": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_provisioning_templates_revision",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "version",
            "type": "string",
            "in": "query",
            "description": "template version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/provisioning_templates/build_pxe_default": {
      "post": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_provisioning_templates_build_pxe_default",
        "summary": "Update the default PXE menu on all configured TFTP servers",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/provisioning_templates/{id}/clone": {
      "post": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_provisioning_templates_id_clone",
        "summary": "Clone a provision template",
        "parameters": [
          {
            "name": "provisioning_template[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "template name"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/provisioning_templates/{id}/export": {
      "get": {
        "tags": [
          "provisioning_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_provisioning_templates_id_export",
        "summary": "Export a provisioning template to ERB",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ptables": {
      "get": {
        "tags": [
          "ptables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ptables",
        "summary": "List all partition tables",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "ptables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_ptables",
        "summary": "Create a partition table",
        "parameters": [
          {
            "name": "ptable[layout]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "ptable[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "ptable[snippet]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "ptable[audit_comment]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "ptable[locked]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the template is locked for editing"
          },
          {
            "name": "ptable[os_family]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "ptable[operatingsystem_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of operating system IDs to associate with the partition table"
          },
          {
            "name": "ptable[host_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of host IDs to associate with the partition table"
          },
          {
            "name": "ptable[hostgroup_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of host group IDs to associate with the partition table"
          },
          {
            "name": "ptable[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "ptable[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/operatingsystems/{operatingsystem_id}/ptables": {
      "get": {
        "tags": [
          "ptables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_operatingsystems_operatingsystem_id_ptables",
        "summary": "List all partition tables for an operating system",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/ptables": {
      "get": {
        "tags": [
          "ptables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_ptables",
        "summary": "List all partition tables per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/ptables": {
      "get": {
        "tags": [
          "ptables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_ptables",
        "summary": "List all partition tables per organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "operatingsystem_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of operating system"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ptables/{id}": {
      "get": {
        "tags": [
          "ptables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ptables_id",
        "summary": "Show a partition table",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "ptables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_ptables_id",
        "summary": "Update a partition table",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "ptable[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "ptable[layout]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "ptable[snippet]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "ptable[audit_comment]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "ptable[locked]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the template is locked for editing"
          },
          {
            "name": "ptable[os_family]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "ptable[operatingsystem_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of operating system IDs to associate with the partition table"
          },
          {
            "name": "ptable[host_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of host IDs to associate with the partition table"
          },
          {
            "name": "ptable[hostgroup_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of host group IDs to associate with the partition table"
          },
          {
            "name": "ptable[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "ptable[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "ptables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_ptables_id",
        "summary": "Delete a partition table",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ptables/import": {
      "post": {
        "tags": [
          "ptables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_ptables_import",
        "summary": "Import a provisioning template",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "ptable[name]",
            "type": "string",
            "in": "formData",
            "description": "template name"
          },
          {
            "name": "ptable[template]",
            "type": "string",
            "in": "formData",
            "description": "template contents including metadata"
          },
          {
            "name": "ptable[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "ptable[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          },
          {
            "name": "options[force]",
            "type": "boolean",
            "in": "formData",
            "description": "use if you want update locked templates"
          },
          {
            "name": "options[associate]",
            "type": "string",
            "enum": [
              "new",
              "always",
              "never"
            ],
            "in": "formData",
            "description": "determines when the template should associate objects based on metadata, new means only when new template is being created, always means both for new and existing template which is only being updated, never ignores metadata"
          },
          {
            "name": "options[lock]",
            "type": "boolean",
            "in": "formData",
            "description": "lock imported templates (false by default)"
          },
          {
            "name": "options[default]",
            "type": "boolean",
            "in": "formData",
            "description": "makes the template default meaning it will be automatically associated with newly created organizations and locations (false by default)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ptables/revision": {
      "get": {
        "tags": [
          "ptables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ptables_revision",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "version",
            "type": "string",
            "in": "query",
            "description": "template version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ptables/{id}/clone": {
      "post": {
        "tags": [
          "ptables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_ptables_id_clone",
        "summary": "Clone a template",
        "parameters": [
          {
            "name": "ptable[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "template name"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ptables/{id}/export": {
      "get": {
        "tags": [
          "ptables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ptables_id_export",
        "summary": "Export a partition template to ERB",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{id}/puppetrun": {
      "put": {
        "tags": [
          "puppet_hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_id_puppetrun",
        "summary": "Force a Puppet agent run on the host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/puppetclasses": {
      "get": {
        "tags": [
          "puppetclasses"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_puppetclasses",
        "summary": "List all Puppet classes",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "puppetclasses"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_puppetclasses",
        "summary": "Create a Puppet class",
        "parameters": [
          {
            "name": "puppetclass[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/puppetclasses": {
      "get": {
        "tags": [
          "puppetclasses"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_puppetclasses",
        "summary": "List all Puppet classes for a host",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{hostgroup_id}/puppetclasses": {
      "get": {
        "tags": [
          "puppetclasses"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups_hostgroup_id_puppetclasses",
        "summary": "List all Puppet classes for a host group",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/environments/{environment_id}/puppetclasses": {
      "get": {
        "tags": [
          "puppetclasses"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_environments_environment_id_puppetclasses",
        "summary": "List all Puppet classes for an environment",
        "parameters": [
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "environment_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/puppetclasses/{id}": {
      "get": {
        "tags": [
          "puppetclasses"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_puppetclasses_id",
        "summary": "Show a Puppet class",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "puppetclasses"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_puppetclasses_id",
        "summary": "Update a Puppet class",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "puppetclass[name]",
            "type": "string",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "puppetclasses"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_puppetclasses_id",
        "summary": "Delete a Puppet class",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/puppetclasses/{id}": {
      "get": {
        "tags": [
          "puppetclasses"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_puppetclasses_id",
        "summary": "Show a Puppet class for host",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hostgroups/{hostgroup_id}/puppetclasses/{id}": {
      "get": {
        "tags": [
          "puppetclasses"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hostgroups_hostgroup_id_puppetclasses_id",
        "summary": "Show a Puppet class for a host group",
        "parameters": [
          {
            "name": "environment_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/environments/{environment_id}/puppetclasses/{id}": {
      "get": {
        "tags": [
          "puppetclasses"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_environments_environment_id_puppetclasses_id",
        "summary": "Show a Puppet class for an environment",
        "parameters": [
          {
            "name": "hostgroup_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "ID of host"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of Puppet class"
          },
          {
            "name": "environment_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of environment"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/recurring_logics": {
      "get": {
        "tags": [
          "recurring_logics"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_recurring_logics",
        "summary": "List recurring logics",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/recurring_logics/{id}": {
      "get": {
        "tags": [
          "recurring_logics"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_recurring_logics_id",
        "summary": "Show recurring logic details",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the recurring logic"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "recurring_logics"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_recurring_logics_id",
        "summary": "Update recurring logic",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the recurring logic"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "enabled",
            "type": "boolean",
            "in": "formData",
            "description": "Whether the recurring logic is enabled or disabled."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/recurring_logics/{id}/cancel": {
      "post": {
        "tags": [
          "recurring_logics"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_recurring_logics_id_cancel",
        "summary": "Cancel recurring logic",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the recurring logic"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/tasks/summary": {
      "get": {
        "tags": [
          "foreman_tasks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_tasks_summary",
        "summary": "Show task summary",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "foreman_tasks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_tasks_id",
        "summary": "Show task details",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "UUID of the task"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/tasks/bulk_search": {
      "post": {
        "tags": [
          "foreman_tasks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_tasks_bulk_search",
        "summary": "List dynflow tasks for uuids",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "searches",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of uuids to fetch info about"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>For every search it returns the list of tasks that satisfty the condition.\nThe reason for supporting multiple searches is the UI that might be ending\nneeding periodic updates on task status for various searches at the same\ntime. This way, it is possible to get all the task statuses with one\nrequest.</p>\n"
      }
    },
    "/tasks/bulk_resume": {
      "post": {
        "tags": [
          "foreman_tasks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_tasks_bulk_resume",
        "summary": "Resume all paused error tasks",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "formData",
            "description": "Resume tasks matching search string"
          },
          {
            "name": "task_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Resume specific tasks by ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "foreman_tasks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_tasks",
        "summary": "List tasks",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, e.g. 'name DESC'"
          },
          {
            "name": "sort[by]",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort[order]",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/tasks/callback": {
      "post": {
        "tags": [
          "foreman_tasks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_tasks_callback",
        "summary": "Send data to the task from external executor (such as smart_proxy_dynflow)",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "callback[task_id]",
            "type": "string",
            "in": "formData",
            "description": "UUID of the task"
          },
          {
            "name": "callback[step_id]",
            "type": "string",
            "in": "formData",
            "description": "The ID of the step inside the execution plan to send the event to"
          },
          {
            "name": "callbacks",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/templates/{template_id}/foreign_input_sets": {
      "get": {
        "tags": [
          "foreign_input_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_templates_template_id_foreign_input_sets",
        "summary": "List foreign input sets",
        "parameters": [
          {
            "name": "template_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "foreign_input_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_templates_template_id_foreign_input_sets",
        "summary": "Create a foreign input set",
        "parameters": [
          {
            "name": "foreign_input_set[target_template_id]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Target template ID"
          },
          {
            "name": "template_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "foreign_input_set[include_all]",
            "type": "boolean",
            "in": "formData",
            "description": "Include all inputs from the foreign template"
          },
          {
            "name": "foreign_input_set[include]",
            "type": "string",
            "in": "formData",
            "description": "A comma separated list of input names to be included from the foreign template."
          },
          {
            "name": "foreign_input_set[exclude]",
            "type": "string",
            "in": "formData",
            "description": "A comma separated list of input names to be included from the foreign template."
          },
          {
            "name": "foreign_input_set[description]",
            "type": "string",
            "in": "formData",
            "description": "Input set description"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/templates/{template_id}/foreign_input_sets/{id}": {
      "get": {
        "tags": [
          "foreign_input_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_templates_template_id_foreign_input_sets_id",
        "summary": "Show foreign input set details",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "template_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "foreign_input_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_templates_template_id_foreign_input_sets_id",
        "summary": "Delete a foreign input set",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "template_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "foreign_input_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_templates_template_id_foreign_input_sets_id",
        "summary": "Update a foreign input set",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "template_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "foreign_input_set[target_template_id]",
            "type": "string",
            "in": "formData",
            "description": "Target template ID"
          },
          {
            "name": "foreign_input_set[include_all]",
            "type": "boolean",
            "in": "formData",
            "description": "Include all inputs from the foreign template"
          },
          {
            "name": "foreign_input_set[include]",
            "type": "string",
            "in": "formData",
            "description": "A comma separated list of input names to be included from the foreign template."
          },
          {
            "name": "foreign_input_set[exclude]",
            "type": "string",
            "in": "formData",
            "description": "A comma separated list of input names to be included from the foreign template."
          },
          {
            "name": "foreign_input_set[description]",
            "type": "string",
            "in": "formData",
            "description": "Input set description"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_invocations": {
      "get": {
        "tags": [
          "job_invocations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_job_invocations",
        "summary": "List job invocations",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "job_invocations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_job_invocations",
        "summary": "Create a job invocation",
        "parameters": [
          {
            "name": "job_invocation[targeting_type]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Invocation type, one of {\"static_query\"=>\"Static Query\", \"dynamic_query\"=>\"Dynamic Query\"}"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "job_invocation[job_template_id]",
            "type": "string",
            "in": "formData",
            "description": "The job template to use, parameter is required unless feature was specified"
          },
          {
            "name": "job_invocation[ssh][effective_user]",
            "type": "string",
            "in": "formData",
            "description": "What user should be used to run the script (using sudo-like mechanisms). Defaults to a template parameter or global setting."
          },
          {
            "name": "job_invocation[recurrence][cron_line]",
            "type": "string",
            "in": "formData",
            "description": "How often the job should occur, in the cron format"
          },
          {
            "name": "job_invocation[recurrence][max_iteration]",
            "type": "number",
            "in": "formData",
            "description": "Repeat a maximum of N times"
          },
          {
            "name": "job_invocation[recurrence][end_time]",
            "type": "string",
            "in": "formData",
            "description": "Perform no more executions after this time"
          },
          {
            "name": "job_invocation[scheduling][start_at]",
            "type": "string",
            "in": "formData",
            "description": "Schedule the job for a future time"
          },
          {
            "name": "job_invocation[scheduling][start_before]",
            "type": "string",
            "in": "formData",
            "description": "Indicates that the action should be cancelled if it cannot be started before this time."
          },
          {
            "name": "job_invocation[concurrency_control][time_span]",
            "type": "number",
            "in": "formData",
            "description": "Distribute tasks over N seconds"
          },
          {
            "name": "job_invocation[concurrency_control][concurrency_level]",
            "type": "number",
            "in": "formData",
            "description": "Run at most N tasks at a time"
          },
          {
            "name": "job_invocation[bookmark_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "job_invocation[search_query]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "job_invocation[description_format]",
            "type": "string",
            "in": "formData",
            "description": "Override the description format from the template for this invocation only"
          },
          {
            "name": "job_invocation[execution_timeout_interval]",
            "type": "number",
            "in": "formData",
            "description": "Override the timeout interval from the template for this invocation only"
          },
          {
            "name": "job_invocation[feature]",
            "type": "string",
            "in": "formData",
            "description": "Remote execution feature label that should be triggered, job template assigned to this feature will be used"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_invocations/{id}": {
      "get": {
        "tags": [
          "job_invocations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_job_invocations_id",
        "summary": "Show job invocation",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_invocations/{id}/hosts/{host_id}": {
      "get": {
        "tags": [
          "job_invocations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_job_invocations_id_hosts_host_id",
        "summary": "Get output for a host",
        "parameters": [
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "since",
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_invocations/{id}/hosts/{host_id}/raw": {
      "get": {
        "tags": [
          "job_invocations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_job_invocations_id_hosts_host_id_raw",
        "summary": "Get raw output for a host",
        "parameters": [
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_invocations/{id}/cancel": {
      "post": {
        "tags": [
          "job_invocations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_job_invocations_id_cancel",
        "summary": "Cancel job invocation",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "force",
            "type": "boolean",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_invocations/{id}/rerun": {
      "post": {
        "tags": [
          "job_invocations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_job_invocations_id_rerun",
        "summary": "Rerun job on failed hosts",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "failed_only",
            "type": "boolean",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_templates": {
      "get": {
        "tags": [
          "job_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_job_templates",
        "summary": "List job templates",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "job_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_job_templates",
        "summary": "Create a job template",
        "parameters": [
          {
            "name": "job_template[provider_type]",
            "type": "string",
            "enum": [
              "SSH",
              "Ansible"
            ],
            "in": "formData",
            "required": true,
            "description": "Provider type"
          },
          {
            "name": "job_template[template]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "job_template[job_category]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Job category"
          },
          {
            "name": "job_template[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Template name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "job_template[description_format]",
            "type": "string",
            "in": "formData",
            "description": "This template is used to generate the description. Input values can be used using the syntax %{package}. You may also include the job category and template name using %{job_category} and %{template_name}."
          },
          {
            "name": "job_template[snippet]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "job_template[audit_comment]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "job_template[locked]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the template is locked for editing"
          },
          {
            "name": "job_template[effective_user_attributes][value]",
            "type": "string",
            "in": "formData",
            "description": "What user should be used to run the script (using sudo-like mechanisms)"
          },
          {
            "name": "job_template[effective_user_attributes][overridable]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether it should be allowed to override the effective user from the invocation form."
          },
          {
            "name": "job_template[effective_user_attributes][current_user]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether the current user login should be used as the effective user"
          },
          {
            "name": "job_template[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "job_template[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/locations/{location_id}/job_templates": {
      "get": {
        "tags": [
          "job_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_locations_location_id_job_templates",
        "summary": "List job templates per location",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/job_templates": {
      "get": {
        "tags": [
          "job_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_job_templates",
        "summary": "List job templates per organization",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_templates/import": {
      "post": {
        "tags": [
          "job_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_job_templates_import",
        "summary": "Import a job template from ERB",
        "parameters": [
          {
            "name": "template",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Template ERB"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "overwrite",
            "type": "boolean",
            "in": "formData",
            "description": "Overwrite template if it already exists"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_templates/{id}/export": {
      "get": {
        "tags": [
          "job_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_job_templates_id_export",
        "summary": "Export a job template to ERB",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_templates/{id}": {
      "get": {
        "tags": [
          "job_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_job_templates_id",
        "summary": "Show job template details",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "job_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_job_templates_id",
        "summary": "Update a job template",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "job_template[name]",
            "type": "string",
            "in": "formData",
            "description": "Template name"
          },
          {
            "name": "job_template[job_category]",
            "type": "string",
            "in": "formData",
            "description": "Job category"
          },
          {
            "name": "job_template[description_format]",
            "type": "string",
            "in": "formData",
            "description": "This template is used to generate the description. Input values can be used using the syntax %{package}. You may also include the job category and template name using %{job_category} and %{template_name}."
          },
          {
            "name": "job_template[template]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "job_template[provider_type]",
            "type": "string",
            "enum": [
              "SSH",
              "Ansible"
            ],
            "in": "formData",
            "description": "Provider type"
          },
          {
            "name": "job_template[snippet]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "job_template[audit_comment]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "job_template[locked]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the template is locked for editing"
          },
          {
            "name": "job_template[effective_user_attributes][value]",
            "type": "string",
            "in": "formData",
            "description": "What user should be used to run the script (using sudo-like mechanisms)"
          },
          {
            "name": "job_template[effective_user_attributes][overridable]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether it should be allowed to override the effective user from the invocation form."
          },
          {
            "name": "job_template[effective_user_attributes][current_user]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether the current user login should be used as the effective user"
          },
          {
            "name": "job_template[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "job_template[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "job_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_job_templates_id",
        "summary": "Delete a job template",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_templates/revision": {
      "get": {
        "tags": [
          "job_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_job_templates_revision",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "version",
            "type": "string",
            "in": "query",
            "description": "Template version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_templates/{id}/clone": {
      "post": {
        "tags": [
          "job_templates"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_job_templates_id_clone",
        "summary": "Clone a provision template",
        "parameters": [
          {
            "name": "job_template[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Template name"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/remote_execution_features": {
      "get": {
        "tags": [
          "remote_execution_features"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_remote_execution_features",
        "summary": "List remote execution features",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/remote_execution_features/{id}": {
      "get": {
        "tags": [
          "remote_execution_features"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_remote_execution_features_id",
        "summary": "Show remote execution feature",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "remote_execution_features"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_remote_execution_features_id",
        "summary": "Update a job template",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "remote_execution_feature[job_template_id]",
            "type": "string",
            "in": "formData",
            "description": "Job template ID to be used for the feature"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/job_invocations/{job_invocation_id}/template_invocations": {
      "get": {
        "tags": [
          "template_invocations"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_job_invocations_job_invocation_id_template_invocations",
        "summary": "List template invocations belonging to job invocation",
        "parameters": [
          {
            "name": "job_invocation_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_inventories/hosts": {
      "post": {
        "tags": [
          "ansible_inventories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_ansible_inventories_hosts",
        "summary": "Show Ansible inventory for hosts",
        "parameters": [
          {
            "name": "hostgroup_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "IDs of hostgroups included in inventory"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "IDs of hosts included in inventory"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "get": {
        "tags": [
          "ansible_inventories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ansible_inventories_hosts",
        "summary": "Show Ansible inventory for hosts",
        "parameters": [
          {
            "name": "hostgroup_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "required": true,
            "description": "IDs of hostgroups included in inventory"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "required": true,
            "description": "IDs of hosts included in inventory"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_inventories/hostgroups": {
      "post": {
        "tags": [
          "ansible_inventories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_ansible_inventories_hostgroups",
        "summary": "Show Ansible inventory for hostgroups",
        "parameters": [
          {
            "name": "hostgroup_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "IDs of hostgroups included in inventory"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "IDs of hosts included in inventory"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "get": {
        "tags": [
          "ansible_inventories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ansible_inventories_hostgroups",
        "summary": "Show Ansible inventory for hostgroups",
        "parameters": [
          {
            "name": "hostgroup_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "required": true,
            "description": "IDs of hostgroups included in inventory"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "required": true,
            "description": "IDs of hosts included in inventory"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_override_values": {
      "post": {
        "tags": [
          "ansible_override_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_ansible_override_values",
        "summary": "Create an override value for a specific ansible variable",
        "parameters": [
          {
            "name": "override_value[match]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Override match"
          },
          {
            "name": "ansible_variable_id",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "override_value[value]",
            "type": "any_type",
            "in": "formData",
            "description": "Override value, required if omit is false"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_override_values/{id}": {
      "delete": {
        "tags": [
          "ansible_override_values"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_ansible_override_values_id",
        "summary": "Destroy an override value",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_roles/{id}": {
      "get": {
        "tags": [
          "ansible_roles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ansible_roles_id",
        "summary": "Show role",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "ansible_roles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_ansible_roles_id",
        "summary": "Deletes Ansible role",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_roles": {
      "get": {
        "tags": [
          "ansible_roles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ansible_roles",
        "summary": "List Ansible roles",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_roles/import": {
      "put": {
        "tags": [
          "ansible_roles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_ansible_roles_import",
        "summary": "Import Ansible roles",
        "parameters": [
          {
            "name": "proxy_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Capsule to import from"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "role_names",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Ansible role names to import"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_roles/obsolete": {
      "put": {
        "tags": [
          "ansible_roles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_ansible_roles_obsolete",
        "summary": "Obsolete Ansible roles",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "proxy_id",
            "type": "string",
            "in": "formData",
            "description": "Capsule to import from"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_roles/fetch": {
      "get": {
        "tags": [
          "ansible_roles"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ansible_roles_fetch",
        "summary": "Fetch Ansible roles available to be imported",
        "parameters": [
          {
            "name": "proxy_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "Capsule to fetch from"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_variables/{id}": {
      "get": {
        "tags": [
          "ansible_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ansible_variables_id",
        "summary": "Show variable",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "ansible_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_ansible_variables_id",
        "summary": "Deletes Ansible variable",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "ansible_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_ansible_variables_id",
        "summary": "Updates Ansible variable",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "ansible_variable[variable]",
            "type": "string",
            "in": "formData",
            "description": "Name of variable"
          },
          {
            "name": "ansible_variable[ansible_role_id]",
            "type": "number",
            "in": "formData",
            "description": "Role ID"
          },
          {
            "name": "ansible_variable[default_value]",
            "type": "any_type",
            "in": "formData",
            "description": "Default value of variable"
          },
          {
            "name": "ansible_variable[hidden_value]",
            "type": "boolean",
            "in": "formData",
            "description": "When enabled the parameter is hidden in the UI"
          },
          {
            "name": "ansible_variable[override_value_order]",
            "type": "string",
            "in": "formData",
            "description": "The order in which values are resolved"
          },
          {
            "name": "ansible_variable[description]",
            "type": "string",
            "in": "formData",
            "description": "Description of variable"
          },
          {
            "name": "ansible_variable[validator_type]",
            "type": "string",
            "enum": [
              "regexp",
              "list"
            ],
            "in": "formData",
            "description": "Types of validation values"
          },
          {
            "name": "ansible_variable[validator_rule]",
            "type": "string",
            "in": "formData",
            "description": "Used to enforce certain values for the parameter values"
          },
          {
            "name": "ansible_variable[variable_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Types of variable values"
          },
          {
            "name": "ansible_variable[merge_overrides]",
            "type": "boolean",
            "in": "formData",
            "description": "Merge all matching values (only array/hash type)"
          },
          {
            "name": "ansible_variable[merge_default]",
            "type": "boolean",
            "in": "formData",
            "description": "Include default value when merging all matching values"
          },
          {
            "name": "ansible_variable[avoid_duplicates]",
            "type": "boolean",
            "in": "formData",
            "description": "Remove duplicate values (only array type)"
          },
          {
            "name": "ansible_variable[override]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether to override variable or not"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_variables": {
      "get": {
        "tags": [
          "ansible_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ansible_variables",
        "summary": "List Ansible variables",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "ansible_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_ansible_variables",
        "summary": "Create Ansible variable",
        "parameters": [
          {
            "name": "ansible_variable[ansible_role_id]",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Role ID"
          },
          {
            "name": "ansible_variable[variable]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Name of variable"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "ansible_variable[default_value]",
            "type": "any_type",
            "in": "formData",
            "description": "Default value of variable"
          },
          {
            "name": "ansible_variable[hidden_value]",
            "type": "boolean",
            "in": "formData",
            "description": "When enabled the parameter is hidden in the UI"
          },
          {
            "name": "ansible_variable[override_value_order]",
            "type": "string",
            "in": "formData",
            "description": "The order in which values are resolved"
          },
          {
            "name": "ansible_variable[description]",
            "type": "string",
            "in": "formData",
            "description": "Description of variable"
          },
          {
            "name": "ansible_variable[validator_type]",
            "type": "string",
            "enum": [
              "regexp",
              "list"
            ],
            "in": "formData",
            "description": "Types of validation values"
          },
          {
            "name": "ansible_variable[validator_rule]",
            "type": "string",
            "in": "formData",
            "description": "Used to enforce certain values for the parameter values"
          },
          {
            "name": "ansible_variable[variable_type]",
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "integer",
              "real",
              "array",
              "hash",
              "yaml",
              "json"
            ],
            "in": "formData",
            "description": "Types of variable values"
          },
          {
            "name": "ansible_variable[merge_overrides]",
            "type": "boolean",
            "in": "formData",
            "description": "Merge all matching values (only array/hash type)"
          },
          {
            "name": "ansible_variable[merge_default]",
            "type": "boolean",
            "in": "formData",
            "description": "Include default value when merging all matching values"
          },
          {
            "name": "ansible_variable[avoid_duplicates]",
            "type": "boolean",
            "in": "formData",
            "description": "Remove duplicate values (only array type)"
          },
          {
            "name": "ansible_variable[override]",
            "type": "boolean",
            "in": "formData",
            "description": "Whether to override variable or not"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_variables/import": {
      "put": {
        "tags": [
          "ansible_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_ansible_variables_import",
        "summary": "Import Ansible variables. This will only import variables for already existing roles, it will not import any new roles",
        "parameters": [
          {
            "name": "proxy_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Capsule to import from"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ansible_variables/obsolete": {
      "put": {
        "tags": [
          "ansible_variables"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_ansible_variables_obsolete",
        "summary": "Obsolete Ansible variables. This will only obsolete variables for already existing roles, it will not delete any old roles",
        "parameters": [
          {
            "name": "proxy_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Capsule to import from"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repository_sets": {
      "get": {
        "tags": [
          "repository_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repository_sets",
        "summary": "List repository sets.",
        "parameters": [
          {
            "name": "product_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of a product to list repository sets from"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "Repository set name to search on"
          },
          {
            "name": "enabled",
            "type": "boolean",
            "in": "query",
            "description": "If true, only return repository sets that have been enabled. Defaults to false"
          },
          {
            "name": "with_active_subscription",
            "type": "boolean",
            "in": "query",
            "description": "If true, only return repository sets that are associated with an active subscriptions"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/products/{product_id}/repository_sets": {
      "get": {
        "tags": [
          "repository_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_products_product_id_repository_sets",
        "summary": "List repository sets for a product.",
        "parameters": [
          {
            "name": "product_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of a product to list repository sets from"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "Repository set name to search on"
          },
          {
            "name": "enabled",
            "type": "boolean",
            "in": "query",
            "description": "If true, only return repository sets that have been enabled. Defaults to false"
          },
          {
            "name": "with_active_subscription",
            "type": "boolean",
            "in": "query",
            "description": "If true, only return repository sets that are associated with an active subscriptions"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repository_sets/{id}": {
      "get": {
        "tags": [
          "repository_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repository_sets_id",
        "summary": "Get info about a repository set",
        "parameters": [
          {
            "name": "product_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of a product to list repository sets from"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the repository set"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/products/{product_id}/repository_sets/{id}": {
      "get": {
        "tags": [
          "repository_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_products_product_id_repository_sets_id",
        "summary": "Get info about a repository set",
        "parameters": [
          {
            "name": "product_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of a product to list repository sets from"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the repository set"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repository_sets/{id}/available_repositories": {
      "get": {
        "tags": [
          "repository_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repository_sets_id_available_repositories",
        "summary": "Get list of available repositories for the repository set",
        "parameters": [
          {
            "name": "product_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of a product to list repository sets from"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the repository set"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/products/{product_id}/repository_sets/{id}/available_repositories": {
      "get": {
        "tags": [
          "repository_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_products_product_id_repository_sets_id_available_repositories",
        "summary": "Get list of available repositories for the repository set",
        "parameters": [
          {
            "name": "product_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of a product to list repository sets from"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the repository set"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repository_sets/{id}/enable": {
      "put": {
        "tags": [
          "repository_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_repository_sets_id_enable",
        "summary": "Enable a repository from the set",
        "parameters": [
          {
            "name": "product_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the product containing the repository set"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the repository set to enable"
          },
          {
            "name": "basearch",
            "type": "string",
            "in": "formData",
            "description": "Basearch to enable"
          },
          {
            "name": "releasever",
            "type": "string",
            "in": "formData",
            "description": "Releasever to enable"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/products/{product_id}/repository_sets/{id}/enable": {
      "put": {
        "tags": [
          "repository_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_products_product_id_repository_sets_id_enable",
        "summary": "Enable a repository from the set",
        "parameters": [
          {
            "name": "product_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the product containing the repository set"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the repository set to enable"
          },
          {
            "name": "basearch",
            "type": "string",
            "in": "formData",
            "description": "Basearch to enable"
          },
          {
            "name": "releasever",
            "type": "string",
            "in": "formData",
            "description": "Releasever to enable"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repository_sets/{id}/disable": {
      "put": {
        "tags": [
          "repository_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_repository_sets_id_disable",
        "summary": "Disable a repository from the set",
        "parameters": [
          {
            "name": "product_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the product containing the repository set"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the repository set to disable"
          },
          {
            "name": "basearch",
            "type": "string",
            "in": "formData",
            "description": "Basearch to disable"
          },
          {
            "name": "releasever",
            "type": "string",
            "in": "formData",
            "description": "Releasever to disable"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/products/{product_id}/repository_sets/{id}/disable": {
      "put": {
        "tags": [
          "repository_sets"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_products_product_id_repository_sets_id_disable",
        "summary": "Disable a repository from the set",
        "parameters": [
          {
            "name": "product_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the product containing the repository set"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the repository set to disable"
          },
          {
            "name": "basearch",
            "type": "string",
            "in": "formData",
            "description": "Basearch to disable"
          },
          {
            "name": "releasever",
            "type": "string",
            "in": "formData",
            "description": "Releasever to disable"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys": {
      "get": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_activation_keys",
        "summary": "List activation keys",
        "parameters": [
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "environment identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "description": "content view identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "activation key name to filter by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_activation_keys",
        "summary": "Create an activation key",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "name"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "description"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "formData",
            "description": "environment id"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "formData",
            "description": "content view id"
          },
          {
            "name": "max_hosts",
            "type": "number",
            "in": "formData",
            "description": "maximum number of registered content hosts"
          },
          {
            "name": "unlimited_hosts",
            "type": "boolean",
            "in": "formData",
            "description": "can the activation key have unlimited hosts"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/environments/{environment_id}/activation_keys": {
      "get": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_environments_environment_id_activation_keys",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "environment identifier"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "description": "content view identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "activation key name to filter by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/activation_keys": {
      "get": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_activation_keys",
        "parameters": [
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "environment identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "description": "content view identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "activation key name to filter by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys/{id}": {
      "put": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_activation_keys_id",
        "summary": "Update an activation key",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the activation key"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "name"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "description"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "formData",
            "description": "environment id"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "formData",
            "description": "content view id"
          },
          {
            "name": "max_hosts",
            "type": "number",
            "in": "formData",
            "description": "maximum number of registered content hosts"
          },
          {
            "name": "unlimited_hosts",
            "type": "boolean",
            "in": "formData",
            "description": "can the activation key have unlimited hosts"
          },
          {
            "name": "release_version",
            "type": "string",
            "in": "formData",
            "description": "content release version"
          },
          {
            "name": "service_level",
            "type": "string",
            "in": "formData",
            "description": "service level"
          },
          {
            "name": "auto_attach",
            "type": "boolean",
            "in": "formData",
            "description": "auto attach subscriptions upon registration"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_activation_keys_id",
        "summary": "Destroy an activation key",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the activation key"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "get": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_activation_keys_id",
        "summary": "Show an activation key",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the activation key"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys/{id}/copy": {
      "post": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_activation_keys_id_copy",
        "summary": "Copy an activation key",
        "parameters": [
          {
            "name": "new_name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Name of new activation key"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the activation key"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys/{id}/host_collections/available": {
      "get": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_activation_keys_id_host_collections_available",
        "summary": "List host collections the activation key does not belong to",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "host collection name to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys/{id}/releases": {
      "get": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_activation_keys_id_releases",
        "summary": "Show release versions available for an activation key",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the activation key"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys/{id}/product_content": {
      "get": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_activation_keys_id_product_content",
        "summary": "Show content available for an activation key",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the activation key"
          },
          {
            "name": "content_access_mode_all",
            "type": "boolean",
            "in": "query",
            "description": "Get all content available, not just that provided by subscriptions"
          },
          {
            "name": "content_access_mode_env",
            "type": "boolean",
            "in": "query",
            "description": "Limit content to just that available in the activation key's content view version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys/{id}/host_collections": {
      "post": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_activation_keys_id_host_collections",
        "parameters": [
          {
            "name": "host_collection_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of host collection IDs to associate with activation key"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the activation key"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_activation_keys_id_host_collections",
        "parameters": [
          {
            "name": "host_collection_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of host collection IDs to disassociate from the activation key"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the activation key"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys/{id}/add_subscriptions": {
      "put": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_activation_keys_id_add_subscriptions",
        "summary": "Attach a subscription",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the activation key"
          },
          {
            "name": "subscription_id",
            "type": "number",
            "in": "formData",
            "description": "Subscription identifier"
          },
          {
            "name": "quantity",
            "type": "number",
            "in": "formData",
            "description": "Quantity of this subscription to add"
          },
          {
            "name": "subscriptions",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of subscriptions to add"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys/{id}/remove_subscriptions": {
      "put": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_activation_keys_id_remove_subscriptions",
        "summary": "Unattach a subscription",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the activation key"
          },
          {
            "name": "subscription_id",
            "type": "string",
            "in": "formData",
            "description": "Subscription ID"
          },
          {
            "name": "subscriptions",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of subscriptions to add"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys/{id}/content_override": {
      "put": {
        "tags": [
          "activation_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_activation_keys_id_content_override",
        "summary": "Override content for activation_key",
        "parameters": [
          {
            "name": "content_override[value]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Override to a boolean value or 'default'"
          },
          {
            "name": "content_override[content_label]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Label of the content"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the activation key"
          },
          {
            "name": "content_overrides",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of Content override parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/subscriptions": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_subscriptions",
        "summary": "List organization subscriptions",
        "parameters": [
          {
            "name": "activation_key_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "Activation key ID"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization ID"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "description": "id of a host"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Object to show subscriptions available for, either 'host' or 'activation_key'"
          },
          {
            "name": "match_host",
            "type": "boolean",
            "in": "query",
            "description": "Ignore subscriptions that are unavailable to the specified host"
          },
          {
            "name": "match_installed",
            "type": "boolean",
            "in": "query",
            "description": "Return subscriptions that match installed products of the specified host"
          },
          {
            "name": "no_overlap",
            "type": "boolean",
            "in": "query",
            "description": "Return subscriptions which do not overlap with a currently-attached subscription"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys/{activation_key_id}/subscriptions": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_activation_keys_activation_key_id_subscriptions",
        "summary": "List an activation key's subscriptions",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Organization ID"
          },
          {
            "name": "activation_key_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Activation key ID"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "description": "id of a host"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Object to show subscriptions available for, either 'host' or 'activation_key'"
          },
          {
            "name": "match_host",
            "type": "boolean",
            "in": "query",
            "description": "Ignore subscriptions that are unavailable to the specified host"
          },
          {
            "name": "match_installed",
            "type": "boolean",
            "in": "query",
            "description": "Return subscriptions that match installed products of the specified host"
          },
          {
            "name": "no_overlap",
            "type": "boolean",
            "in": "query",
            "description": "Return subscriptions which do not overlap with a currently-attached subscription"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_activation_keys_activation_key_id_subscriptions",
        "summary": "Add a subscription to an activation key",
        "parameters": [
          {
            "name": "activation_key_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the activation key"
          },
          {
            "name": "id",
            "type": "string",
            "in": "formData",
            "description": "Subscription Pool uuid"
          },
          {
            "name": "quantity",
            "type": "number",
            "in": "formData",
            "description": "Quantity of this subscriptions to add"
          },
          {
            "name": "subscriptions",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of subscriptions to add"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_subscriptions",
        "parameters": [
          {
            "name": "activation_key_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "Activation key ID"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Organization ID"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "host_id",
            "type": "string",
            "in": "query",
            "description": "id of a host"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Object to show subscriptions available for, either 'host' or 'activation_key'"
          },
          {
            "name": "match_host",
            "type": "boolean",
            "in": "query",
            "description": "Ignore subscriptions that are unavailable to the specified host"
          },
          {
            "name": "match_installed",
            "type": "boolean",
            "in": "query",
            "description": "Return subscriptions that match installed products of the specified host"
          },
          {
            "name": "no_overlap",
            "type": "boolean",
            "in": "query",
            "description": "Return subscriptions which do not overlap with a currently-attached subscription"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/subscriptions/{id}": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_subscriptions_id",
        "summary": "Show a subscription",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Subscription identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/subscriptions/{id}": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_subscriptions_id",
        "summary": "Show a subscription",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Organization identifier"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Subscription identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/subscriptions/upload": {
      "post": {
        "tags": [
          "subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_organizations_organization_id_subscriptions_upload",
        "summary": "Upload a subscription manifest",
        "parameters": [
          {
            "name": "content",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Subscription manifest file"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization id"
          },
          {
            "name": "repository_url",
            "type": "string",
            "in": "formData",
            "description": "repository url"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/subscriptions/refresh_manifest": {
      "put": {
        "tags": [
          "subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_organizations_organization_id_subscriptions_refresh_manifest",
        "summary": "Refresh previously imported manifest for Red Hat provider",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/subscriptions/delete_manifest": {
      "post": {
        "tags": [
          "subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_organizations_organization_id_subscriptions_delete_manifest",
        "summary": "Delete manifest from Red Hat provider",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/subscriptions/manifest_history": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_subscriptions_manifest_history",
        "summary": "obtain manifest history for subscriptions",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/capsules/{id}/content/lifecycle_environments": {
      "get": {
        "tags": [
          "capsule_content"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_capsules_id_content_lifecycle_environments",
        "summary": "List the lifecycle environments attached to the capsule",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the capsule"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Id of the organization to limit environments on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "capsule_content"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_capsules_id_content_lifecycle_environments",
        "summary": "Add lifecycle environments to the capsule",
        "parameters": [
          {
            "name": "environment_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Id of the lifecycle environment"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the capsule"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/capsules/{id}/content/available_lifecycle_environments": {
      "get": {
        "tags": [
          "capsule_content"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_capsules_id_content_available_lifecycle_environments",
        "summary": "List the lifecycle environments not attached to the capsule",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the capsule"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Id of the organization to limit environments on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/capsules/{id}/content/lifecycle_environments/{environment_id}": {
      "delete": {
        "tags": [
          "capsule_content"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_capsules_id_content_lifecycle_environments_environment_id",
        "summary": "Remove lifecycle environments from the capsule",
        "parameters": [
          {
            "name": "environment_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the lifecycle environment"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the capsule"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/capsules/{id}/content/sync": {
      "post": {
        "tags": [
          "capsule_content"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_capsules_id_content_sync",
        "summary": "Synchronize the content to the capsule",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the capsule"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "formData",
            "description": "Id of the environment to limit the synchronization on"
          },
          {
            "name": "skip_metadata_check",
            "type": "boolean",
            "in": "formData",
            "description": "Skip metadata check on each repository on the capsule"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "get": {
        "tags": [
          "capsule_content"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_capsules_id_content_sync",
        "summary": "Get current capsule synchronization status",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the capsule"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Id of the organization to get the status for"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "capsule_content"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_capsules_id_content_sync",
        "summary": "Cancel running capsule synchronization",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the capsule"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/capsules": {
      "get": {
        "tags": [
          "capsules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_capsules",
        "summary": "List all capsules that have content",
        "parameters": [
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/capsules/{id}": {
      "get": {
        "tags": [
          "capsules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_capsules_id",
        "summary": "Show the capsule details",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the capsule"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_credentials": {
      "get": {
        "tags": [
          "content_credentials"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_credentials",
        "summary": "List content credentials",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "name of the Content Credential"
          },
          {
            "name": "content_type",
            "type": "string",
            "in": "query",
            "description": "type of content"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "content_credentials"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_content_credentials",
        "summary": "Create a content credential",
        "parameters": [
          {
            "name": "content",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "public key block in DER encoding or certificate content"
          },
          {
            "name": "content_type",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "type of content"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "identifier of the content credential"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_credentials/{id}": {
      "get": {
        "tags": [
          "content_credentials"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_credentials_id",
        "summary": "Show a content credential",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content credential numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "content_credentials"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_content_credentials_id",
        "summary": "Update a content credential",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content credential numeric identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "identifier of the content credential"
          },
          {
            "name": "content_type",
            "type": "string",
            "in": "formData",
            "description": "type of content"
          },
          {
            "name": "content",
            "type": "string",
            "in": "formData",
            "description": "public key block in DER encoding or certificate content"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "content_credentials"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_content_credentials_id",
        "summary": "Destroy a content credential",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content credential numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_credentials/{id}/content": {
      "get": {
        "tags": [
          "content_credentials"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_credentials_id_content",
        "summary": "Return the content of a content credential, used directly by yum",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "content_credentials"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_content_credentials_id_content",
        "summary": "Upload content credential contents",
        "parameters": [
          {
            "name": "content",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "file contents"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content credential numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/products/{product_id}/sync": {
      "get": {
        "tags": [
          "sync"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_products_product_id_sync",
        "summary": "Get status of repo synchronisation for given product",
        "parameters": [
          {
            "name": "product_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/sync": {
      "get": {
        "tags": [
          "sync"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_sync",
        "summary": "Get status of synchronisation for given repository",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/content_uploads": {
      "post": {
        "tags": [
          "content_uploads"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_repositories_repository_id_content_uploads",
        "summary": "Create an upload request",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/content_uploads/{id}": {
      "put": {
        "tags": [
          "content_uploads"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_repositories_repository_id_content_uploads_id",
        "summary": "Upload a chunk of the file's content",
        "parameters": [
          {
            "name": "content",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "The actual file contents"
          },
          {
            "name": "offset",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "The offset in the file where the content starts"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Upload request id"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Repository id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "content_uploads"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_repositories_repository_id_content_uploads_id",
        "summary": "Delete an upload request",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Upload request id"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Repository id"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/products": {
      "get": {
        "tags": [
          "products"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_products",
        "summary": "List products",
        "parameters": [
          {
            "name": "sync_plan_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by sync plan id"
          },
          {
            "name": "subscription_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by subscription"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by organization"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "Filter products by name"
          },
          {
            "name": "enabled",
            "type": "boolean",
            "in": "query",
            "description": "Return enabled products only"
          },
          {
            "name": "custom",
            "type": "boolean",
            "in": "query",
            "description": "Return custom products only"
          },
          {
            "name": "redhat_only",
            "type": "boolean",
            "in": "query",
            "description": "Return Red Hat (non-custom) products only"
          },
          {
            "name": "include_available_content",
            "type": "boolean",
            "in": "query",
            "description": "Whether to include available content attribute in results"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Interpret specified object to return only Products that can be associated with specified object.  Only 'sync_plan' is supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "products"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_products",
        "summary": "Create a product",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Product name"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "Product description"
          },
          {
            "name": "gpg_key_id",
            "type": "number",
            "in": "formData",
            "description": "Identifier of the GPG key"
          },
          {
            "name": "ssl_ca_cert_id",
            "type": "number",
            "in": "formData",
            "description": "Idenifier of the SSL CA Cert"
          },
          {
            "name": "ssl_client_cert_id",
            "type": "number",
            "in": "formData",
            "description": "Identifier of the SSL Client Cert"
          },
          {
            "name": "ssl_client_key_id",
            "type": "number",
            "in": "formData",
            "description": "Identifier of the SSL Client Key"
          },
          {
            "name": "sync_plan_id",
            "type": "number",
            "in": "formData",
            "description": "Plan numeric identifier"
          },
          {
            "name": "label",
            "type": "string",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/subscriptions/{subscription_id}/products": {
      "get": {
        "tags": [
          "products"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_subscriptions_subscription_id_products",
        "summary": "List of subscription products in a subscription",
        "parameters": [
          {
            "name": "sync_plan_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by sync plan id"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by organization"
          },
          {
            "name": "subscription_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Filter products by subscription"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "Filter products by name"
          },
          {
            "name": "enabled",
            "type": "boolean",
            "in": "query",
            "description": "Return enabled products only"
          },
          {
            "name": "custom",
            "type": "boolean",
            "in": "query",
            "description": "Return custom products only"
          },
          {
            "name": "redhat_only",
            "type": "boolean",
            "in": "query",
            "description": "Return Red Hat (non-custom) products only"
          },
          {
            "name": "include_available_content",
            "type": "boolean",
            "in": "query",
            "description": "Whether to include available content attribute in results"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Interpret specified object to return only Products that can be associated with specified object.  Only 'sync_plan' is supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys/{activation_key_id}/products": {
      "get": {
        "tags": [
          "products"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_activation_keys_activation_key_id_products",
        "summary": "List of subscription products in an activation key",
        "parameters": [
          {
            "name": "sync_plan_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by sync plan id"
          },
          {
            "name": "subscription_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by subscription"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by organization"
          },
          {
            "name": "activation_key_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "Filter products by name"
          },
          {
            "name": "enabled",
            "type": "boolean",
            "in": "query",
            "description": "Return enabled products only"
          },
          {
            "name": "custom",
            "type": "boolean",
            "in": "query",
            "description": "Return custom products only"
          },
          {
            "name": "redhat_only",
            "type": "boolean",
            "in": "query",
            "description": "Return Red Hat (non-custom) products only"
          },
          {
            "name": "include_available_content",
            "type": "boolean",
            "in": "query",
            "description": "Whether to include available content attribute in results"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Interpret specified object to return only Products that can be associated with specified object.  Only 'sync_plan' is supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/products": {
      "get": {
        "tags": [
          "products"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_products",
        "summary": "List of products in an organization",
        "parameters": [
          {
            "name": "sync_plan_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by sync plan id"
          },
          {
            "name": "subscription_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by subscription"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Filter products by organization"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "Filter products by name"
          },
          {
            "name": "enabled",
            "type": "boolean",
            "in": "query",
            "description": "Return enabled products only"
          },
          {
            "name": "custom",
            "type": "boolean",
            "in": "query",
            "description": "Return custom products only"
          },
          {
            "name": "redhat_only",
            "type": "boolean",
            "in": "query",
            "description": "Return Red Hat (non-custom) products only"
          },
          {
            "name": "include_available_content",
            "type": "boolean",
            "in": "query",
            "description": "Whether to include available content attribute in results"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Interpret specified object to return only Products that can be associated with specified object.  Only 'sync_plan' is supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/sync_plans/{sync_plan_id}/products": {
      "get": {
        "tags": [
          "products"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_sync_plans_sync_plan_id_products",
        "summary": "List of Products for sync plan",
        "parameters": [
          {
            "name": "subscription_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by subscription"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by organization"
          },
          {
            "name": "sync_plan_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Filter products by sync plan id"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "Filter products by name"
          },
          {
            "name": "enabled",
            "type": "boolean",
            "in": "query",
            "description": "Return enabled products only"
          },
          {
            "name": "custom",
            "type": "boolean",
            "in": "query",
            "description": "Return custom products only"
          },
          {
            "name": "redhat_only",
            "type": "boolean",
            "in": "query",
            "description": "Return Red Hat (non-custom) products only"
          },
          {
            "name": "include_available_content",
            "type": "boolean",
            "in": "query",
            "description": "Whether to include available content attribute in results"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Interpret specified object to return only Products that can be associated with specified object.  Only 'sync_plan' is supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/sync_plans/{sync_plan_id}/products": {
      "get": {
        "tags": [
          "products"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_sync_plans_sync_plan_id_products",
        "summary": "List of Products for sync plan",
        "parameters": [
          {
            "name": "subscription_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter products by subscription"
          },
          {
            "name": "sync_plan_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Filter products by sync plan id"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Filter products by organization"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "Filter products by name"
          },
          {
            "name": "enabled",
            "type": "boolean",
            "in": "query",
            "description": "Return enabled products only"
          },
          {
            "name": "custom",
            "type": "boolean",
            "in": "query",
            "description": "Return custom products only"
          },
          {
            "name": "redhat_only",
            "type": "boolean",
            "in": "query",
            "description": "Return Red Hat (non-custom) products only"
          },
          {
            "name": "include_available_content",
            "type": "boolean",
            "in": "query",
            "description": "Whether to include available content attribute in results"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Interpret specified object to return only Products that can be associated with specified object.  Only 'sync_plan' is supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "products"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_products_id",
        "summary": "Show a product",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "product numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "products"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_products_id",
        "summary": "Updates a product",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "product numeric identifier"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "Product description"
          },
          {
            "name": "gpg_key_id",
            "type": "number",
            "in": "formData",
            "description": "Identifier of the GPG key"
          },
          {
            "name": "ssl_ca_cert_id",
            "type": "number",
            "in": "formData",
            "description": "Idenifier of the SSL CA Cert"
          },
          {
            "name": "ssl_client_cert_id",
            "type": "number",
            "in": "formData",
            "description": "Identifier of the SSL Client Cert"
          },
          {
            "name": "ssl_client_key_id",
            "type": "number",
            "in": "formData",
            "description": "Identifier of the SSL Client Key"
          },
          {
            "name": "sync_plan_id",
            "type": "number",
            "in": "formData",
            "description": "Plan numeric identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "Product name"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "products"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_products_id",
        "summary": "Destroy a product",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "product numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/products/{id}/sync": {
      "post": {
        "tags": [
          "products"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_products_id_sync",
        "summary": "Sync all repositories for a product",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{composite_content_view_id}/content_view_components": {
      "get": {
        "tags": [
          "content_view_components"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_composite_content_view_id_content_view_components",
        "summary": "List components attached to this content view",
        "parameters": [
          {
            "name": "composite_content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "composite content view identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{composite_content_view_id}/content_view_components/add": {
      "put": {
        "tags": [
          "content_view_components"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_content_views_composite_content_view_id_content_view_components_add",
        "summary": "Add components to the content view",
        "parameters": [
          {
            "name": "components",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Array of components to add"
          },
          {
            "name": "composite_content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "composite content view identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{composite_content_view_id}/content_view_components/remove": {
      "put": {
        "tags": [
          "content_view_components"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_content_views_composite_content_view_id_content_view_components_remove",
        "summary": "Remove components from the content view",
        "parameters": [
          {
            "name": "component_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Array of content view component IDs to remove. Identifier of the component association"
          },
          {
            "name": "composite_content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "composite content view identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{composite_content_view_id}/content_view_components/{id}": {
      "get": {
        "tags": [
          "content_view_components"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_composite_content_view_id_content_view_components_id",
        "summary": "Show a content view component",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view component ID. Identifier of the component association"
          },
          {
            "name": "composite_content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "composite content view numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "content_view_components"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_content_views_composite_content_view_id_content_view_components_id",
        "summary": "Update a component associated with the content view",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view component ID. Identifier of the component association"
          },
          {
            "name": "composite_content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "composite content view identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "formData",
            "description": "identifier of the version of the component content view"
          },
          {
            "name": "latest",
            "type": "boolean",
            "in": "formData",
            "description": "true if the latest version of the components content view is desired"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/puppet_modules": {
      "get": {
        "tags": [
          "puppet_modules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_puppet_modules",
        "summary": "List puppet_modules",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/filters/{filter_id}/puppet_modules": {
      "get": {
        "tags": [
          "puppet_modules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_filters_filter_id_puppet_modules",
        "summary": "List puppet_modules",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "filter_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{content_view_filter_id}/puppet_modules": {
      "get": {
        "tags": [
          "puppet_modules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_content_view_filter_id_puppet_modules",
        "summary": "List puppet_modules",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/puppet_modules": {
      "get": {
        "tags": [
          "puppet_modules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_puppet_modules",
        "summary": "List puppet_modules",
        "parameters": [
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/puppet_modules/{id}": {
      "get": {
        "tags": [
          "puppet_modules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_puppet_modules_id",
        "summary": "Show a puppet module",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/puppet_modules/{id}": {
      "get": {
        "tags": [
          "puppet_modules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_puppet_modules_id",
        "summary": "Show a puppet module",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/puppet_modules/compare": {
      "get": {
        "tags": [
          "puppet_modules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_puppet_modules_compare",
        "summary": "List puppet_modules",
        "parameters": [
          {
            "name": "content_view_version_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "content view versions to compare"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Library repository id to restrict comparisons to"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{content_view_filter_id}/rules": {
      "get": {
        "tags": [
          "content_view_filter_rules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_content_view_filter_id_rules",
        "summary": "List filter rules",
        "parameters": [
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "filter identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "name of the content view filter rule"
          },
          {
            "name": "errata_id",
            "type": "string",
            "in": "query",
            "description": "errata_id of the content view filter rule"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "content_view_filter_rules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_content_view_filters_content_view_filter_id_rules",
        "summary": "Create a filter rule. The parameters included should be based upon the filter type.",
        "parameters": [
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "filter identifier"
          },
          {
            "name": "name",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "package, package group, or docker tag names"
          },
          {
            "name": "uuid",
            "type": "string",
            "in": "formData",
            "description": "package group: uuid"
          },
          {
            "name": "version",
            "type": "string",
            "in": "formData",
            "description": "package: version"
          },
          {
            "name": "architecture",
            "type": "string",
            "in": "formData",
            "description": "package: architecture"
          },
          {
            "name": "min_version",
            "type": "string",
            "in": "formData",
            "description": "package: minimum version"
          },
          {
            "name": "max_version",
            "type": "string",
            "in": "formData",
            "description": "package: maximum version"
          },
          {
            "name": "errata_id",
            "type": "string",
            "in": "formData",
            "description": "erratum: id"
          },
          {
            "name": "errata_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "erratum: IDs or a select all object"
          },
          {
            "name": "start_date",
            "type": "string",
            "in": "formData",
            "description": "erratum: start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "type": "string",
            "in": "formData",
            "description": "erratum: end date (YYYY-MM-DD)"
          },
          {
            "name": "types",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "erratum: types (enhancement, bugfix, security)"
          },
          {
            "name": "date_type",
            "type": "string",
            "in": "formData",
            "description": "erratum: search using the 'Issued On' or 'Updated On' column of the errata. Values are 'issued'/'updated'"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{content_view_filter_id}/rules/{id}": {
      "get": {
        "tags": [
          "content_view_filter_rules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_content_view_filter_id_rules_id",
        "summary": "Show filter rule info",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "rule identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "filter identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "content_view_filter_rules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_content_view_filters_content_view_filter_id_rules_id",
        "summary": "Update a filter rule. The parameters included should be based upon the filter type.",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "rule identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "filter identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "package, package group, or docker tag: name"
          },
          {
            "name": "version",
            "type": "string",
            "in": "formData",
            "description": "package: version"
          },
          {
            "name": "architecture",
            "type": "string",
            "in": "formData",
            "description": "package: architecture"
          },
          {
            "name": "min_version",
            "type": "string",
            "in": "formData",
            "description": "package: minimum version"
          },
          {
            "name": "max_version",
            "type": "string",
            "in": "formData",
            "description": "package: maximum version"
          },
          {
            "name": "errata_id",
            "type": "string",
            "in": "formData",
            "description": "erratum: id"
          },
          {
            "name": "start_date",
            "type": "string",
            "in": "formData",
            "description": "erratum: start date (YYYY-MM-DD)"
          },
          {
            "name": "end_date",
            "type": "string",
            "in": "formData",
            "description": "erratum: end date (YYYY-MM-DD)"
          },
          {
            "name": "types",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "erratum: types (enhancement, bugfix, security)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "content_view_filter_rules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_content_view_filters_content_view_filter_id_rules_id",
        "summary": "Delete a filter rule",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "rule identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "filter identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/sync_plans": {
      "get": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_sync_plans",
        "summary": "List sync plans",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter sync plans by organization name or label"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "filter by name"
          },
          {
            "name": "sync_date",
            "type": "string",
            "in": "query",
            "description": "filter by sync date"
          },
          {
            "name": "interval",
            "type": "string",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "custom cron"
            ],
            "in": "query",
            "description": "filter by interval"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/sync_plans": {
      "get": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_sync_plans",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Filter sync plans by organization name or label"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "filter by name"
          },
          {
            "name": "sync_date",
            "type": "string",
            "in": "query",
            "description": "filter by sync date"
          },
          {
            "name": "interval",
            "type": "string",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "custom cron"
            ],
            "in": "query",
            "description": "filter by interval"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_organizations_organization_id_sync_plans",
        "summary": "Create a sync plan",
        "parameters": [
          {
            "name": "enabled",
            "type": "boolean",
            "in": "formData",
            "required": true,
            "description": "enables or disables synchronization"
          },
          {
            "name": "sync_date",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "start datetime of synchronization"
          },
          {
            "name": "interval",
            "type": "string",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "custom cron"
            ],
            "in": "formData",
            "required": true,
            "description": "how often synchronization should run"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "sync plan name"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Filter sync plans by organization name or label"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "sync plan description"
          },
          {
            "name": "cron_expression",
            "type": "string",
            "in": "formData",
            "description": "Add custom cron logic for sync plan"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/sync_plans/{id}": {
      "get": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_sync_plans_id",
        "summary": "Show a sync plan",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "sync plan numeric identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Filter sync plans by organization name or label"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_organizations_organization_id_sync_plans_id",
        "summary": "Update a sync plan",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "sync plan numeric identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Filter sync plans by organization name or label"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "sync plan name"
          },
          {
            "name": "interval",
            "type": "string",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "custom cron"
            ],
            "in": "formData",
            "description": "how often synchronization should run"
          },
          {
            "name": "sync_date",
            "type": "string",
            "in": "formData",
            "description": "start datetime of synchronization"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "sync plan description"
          },
          {
            "name": "enabled",
            "type": "boolean",
            "in": "formData",
            "description": "enables or disables synchronization"
          },
          {
            "name": "cron_expression",
            "type": "string",
            "in": "formData",
            "description": "Add custom cron logic for sync plan"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_organizations_organization_id_sync_plans_id",
        "summary": "Destroy a sync plan",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "sync plan numeric identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Filter sync plans by organization name or label"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/sync_plans/{id}": {
      "get": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_sync_plans_id",
        "summary": "Show a sync plan",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Filter sync plans by organization name or label"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "sync plan numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_sync_plans_id",
        "summary": "Update a sync plan",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Filter sync plans by organization name or label"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "sync plan numeric identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "sync plan name"
          },
          {
            "name": "interval",
            "type": "string",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "custom cron"
            ],
            "in": "formData",
            "description": "how often synchronization should run"
          },
          {
            "name": "sync_date",
            "type": "string",
            "in": "formData",
            "description": "start datetime of synchronization"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "sync plan description"
          },
          {
            "name": "enabled",
            "type": "boolean",
            "in": "formData",
            "description": "enables or disables synchronization"
          },
          {
            "name": "cron_expression",
            "type": "string",
            "in": "formData",
            "description": "Add custom cron logic for sync plan"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_sync_plans_id",
        "summary": "Destroy a sync plan",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Filter sync plans by organization name or label"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "sync plan numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/sync_plans/{id}/add_products": {
      "put": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_organizations_organization_id_sync_plans_id_add_products",
        "summary": "Add products to sync plan",
        "parameters": [
          {
            "name": "product_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of product ids to add to the sync plan"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the sync plan"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/sync_plans/{id}/remove_products": {
      "put": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_organizations_organization_id_sync_plans_id_remove_products",
        "summary": "Remove products from sync plan",
        "parameters": [
          {
            "name": "product_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of product ids to remove from the sync plan"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the sync plan"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/sync_plans/{id}/sync": {
      "put": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_sync_plans_id_sync",
        "summary": "Initiate a sync of the products attached to the sync plan",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the sync plan"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/sync_plans/{id}/sync": {
      "put": {
        "tags": [
          "sync_plans"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_organizations_organization_id_sync_plans_id_sync",
        "summary": "Initiate a sync of the products attached to the sync plan",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "ID of the sync plan"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/filters": {
      "get": {
        "tags": [
          "content_view_filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_filters",
        "summary": "list filters",
        "parameters": [
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view identifier"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "filter content view filters by name"
          },
          {
            "name": "types",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "types of filters"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "content_view_filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_content_views_content_view_id_filters",
        "summary": "create a filter for a content view",
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "type of filter (e.g. rpm, package_group, erratum, docker)"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "name of the filter"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view identifier"
          },
          {
            "name": "original_packages",
            "type": "boolean",
            "in": "formData",
            "description": "add all packages without errata to the included/excluded list. (package filter only)"
          },
          {
            "name": "inclusion",
            "type": "boolean",
            "in": "formData",
            "description": "specifies if content should be included or excluded, default: inclusion=false"
          },
          {
            "name": "repository_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "list of repository ids"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "description of the filter"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters": {
      "get": {
        "tags": [
          "content_view_filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters",
        "summary": "list filters",
        "parameters": [
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view identifier"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "filter content view filters by name"
          },
          {
            "name": "types",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "types of filters"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "content_view_filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_content_view_filters",
        "summary": "create a filter for a content view",
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "type of filter (e.g. rpm, package_group, erratum, docker)"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "name of the filter"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "content view identifier"
          },
          {
            "name": "original_packages",
            "type": "boolean",
            "in": "formData",
            "description": "add all packages without errata to the included/excluded list. (package filter only)"
          },
          {
            "name": "inclusion",
            "type": "boolean",
            "in": "formData",
            "description": "specifies if content should be included or excluded, default: inclusion=false"
          },
          {
            "name": "repository_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "list of repository ids"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "description of the filter"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/filters/{id}": {
      "get": {
        "tags": [
          "content_view_filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_filters_id",
        "summary": "show filter info",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "filter identifier"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "content_view_filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_content_views_content_view_id_filters_id",
        "summary": "update a filter",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "filter identifier"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "new name for the filter"
          },
          {
            "name": "original_packages",
            "type": "boolean",
            "in": "formData",
            "description": "add all packages without errata to the included/excluded list. (package filter only)"
          },
          {
            "name": "inclusion",
            "type": "boolean",
            "in": "formData",
            "description": "specifies if content should be included or excluded, default: inclusion=false"
          },
          {
            "name": "repository_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "list of repository ids"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "content_view_filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_content_views_content_view_id_filters_id",
        "summary": "delete a filter",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "filter identifier"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{id}": {
      "get": {
        "tags": [
          "content_view_filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_id",
        "summary": "show filter info",
        "parameters": [
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view identifier"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "filter identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "content_view_filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_content_view_filters_id",
        "summary": "update a filter",
        "parameters": [
          {
            "name": "content_view_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "content view identifier"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "filter identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "new name for the filter"
          },
          {
            "name": "original_packages",
            "type": "boolean",
            "in": "formData",
            "description": "add all packages without errata to the included/excluded list. (package filter only)"
          },
          {
            "name": "inclusion",
            "type": "boolean",
            "in": "formData",
            "description": "specifies if content should be included or excluded, default: inclusion=false"
          },
          {
            "name": "repository_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "list of repository ids"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "content_view_filters"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_content_view_filters_id",
        "summary": "delete a filter",
        "parameters": [
          {
            "name": "content_view_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "content view identifier"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "filter identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/bulk/destroy": {
      "put": {
        "tags": [
          "repositories_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_repositories_bulk_destroy",
        "summary": "Destroy one or more repositories",
        "parameters": [
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of repository ids"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/bulk/sync": {
      "post": {
        "tags": [
          "repositories_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_repositories_bulk_sync",
        "summary": "Synchronize repository",
        "parameters": [
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of repository ids"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{id}/history": {
      "get": {
        "tags": [
          "content_view_histories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_id_history",
        "summary": "Show a content view's history",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories": {
      "get": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories",
        "summary": "List of enabled repositories",
        "parameters": [
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of an environment to show repositories in"
          },
          {
            "name": "product_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of a product to show repositories of"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of an organization to show repositories in"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "description": "ID of a content view to show repositories in"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "ID of a content view version to show repositories in"
          },
          {
            "name": "deb_id",
            "type": "string",
            "in": "query",
            "description": "Id of a deb package to find repositories that contain the deb"
          },
          {
            "name": "erratum_id",
            "type": "string",
            "in": "query",
            "description": "Id of an erratum to find repositories that contain the erratum"
          },
          {
            "name": "rpm_id",
            "type": "string",
            "in": "query",
            "description": "Id of a rpm package to find repositories that contain the rpm"
          },
          {
            "name": "file_id",
            "type": "string",
            "in": "query",
            "description": "Id of a file to find repositories that contain the file"
          },
          {
            "name": "ostree_branch_id",
            "type": "string",
            "in": "query",
            "description": "Id of an ostree branch to find repositories that contain that branch"
          },
          {
            "name": "library",
            "type": "boolean",
            "in": "query",
            "description": "show repositories in Library and the default content view"
          },
          {
            "name": "content_type",
            "type": "string",
            "enum": [
              "docker",
              "file",
              "ostree",
              "puppet",
              "yum"
            ],
            "in": "query",
            "description": "limit to only repositories of this type"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "name of the repository"
          },
          {
            "name": "label",
            "type": "string",
            "in": "query",
            "description": "label of the repository"
          },
          {
            "name": "description",
            "type": "string",
            "in": "query",
            "description": "description of the repository"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "interpret specified object to return only Repositories that can be associated with specified object.  Only 'content_view' & 'content_view_version' are supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_repositories",
        "summary": "Create a custom repository",
        "parameters": [
          {
            "name": "content_type",
            "type": "string",
            "enum": [
              "docker",
              "file",
              "ostree",
              "puppet",
              "yum"
            ],
            "in": "formData",
            "required": true,
            "description": "type of repo (either 'yum', 'deb', 'puppet', 'docker', or 'ostree')"
          },
          {
            "name": "product_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Product the repository belongs to"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "label",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "url",
            "type": "string",
            "in": "formData",
            "description": "repository source url"
          },
          {
            "name": "gpg_key_id",
            "type": "number",
            "in": "formData",
            "description": "id of the gpg key that will be assigned to the new repository"
          },
          {
            "name": "ssl_ca_cert_id",
            "type": "number",
            "in": "formData",
            "description": "Idenifier of the SSL CA Cert"
          },
          {
            "name": "ssl_client_cert_id",
            "type": "number",
            "in": "formData",
            "description": "Identifier of the SSL Client Cert"
          },
          {
            "name": "ssl_client_key_id",
            "type": "number",
            "in": "formData",
            "description": "Identifier of the SSL Client Key"
          },
          {
            "name": "unprotected",
            "type": "boolean",
            "in": "formData",
            "description": "true if this repository can be published via HTTP"
          },
          {
            "name": "checksum_type",
            "type": "string",
            "in": "formData",
            "description": "Checksum of the repository, currently 'sha1' & 'sha256' are supported"
          },
          {
            "name": "docker_upstream_name",
            "type": "string",
            "in": "formData",
            "description": "Name of the upstream docker repository"
          },
          {
            "name": "docker_tags_whitelist",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Comma separated list of tags to sync for Container Image repository"
          },
          {
            "name": "download_policy",
            "type": "string",
            "enum": [
              "immediate",
              "on_demand",
              "background"
            ],
            "in": "formData",
            "description": "download policy for yum repos (either 'immediate', 'on_demand', or 'background')"
          },
          {
            "name": "mirror_on_sync",
            "type": "boolean",
            "in": "formData",
            "description": "true if this repository when synced has to be mirrored from the source and stale rpms removed"
          },
          {
            "name": "verify_ssl_on_sync",
            "type": "boolean",
            "in": "formData",
            "description": "if true, Katello will verify the upstream url's SSL certifcates are signed by a trusted CA"
          },
          {
            "name": "upstream_username",
            "type": "string",
            "in": "formData",
            "description": "Username of the upstream repository user used for authentication"
          },
          {
            "name": "upstream_password",
            "type": "string",
            "in": "formData",
            "description": "Password of the upstream repository user used for authentication"
          },
          {
            "name": "ostree_upstream_sync_policy",
            "type": "string",
            "enum": [
              "latest",
              "all",
              "custom"
            ],
            "in": "formData",
            "description": "policies for syncing upstream ostree repositories"
          },
          {
            "name": "ostree_upstream_sync_depth",
            "type": "number",
            "in": "formData",
            "description": "if a custom sync policy is chosen for ostree repositories then a 'depth' value must be provided"
          },
          {
            "name": "deb_releases",
            "type": "string",
            "in": "formData",
            "description": "comma separated list of releases to be synched from deb-archive"
          },
          {
            "name": "deb_components",
            "type": "string",
            "in": "formData",
            "description": "comma separated list of repo components to be synched from deb-archive"
          },
          {
            "name": "deb_architectures",
            "type": "string",
            "in": "formData",
            "description": "comma separated list of architectures to be synched from deb-archive"
          },
          {
            "name": "ignore_global_proxy",
            "type": "boolean",
            "in": "formData",
            "description": "if true, will ignore the globally configured Capsule when syncing"
          },
          {
            "name": "ignorable_content",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of content units to ignore while syncing a yum repository. Must be subset of rpm,drpm,srpm,distribution,erratum"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{id}/repositories": {
      "get": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_id_repositories",
        "summary": "List of repositories for a content view",
        "parameters": [
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of an environment to show repositories in"
          },
          {
            "name": "product_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of a product to show repositories of"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of an organization to show repositories in"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "description": "ID of a content view to show repositories in"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "ID of a content view version to show repositories in"
          },
          {
            "name": "deb_id",
            "type": "string",
            "in": "query",
            "description": "Id of a deb package to find repositories that contain the deb"
          },
          {
            "name": "erratum_id",
            "type": "string",
            "in": "query",
            "description": "Id of an erratum to find repositories that contain the erratum"
          },
          {
            "name": "rpm_id",
            "type": "string",
            "in": "query",
            "description": "Id of a rpm package to find repositories that contain the rpm"
          },
          {
            "name": "file_id",
            "type": "string",
            "in": "query",
            "description": "Id of a file to find repositories that contain the file"
          },
          {
            "name": "ostree_branch_id",
            "type": "string",
            "in": "query",
            "description": "Id of an ostree branch to find repositories that contain that branch"
          },
          {
            "name": "library",
            "type": "boolean",
            "in": "query",
            "description": "show repositories in Library and the default content view"
          },
          {
            "name": "content_type",
            "type": "string",
            "enum": [
              "docker",
              "file",
              "ostree",
              "puppet",
              "yum"
            ],
            "in": "query",
            "description": "limit to only repositories of this type"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "name of the repository"
          },
          {
            "name": "label",
            "type": "string",
            "in": "query",
            "description": "label of the repository"
          },
          {
            "name": "description",
            "type": "string",
            "in": "query",
            "description": "description of the repository"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "interpret specified object to return only Repositories that can be associated with specified object.  Only 'content_view' & 'content_view_version' are supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/repositories": {
      "get": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_repositories",
        "summary": "List of repositories in an organization",
        "parameters": [
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of an environment to show repositories in"
          },
          {
            "name": "product_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of a product to show repositories of"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of an organization to show repositories in"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "description": "ID of a content view to show repositories in"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "ID of a content view version to show repositories in"
          },
          {
            "name": "deb_id",
            "type": "string",
            "in": "query",
            "description": "Id of a deb package to find repositories that contain the deb"
          },
          {
            "name": "erratum_id",
            "type": "string",
            "in": "query",
            "description": "Id of an erratum to find repositories that contain the erratum"
          },
          {
            "name": "rpm_id",
            "type": "string",
            "in": "query",
            "description": "Id of a rpm package to find repositories that contain the rpm"
          },
          {
            "name": "file_id",
            "type": "string",
            "in": "query",
            "description": "Id of a file to find repositories that contain the file"
          },
          {
            "name": "ostree_branch_id",
            "type": "string",
            "in": "query",
            "description": "Id of an ostree branch to find repositories that contain that branch"
          },
          {
            "name": "library",
            "type": "boolean",
            "in": "query",
            "description": "show repositories in Library and the default content view"
          },
          {
            "name": "content_type",
            "type": "string",
            "enum": [
              "docker",
              "file",
              "ostree",
              "puppet",
              "yum"
            ],
            "in": "query",
            "description": "limit to only repositories of this type"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "name of the repository"
          },
          {
            "name": "label",
            "type": "string",
            "in": "query",
            "description": "label of the repository"
          },
          {
            "name": "description",
            "type": "string",
            "in": "query",
            "description": "description of the repository"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "interpret specified object to return only Repositories that can be associated with specified object.  Only 'content_view' & 'content_view_version' are supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/environments/{environment_id}/repositories": {
      "get": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_environments_environment_id_repositories",
        "summary": "List repositories in the environment",
        "parameters": [
          {
            "name": "product_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of a product to show repositories of"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of an environment to show repositories in"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of an organization to show repositories in"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "description": "ID of a content view to show repositories in"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "ID of a content view version to show repositories in"
          },
          {
            "name": "deb_id",
            "type": "string",
            "in": "query",
            "description": "Id of a deb package to find repositories that contain the deb"
          },
          {
            "name": "erratum_id",
            "type": "string",
            "in": "query",
            "description": "Id of an erratum to find repositories that contain the erratum"
          },
          {
            "name": "rpm_id",
            "type": "string",
            "in": "query",
            "description": "Id of a rpm package to find repositories that contain the rpm"
          },
          {
            "name": "file_id",
            "type": "string",
            "in": "query",
            "description": "Id of a file to find repositories that contain the file"
          },
          {
            "name": "ostree_branch_id",
            "type": "string",
            "in": "query",
            "description": "Id of an ostree branch to find repositories that contain that branch"
          },
          {
            "name": "library",
            "type": "boolean",
            "in": "query",
            "description": "show repositories in Library and the default content view"
          },
          {
            "name": "content_type",
            "type": "string",
            "enum": [
              "docker",
              "file",
              "ostree",
              "puppet",
              "yum"
            ],
            "in": "query",
            "description": "limit to only repositories of this type"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "name of the repository"
          },
          {
            "name": "label",
            "type": "string",
            "in": "query",
            "description": "label of the repository"
          },
          {
            "name": "description",
            "type": "string",
            "in": "query",
            "description": "description of the repository"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "interpret specified object to return only Repositories that can be associated with specified object.  Only 'content_view' & 'content_view_version' are supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/products/{product_id}/repositories": {
      "get": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_products_product_id_repositories",
        "summary": "List of repositories for a product",
        "parameters": [
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of an environment to show repositories in"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of an organization to show repositories in"
          },
          {
            "name": "product_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of a product to show repositories of"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "description": "ID of a content view to show repositories in"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "ID of a content view version to show repositories in"
          },
          {
            "name": "deb_id",
            "type": "string",
            "in": "query",
            "description": "Id of a deb package to find repositories that contain the deb"
          },
          {
            "name": "erratum_id",
            "type": "string",
            "in": "query",
            "description": "Id of an erratum to find repositories that contain the erratum"
          },
          {
            "name": "rpm_id",
            "type": "string",
            "in": "query",
            "description": "Id of a rpm package to find repositories that contain the rpm"
          },
          {
            "name": "file_id",
            "type": "string",
            "in": "query",
            "description": "Id of a file to find repositories that contain the file"
          },
          {
            "name": "ostree_branch_id",
            "type": "string",
            "in": "query",
            "description": "Id of an ostree branch to find repositories that contain that branch"
          },
          {
            "name": "library",
            "type": "boolean",
            "in": "query",
            "description": "show repositories in Library and the default content view"
          },
          {
            "name": "content_type",
            "type": "string",
            "enum": [
              "docker",
              "file",
              "ostree",
              "puppet",
              "yum"
            ],
            "in": "query",
            "description": "limit to only repositories of this type"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "name of the repository"
          },
          {
            "name": "label",
            "type": "string",
            "in": "query",
            "description": "label of the repository"
          },
          {
            "name": "description",
            "type": "string",
            "in": "query",
            "description": "description of the repository"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "interpret specified object to return only Repositories that can be associated with specified object.  Only 'content_view' & 'content_view_version' are supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/environments/{environment_id}/products/{product_id}/repositories": {
      "get": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_environments_environment_id_products_product_id_repositories",
        "summary": "List of repositories belonging to a product in an environment",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of an organization to show repositories in"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of an environment to show repositories in"
          },
          {
            "name": "product_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of a product to show repositories of"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "description": "ID of a content view to show repositories in"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "ID of a content view version to show repositories in"
          },
          {
            "name": "deb_id",
            "type": "string",
            "in": "query",
            "description": "Id of a deb package to find repositories that contain the deb"
          },
          {
            "name": "erratum_id",
            "type": "string",
            "in": "query",
            "description": "Id of an erratum to find repositories that contain the erratum"
          },
          {
            "name": "rpm_id",
            "type": "string",
            "in": "query",
            "description": "Id of a rpm package to find repositories that contain the rpm"
          },
          {
            "name": "file_id",
            "type": "string",
            "in": "query",
            "description": "Id of a file to find repositories that contain the file"
          },
          {
            "name": "ostree_branch_id",
            "type": "string",
            "in": "query",
            "description": "Id of an ostree branch to find repositories that contain that branch"
          },
          {
            "name": "library",
            "type": "boolean",
            "in": "query",
            "description": "show repositories in Library and the default content view"
          },
          {
            "name": "content_type",
            "type": "string",
            "enum": [
              "docker",
              "file",
              "ostree",
              "puppet",
              "yum"
            ],
            "in": "query",
            "description": "limit to only repositories of this type"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "name of the repository"
          },
          {
            "name": "label",
            "type": "string",
            "in": "query",
            "description": "label of the repository"
          },
          {
            "name": "description",
            "type": "string",
            "in": "query",
            "description": "description of the repository"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "interpret specified object to return only Repositories that can be associated with specified object.  Only 'content_view' & 'content_view_version' are supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/repository_types": {
      "get": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_types",
        "summary": "Show the available repository types",
        "parameters": [
          {
            "name": "creatable",
            "type": "boolean",
            "in": "query",
            "description": "When set to 'True' repository types that are creatable will be returned"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{id}/republish": {
      "put": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_repositories_id_republish",
        "summary": "Forces a republish of the specified repository, regenerating metadata and symlinks on the filesystem.",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Repository identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{id}": {
      "get": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_id",
        "summary": "Show a repository",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_repositories_id",
        "summary": "Update a repository",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository ID"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "url",
            "type": "string",
            "in": "formData",
            "description": "repository source url"
          },
          {
            "name": "gpg_key_id",
            "type": "number",
            "in": "formData",
            "description": "id of the gpg key that will be assigned to the new repository"
          },
          {
            "name": "ssl_ca_cert_id",
            "type": "number",
            "in": "formData",
            "description": "Idenifier of the SSL CA Cert"
          },
          {
            "name": "ssl_client_cert_id",
            "type": "number",
            "in": "formData",
            "description": "Identifier of the SSL Client Cert"
          },
          {
            "name": "ssl_client_key_id",
            "type": "number",
            "in": "formData",
            "description": "Identifier of the SSL Client Key"
          },
          {
            "name": "unprotected",
            "type": "boolean",
            "in": "formData",
            "description": "true if this repository can be published via HTTP"
          },
          {
            "name": "checksum_type",
            "type": "string",
            "in": "formData",
            "description": "Checksum of the repository, currently 'sha1' & 'sha256' are supported"
          },
          {
            "name": "docker_upstream_name",
            "type": "string",
            "in": "formData",
            "description": "Name of the upstream docker repository"
          },
          {
            "name": "docker_tags_whitelist",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Comma separated list of tags to sync for Container Image repository"
          },
          {
            "name": "download_policy",
            "type": "string",
            "enum": [
              "immediate",
              "on_demand",
              "background"
            ],
            "in": "formData",
            "description": "download policy for yum repos (either 'immediate', 'on_demand', or 'background')"
          },
          {
            "name": "mirror_on_sync",
            "type": "boolean",
            "in": "formData",
            "description": "true if this repository when synced has to be mirrored from the source and stale rpms removed"
          },
          {
            "name": "verify_ssl_on_sync",
            "type": "boolean",
            "in": "formData",
            "description": "if true, Katello will verify the upstream url's SSL certifcates are signed by a trusted CA"
          },
          {
            "name": "upstream_username",
            "type": "string",
            "in": "formData",
            "description": "Username of the upstream repository user used for authentication"
          },
          {
            "name": "upstream_password",
            "type": "string",
            "in": "formData",
            "description": "Password of the upstream repository user used for authentication"
          },
          {
            "name": "ostree_upstream_sync_policy",
            "type": "string",
            "enum": [
              "latest",
              "all",
              "custom"
            ],
            "in": "formData",
            "description": "policies for syncing upstream ostree repositories"
          },
          {
            "name": "ostree_upstream_sync_depth",
            "type": "number",
            "in": "formData",
            "description": "if a custom sync policy is chosen for ostree repositories then a 'depth' value must be provided"
          },
          {
            "name": "deb_releases",
            "type": "string",
            "in": "formData",
            "description": "comma separated list of releases to be synched from deb-archive"
          },
          {
            "name": "deb_components",
            "type": "string",
            "in": "formData",
            "description": "comma separated list of repo components to be synched from deb-archive"
          },
          {
            "name": "deb_architectures",
            "type": "string",
            "in": "formData",
            "description": "comma separated list of architectures to be synched from deb-archive"
          },
          {
            "name": "ignore_global_proxy",
            "type": "boolean",
            "in": "formData",
            "description": "if true, will ignore the globally configured Capsule when syncing"
          },
          {
            "name": "ignorable_content",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of content units to ignore while syncing a yum repository. Must be subset of rpm,drpm,srpm,distribution,erratum"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_repositories_id",
        "summary": "Destroy a custom repository",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{id}/sync": {
      "post": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_repositories_id_sync",
        "summary": "Sync a repository",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository ID"
          },
          {
            "name": "source_url",
            "type": "string",
            "in": "formData",
            "description": "temporarily override feed URL for sync"
          },
          {
            "name": "incremental",
            "type": "boolean",
            "in": "formData",
            "description": "perform an incremental import"
          },
          {
            "name": "skip_metadata_check",
            "type": "boolean",
            "in": "formData",
            "description": "Force sync even if no upstream changes are detected. Only used with yum repositories."
          },
          {
            "name": "validate_contents",
            "type": "boolean",
            "in": "formData",
            "description": "Force a sync and validate the checksums of all content. Only used with yum repositories."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{id}/export": {
      "post": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_repositories_id_export",
        "summary": "Export a repository",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Repository identifier"
          },
          {
            "name": "export_to_iso",
            "type": "boolean",
            "in": "formData",
            "description": "Export to ISO format"
          },
          {
            "name": "iso_mb_size",
            "type": "number",
            "in": "formData",
            "description": "maximum size of each ISO in MB"
          },
          {
            "name": "since",
            "type": "string",
            "in": "formData",
            "description": "Optional date of last export (ex: 2010-01-01T12:00:00Z)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{id}/remove_packages": {
      "put": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_repositories_id_remove_packages",
        "parameters": [
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Array of content ids to remove"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository ID"
          },
          {
            "name": "sync_capsule",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not to sync an external capsule after upload. Default: true"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>Remove content from a repository</p>\n"
      }
    },
    "/repositories/{id}/remove_docker_manifests": {
      "put": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_repositories_id_remove_docker_manifests",
        "parameters": [
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Array of content ids to remove"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository ID"
          },
          {
            "name": "sync_capsule",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not to sync an external capsule after upload. Default: true"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>Remove content from a repository</p>\n"
      }
    },
    "/repositories/{id}/remove_puppet_modules": {
      "put": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_repositories_id_remove_puppet_modules",
        "parameters": [
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Array of content ids to remove"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository ID"
          },
          {
            "name": "sync_capsule",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not to sync an external capsule after upload. Default: true"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>Remove content from a repository</p>\n"
      }
    },
    "/repositories/{id}/remove_content": {
      "put": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_repositories_id_remove_content",
        "parameters": [
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Array of content ids to remove"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository ID"
          },
          {
            "name": "sync_capsule",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not to sync an external capsule after upload. Default: true"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>Remove content from a repository</p>\n"
      }
    },
    "/repositories/{id}/upload_content": {
      "post": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_repositories_id_upload_content",
        "summary": "Upload content into the repository",
        "parameters": [
          {
            "name": "content",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Content files to upload. Can be a single file or array of files."
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{id}/import_uploads": {
      "put": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_repositories_id_import_uploads",
        "summary": "Import uploads into a repository",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Repository id"
          },
          {
            "name": "upload_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of upload ids to import"
          },
          {
            "name": "async",
            "type": "boolean",
            "in": "formData",
            "description": "Do not wait for the ImportUpload action to finish. Default: false"
          },
          {
            "name": "publish_repository",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not to regenerate the repository on disk. Default: true"
          },
          {
            "name": "sync_capsule",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not to sync an external capsule after upload. Default: true"
          },
          {
            "name": "uploads",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of uploads to import"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{id}/gpg_key_content": {
      "get": {
        "tags": [
          "repositories"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_id_gpg_key_content",
        "summary": "Return the content of a repo gpg key, used directly by yum",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/content_view_puppet_modules": {
      "get": {
        "tags": [
          "content_view_puppet_modules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_content_view_puppet_modules",
        "summary": "List content view puppet modules",
        "parameters": [
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "name of the puppet module"
          },
          {
            "name": "author",
            "type": "string",
            "in": "query",
            "description": "author of the puppet module"
          },
          {
            "name": "uuid",
            "type": "string",
            "in": "query",
            "description": "uuid of the puppet module"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "content_view_puppet_modules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_content_views_content_view_id_content_view_puppet_modules",
        "summary": "Add a puppet module to the content view",
        "parameters": [
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "name of the puppet module"
          },
          {
            "name": "author",
            "type": "string",
            "in": "formData",
            "description": "author of the puppet module"
          },
          {
            "name": "id",
            "type": "string",
            "in": "formData",
            "description": "the id of the puppet module to associate"
          },
          {
            "name": "uuid",
            "type": "string",
            "in": "formData",
            "description": "the uuid of the puppet module to associate"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/content_view_puppet_modules/{id}": {
      "get": {
        "tags": [
          "content_view_puppet_modules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_content_view_puppet_modules_id",
        "summary": "Show a content view puppet module",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "puppet module ID"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "content_view_puppet_modules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_content_views_content_view_id_content_view_puppet_modules_id",
        "summary": "Update a puppet module associated with the content view",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "puppet module ID"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "name of the puppet module"
          },
          {
            "name": "author",
            "type": "string",
            "in": "formData",
            "description": "author of the puppet module"
          },
          {
            "name": "uuid",
            "type": "string",
            "in": "formData",
            "description": "the uuid of the puppet module to associate"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "content_view_puppet_modules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_content_views_content_view_id_content_view_puppet_modules_id",
        "summary": "Remove a puppet module from the content view",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "puppet module ID"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_versions": {
      "get": {
        "tags": [
          "content_view_versions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_versions",
        "summary": "List content view versions",
        "parameters": [
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Content view identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "Filter versions by environment"
          },
          {
            "name": "puppet_module_id",
            "type": "number",
            "in": "query",
            "description": "Filter versions by puppet module"
          },
          {
            "name": "version",
            "type": "string",
            "in": "query",
            "description": "Filter versions by version number"
          },
          {
            "name": "composite_version_id",
            "type": "number",
            "in": "query",
            "description": "Filter versions that are components in the specified composite version"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Organization identifier"
          },
          {
            "name": "triggered_by_id",
            "type": "number",
            "in": "query",
            "description": "Filter composite versions whose publish was triggered by the specified component version"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/content_view_versions": {
      "get": {
        "tags": [
          "content_view_versions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_content_view_versions",
        "summary": "List content view versions",
        "parameters": [
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Content view identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "Filter versions by environment"
          },
          {
            "name": "puppet_module_id",
            "type": "number",
            "in": "query",
            "description": "Filter versions by puppet module"
          },
          {
            "name": "version",
            "type": "string",
            "in": "query",
            "description": "Filter versions by version number"
          },
          {
            "name": "composite_version_id",
            "type": "number",
            "in": "query",
            "description": "Filter versions that are components in the specified composite version"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Organization identifier"
          },
          {
            "name": "triggered_by_id",
            "type": "number",
            "in": "query",
            "description": "Filter composite versions whose publish was triggered by the specified component version"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_versions/{id}": {
      "get": {
        "tags": [
          "content_view_versions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_versions_id",
        "summary": "Show content view version",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Content view version identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "content_view_versions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_content_view_versions_id",
        "summary": "Update a content view version",
        "parameters": [
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "The description for the content view version"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Content view version identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "content_view_versions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_content_view_versions_id",
        "summary": "Remove content view version",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Content view version identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_versions/{id}/promote": {
      "post": {
        "tags": [
          "content_view_versions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_content_view_versions_id_promote",
        "summary": "Promote a content view version",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Content view version identifier"
          },
          {
            "name": "force",
            "type": "boolean",
            "in": "formData",
            "description": "force content view promotion and bypass lifecycle environment restriction"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "formData",
            "description": "LifeCycle Environment identifier"
          },
          {
            "name": "environment_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Identifiers for Lifecycle Environment"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "The description for the content view version promotion"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_versions/{id}/republish_repositories": {
      "put": {
        "tags": [
          "content_view_versions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_content_view_versions_id_republish_repositories",
        "summary": "Forces a republish of the version's repositories' metadata",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Content view version identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_versions/{id}/export": {
      "post": {
        "tags": [
          "content_view_versions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_content_view_versions_id_export",
        "summary": "Export a content view version",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Content view version identifier"
          },
          {
            "name": "export_to_iso",
            "type": "boolean",
            "in": "formData",
            "description": "Export to ISO format"
          },
          {
            "name": "iso_mb_size",
            "type": "number",
            "in": "formData",
            "description": "maximum size of each ISO in MB"
          },
          {
            "name": "since",
            "type": "string",
            "in": "formData",
            "description": "Optional date of last export (ex: 2010-01-01T12:00:00Z)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_versions/incremental_update": {
      "post": {
        "tags": [
          "content_view_versions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_content_view_versions_incremental_update",
        "summary": "Perform an Incremental Update on one or more Content View Versions",
        "parameters": [
          {
            "name": "content_view_version_environments",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "The description for the new generated Content View Versions"
          },
          {
            "name": "resolve_dependencies",
            "type": "boolean",
            "in": "formData",
            "description": "If true, when adding the specified errata or packages, any needed dependencies will be copied as well. Defaults to true"
          },
          {
            "name": "propagate_all_composites",
            "type": "boolean",
            "in": "formData",
            "description": "If true, will publish a new composite version using any specified content_view_version_id that has been promoted to a lifecycle environment"
          },
          {
            "name": "add_content[errata_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Errata ids to copy into the new versions"
          },
          {
            "name": "add_content[package_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Package ids to copy into the new versions"
          },
          {
            "name": "add_content[deb_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Deb Package ids to copy into the new versions"
          },
          {
            "name": "add_content[puppet_module_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Puppet Module ids to copy into the new versions"
          },
          {
            "name": "update_hosts[included][search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for host to perform an action on"
          },
          {
            "name": "update_hosts[included][ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "update_hosts[excluded][ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/content_views": {
      "get": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_content_views",
        "summary": "List content views",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "nondefault",
            "type": "boolean",
            "in": "query",
            "description": "Filter out default content views"
          },
          {
            "name": "noncomposite",
            "type": "boolean",
            "in": "query",
            "description": "Filter out composite content views"
          },
          {
            "name": "composite",
            "type": "boolean",
            "in": "query",
            "description": "Filter only composite content views"
          },
          {
            "name": "without",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Do not include this array of content views"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "Name of the content view"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_organizations_organization_id_content_views",
        "summary": "Create a content view",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Name of the content view"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization identifier"
          },
          {
            "name": "label",
            "type": "string",
            "in": "formData",
            "description": "Content view label"
          },
          {
            "name": "composite",
            "type": "boolean",
            "in": "formData",
            "description": "Composite content view"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "Description for the content view"
          },
          {
            "name": "repository_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of repository ids"
          },
          {
            "name": "component_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of component content view version ids for composite views"
          },
          {
            "name": "auto_publish",
            "type": "boolean",
            "in": "formData",
            "description": "Enable/Disable auto publish of composite view"
          },
          {
            "name": "solve_dependencies",
            "type": "boolean",
            "in": "formData",
            "description": "Solve RPM dependencies by default on Content View publish, defaults to false"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views": {
      "get": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views",
        "summary": "List content views",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "nondefault",
            "type": "boolean",
            "in": "query",
            "description": "Filter out default content views"
          },
          {
            "name": "noncomposite",
            "type": "boolean",
            "in": "query",
            "description": "Filter out composite content views"
          },
          {
            "name": "composite",
            "type": "boolean",
            "in": "query",
            "description": "Filter only composite content views"
          },
          {
            "name": "without",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Do not include this array of content views"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "Name of the content view"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_content_views",
        "summary": "Create a content view",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Name of the content view"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Organization identifier"
          },
          {
            "name": "label",
            "type": "string",
            "in": "formData",
            "description": "Content view label"
          },
          {
            "name": "composite",
            "type": "boolean",
            "in": "formData",
            "description": "Composite content view"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "Description for the content view"
          },
          {
            "name": "repository_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of repository ids"
          },
          {
            "name": "component_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of component content view version ids for composite views"
          },
          {
            "name": "auto_publish",
            "type": "boolean",
            "in": "formData",
            "description": "Enable/Disable auto publish of composite view"
          },
          {
            "name": "solve_dependencies",
            "type": "boolean",
            "in": "formData",
            "description": "Solve RPM dependencies by default on Content View publish, defaults to false"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{id}": {
      "put": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_content_views_id",
        "summary": "Update a content view",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Content view identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "New name for the content view"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "Description for the content view"
          },
          {
            "name": "repository_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of repository ids"
          },
          {
            "name": "component_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of component content view version ids for composite views"
          },
          {
            "name": "auto_publish",
            "type": "boolean",
            "in": "formData",
            "description": "Enable/Disable auto publish of composite view"
          },
          {
            "name": "solve_dependencies",
            "type": "boolean",
            "in": "formData",
            "description": "Solve RPM dependencies by default on Content View publish, defaults to false"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "get": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_id",
        "summary": "Show a content view",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_content_views_id",
        "summary": "Delete a content view",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{id}/publish": {
      "post": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_content_views_id_publish",
        "summary": "Publish a content view",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Content view identifier"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "Description for the new published content view version"
          },
          {
            "name": "major",
            "type": "number",
            "in": "formData",
            "description": "Override the major version number"
          },
          {
            "name": "minor",
            "type": "number",
            "in": "formData",
            "description": "Override the minor version number"
          },
          {
            "name": "repos_units",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Specify the list of units in each repo"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{id}/available_puppet_modules": {
      "get": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_id_available_puppet_modules",
        "summary": "Get puppet modules that are available to be added to the content view",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view numeric identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "module name to restrict modules for"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{id}/available_puppet_module_names": {
      "get": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_id_available_puppet_module_names",
        "summary": "Get puppet modules names that are available to be added to the content view",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{id}/environments/{environment_id}": {
      "delete": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_content_views_id_environments_environment_id",
        "summary": "Remove a content view from an environment",
        "parameters": [
          {
            "name": "environment_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "environment numeric identifier"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{id}/remove": {
      "put": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_content_views_id_remove",
        "summary": "Remove versions and/or environments from a content view and reassign systems and keys",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view numeric identifier"
          },
          {
            "name": "environment_ids",
            "type": "number",
            "in": "formData",
            "description": "environment numeric identifiers to be removed"
          },
          {
            "name": "content_view_version_ids",
            "type": "number",
            "in": "formData",
            "description": "content view version identifiers to be deleted"
          },
          {
            "name": "system_content_view_id",
            "type": "number",
            "in": "formData",
            "description": "content view to reassign orphaned systems to"
          },
          {
            "name": "system_environment_id",
            "type": "number",
            "in": "formData",
            "description": "environment to reassign orphaned systems to"
          },
          {
            "name": "key_content_view_id",
            "type": "number",
            "in": "formData",
            "description": "content view to reassign orphaned activation keys to"
          },
          {
            "name": "key_environment_id",
            "type": "number",
            "in": "formData",
            "description": "environment to reassign orphaned activation keys to"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{id}/copy": {
      "post": {
        "tags": [
          "content_views"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_content_views_id_copy",
        "summary": "Make copy of a content view",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "New content view name"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Content view numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/debs": {
      "get": {
        "tags": [
          "debs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_debs",
        "summary": "List debs",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/filters/{filter_id}/debs": {
      "get": {
        "tags": [
          "debs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_filters_filter_id_debs",
        "summary": "List debs",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "filter_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{content_view_filter_id}/debs": {
      "get": {
        "tags": [
          "debs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_content_view_filter_id_debs",
        "summary": "List debs",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/debs": {
      "get": {
        "tags": [
          "debs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_debs",
        "summary": "List debs",
        "parameters": [
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/debs/{id}": {
      "get": {
        "tags": [
          "debs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_debs_id",
        "summary": "Show a deb",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/debs/{id}": {
      "get": {
        "tags": [
          "debs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_debs_id",
        "summary": "Show a deb",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/debs/compare": {
      "get": {
        "tags": [
          "debs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_debs_compare",
        "summary": "List debs",
        "parameters": [
          {
            "name": "content_view_version_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "content view versions to compare"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Library repository id to restrict comparisons to"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/docker_manifest_lists": {
      "get": {
        "tags": [
          "docker_manifest_lists"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_docker_manifest_lists",
        "summary": "List docker_manifest_lists",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/filters/{filter_id}/docker_manifest_lists": {
      "get": {
        "tags": [
          "docker_manifest_lists"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_filters_filter_id_docker_manifest_lists",
        "summary": "List docker_manifest_lists",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "filter_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{content_view_filter_id}/docker_manifest_lists": {
      "get": {
        "tags": [
          "docker_manifest_lists"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_content_view_filter_id_docker_manifest_lists",
        "summary": "List docker_manifest_lists",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/docker_manifest_lists": {
      "get": {
        "tags": [
          "docker_manifest_lists"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_docker_manifest_lists",
        "summary": "List docker_manifest_lists",
        "parameters": [
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/docker_manifest_lists/{id}": {
      "get": {
        "tags": [
          "docker_manifest_lists"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_docker_manifest_lists_id",
        "summary": "Show a docker manifest list",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/docker_manifest_lists/{id}": {
      "get": {
        "tags": [
          "docker_manifest_lists"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_docker_manifest_lists_id",
        "summary": "Show a docker manifest list",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/docker_manifest_lists/compare": {
      "get": {
        "tags": [
          "docker_manifest_lists"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_docker_manifest_lists_compare",
        "summary": "List docker_manifest_lists",
        "parameters": [
          {
            "name": "content_view_version_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "content view versions to compare"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Library repository id to restrict comparisons to"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/docker_manifests": {
      "get": {
        "tags": [
          "docker_manifests"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_docker_manifests",
        "summary": "List docker_manifests",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/filters/{filter_id}/docker_manifests": {
      "get": {
        "tags": [
          "docker_manifests"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_filters_filter_id_docker_manifests",
        "summary": "List docker_manifests",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "filter_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{content_view_filter_id}/docker_manifests": {
      "get": {
        "tags": [
          "docker_manifests"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_content_view_filter_id_docker_manifests",
        "summary": "List docker_manifests",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/docker_manifests": {
      "get": {
        "tags": [
          "docker_manifests"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_docker_manifests",
        "summary": "List docker_manifests",
        "parameters": [
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/docker_manifests/{id}": {
      "get": {
        "tags": [
          "docker_manifests"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_docker_manifests_id",
        "summary": "Show a docker manifest",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/docker_manifests/{id}": {
      "get": {
        "tags": [
          "docker_manifests"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_docker_manifests_id",
        "summary": "Show a docker manifest",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/docker_manifests/compare": {
      "get": {
        "tags": [
          "docker_manifests"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_docker_manifests_compare",
        "summary": "List docker_manifests",
        "parameters": [
          {
            "name": "content_view_version_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "content view versions to compare"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Library repository id to restrict comparisons to"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/docker_tags": {
      "get": {
        "tags": [
          "docker_tags"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_docker_tags",
        "summary": "List docker_tags",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/filters/{filter_id}/docker_tags": {
      "get": {
        "tags": [
          "docker_tags"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_filters_filter_id_docker_tags",
        "summary": "List docker_tags",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "filter_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{content_view_filter_id}/docker_tags": {
      "get": {
        "tags": [
          "docker_tags"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_content_view_filter_id_docker_tags",
        "summary": "List docker_tags",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/docker_tags": {
      "get": {
        "tags": [
          "docker_tags"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_docker_tags",
        "summary": "List docker_tags",
        "parameters": [
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/docker_tags/{id}": {
      "get": {
        "tags": [
          "docker_tags"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_docker_tags_id",
        "summary": "Show a docker tag",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/docker_tags/{id}": {
      "get": {
        "tags": [
          "docker_tags"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_docker_tags_id",
        "summary": "Show a docker tag",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/docker_tags/compare": {
      "get": {
        "tags": [
          "docker_tags"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_docker_tags_compare",
        "summary": "List docker_tags",
        "parameters": [
          {
            "name": "content_view_version_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "content view versions to compare"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Library repository id to restrict comparisons to"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/environments/{environment_id}": {
      "get": {
        "tags": [
          "lifecycle_environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_environments_environment_id",
        "summary": "Show an environment",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "ID of the environment"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the organization"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/environments/{id}": {
      "put": {
        "tags": [
          "lifecycle_environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_organizations_organization_id_environments_id",
        "summary": "Update an environment in an organization",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "name of the organization"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the environment"
          },
          {
            "name": "new_name",
            "type": "string",
            "in": "formData",
            "description": "new name to be given to the environment"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "description of the environment"
          },
          {
            "name": "registry_name_pattern",
            "type": "string",
            "in": "formData",
            "description": "pattern for container image names"
          },
          {
            "name": "registry_unauthenticated_pull",
            "type": "boolean",
            "in": "formData",
            "description": "allow unauthenticed pull of container images"
          },
          {
            "name": "async",
            "type": "boolean",
            "in": "formData",
            "description": "Do not wait for the update action to finish. Default: true"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "lifecycle_environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_organizations_organization_id_environments_id",
        "summary": "Destroy an environment in an organization",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/environments/paths": {
      "get": {
        "tags": [
          "lifecycle_environments"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_environments_paths",
        "summary": "List environment paths",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "permission_type",
            "type": "string",
            "in": "query",
            "description": "      The associated permission type. One of (readable | promotable)\n      Default: readable\n"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/errata": {
      "get": {
        "tags": [
          "errata"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_errata",
        "summary": "List errata",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "Content View Version identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "description": "Content View Filter identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Repository identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "Environment identifier"
          },
          {
            "name": "cve",
            "type": "string",
            "in": "query",
            "description": "CVE identifier"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "query",
            "description": "Host id to list applicable errata for"
          },
          {
            "name": "errata_restrict_applicable",
            "type": "boolean",
            "in": "query",
            "description": "Return errata that are applicable to one or more hosts (defaults to true if host_id is specified)"
          },
          {
            "name": "errata_restrict_installable",
            "type": "boolean",
            "in": "query",
            "description": "Return errata that are upgradable on one or more hosts"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Return errata that can be added to the specified object.  The values 'content_view_version' and 'content_view_filter are supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/errata/{id}": {
      "get": {
        "tags": [
          "errata"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_errata_id",
        "summary": "Show an erratum",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/errata/{id}": {
      "get": {
        "tags": [
          "errata"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_errata_id",
        "summary": "Show an erratum",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/errata/compare": {
      "get": {
        "tags": [
          "errata"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_errata_compare",
        "summary": "List errata",
        "parameters": [
          {
            "name": "content_view_version_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "content view versions to compare"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Library repository id to restrict comparisons to"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_versions/{id}/available_errata": {
      "get": {
        "tags": [
          "errata"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_versions_id_available_errata",
        "summary": "Return errata that can be added to the Content View Version via an Incremental Update",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Content View Version identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Organization identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "description": "Content View Filter identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Repository identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "Environment identifier"
          },
          {
            "name": "cve",
            "type": "string",
            "in": "query",
            "description": "CVE identifier"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "query",
            "description": "Host id to list applicable errata for"
          },
          {
            "name": "errata_restrict_applicable",
            "type": "boolean",
            "in": "query",
            "description": "Return errata that are applicable to one or more hosts (defaults to true if host_id is specified)"
          },
          {
            "name": "errata_restrict_installable",
            "type": "boolean",
            "in": "query",
            "description": "Return errata that are upgradable on one or more hosts"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/files": {
      "get": {
        "tags": [
          "file_units"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_files",
        "summary": "List files",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/filters/{filter_id}/files": {
      "get": {
        "tags": [
          "file_units"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_filters_filter_id_files",
        "summary": "List files",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "filter_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{content_view_filter_id}/files": {
      "get": {
        "tags": [
          "file_units"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_content_view_filter_id_files",
        "summary": "List files",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/files": {
      "get": {
        "tags": [
          "file_units"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_files",
        "summary": "List files",
        "parameters": [
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/files/{id}": {
      "get": {
        "tags": [
          "file_units"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_files_id",
        "summary": "Show a file",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/files/{id}": {
      "get": {
        "tags": [
          "file_units"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_files_id",
        "summary": "Show a file",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/files/compare": {
      "get": {
        "tags": [
          "file_units"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_files_compare",
        "summary": "List files",
        "parameters": [
          {
            "name": "content_view_version_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "content view versions to compare"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Library repository id to restrict comparisons to"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/gpg_keys": {
      "get": {
        "tags": [
          "gpg_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_gpg_keys",
        "summary": "List gpg keys",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "name of the GPG key"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "gpg_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_gpg_keys",
        "summary": "Create a gpg key",
        "parameters": [
          {
            "name": "content",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "public key block in DER encoding"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "identifier of the gpg key"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "organization identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/gpg_keys/{id}": {
      "get": {
        "tags": [
          "gpg_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_gpg_keys_id",
        "summary": "Show a gpg key",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "gpg key numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "gpg_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_gpg_keys_id",
        "summary": "Update a repository",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "gpg key numeric identifier"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "identifier of the gpg key"
          },
          {
            "name": "content",
            "type": "string",
            "in": "formData",
            "description": "public key block in DER encoding"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "gpg_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_gpg_keys_id",
        "summary": "Destroy a gpg key",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "gpg key numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/gpg_keys/{id}/content": {
      "get": {
        "tags": [
          "gpg_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_gpg_keys_id_content",
        "summary": "Return the content of a gpg key, used directly by yum",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "gpg_keys"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_gpg_keys_id_content",
        "summary": "Upload gpg key contents",
        "parameters": [
          {
            "name": "content",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "file contents"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "gpg key numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/host_collections/{id}": {
      "get": {
        "tags": [
          "host_collections"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_host_collections_id",
        "summary": "Show a host collection",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the host collection"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "host_collections"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_host_collections_id",
        "summary": "Update a host collection",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the host collection"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "Host Collection name"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to replace the hosts in host collection"
          },
          {
            "name": "max_hosts",
            "type": "number",
            "in": "formData",
            "description": "Maximum number of hosts in the host collection"
          },
          {
            "name": "unlimited_hosts",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the host collection may have unlimited hosts"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "host_collections"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_host_collections_id",
        "summary": "Destroy a host collection",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the host collection"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/host_collections": {
      "get": {
        "tags": [
          "host_collections"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_host_collections",
        "summary": "List host collections",
        "parameters": [
          {
            "name": "activation_key_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "activation key identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "host collection name to filter by"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "query",
            "description": "Filter products by host id"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Interpret specified object to return only Host Collections that can be associated with specified object. The value 'host' is supported."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "host_collections"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_host_collections",
        "summary": "Create a host collection",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Host Collection name"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to replace the hosts in host collection"
          },
          {
            "name": "max_hosts",
            "type": "number",
            "in": "formData",
            "description": "Maximum number of hosts in the host collection"
          },
          {
            "name": "unlimited_hosts",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the host collection may have unlimited hosts"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/host_collections": {
      "get": {
        "tags": [
          "host_collections"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_host_collections",
        "summary": "List host collections within an organization",
        "parameters": [
          {
            "name": "activation_key_id",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "activation key identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "host collection name to filter by"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "query",
            "description": "Filter products by host id"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Interpret specified object to return only Host Collections that can be associated with specified object. The value 'host' is supported."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "host_collections"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_organizations_organization_id_host_collections",
        "summary": "Create a host collection",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Host Collection name"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to replace the hosts in host collection"
          },
          {
            "name": "max_hosts",
            "type": "number",
            "in": "formData",
            "description": "Maximum number of hosts in the host collection"
          },
          {
            "name": "unlimited_hosts",
            "type": "boolean",
            "in": "formData",
            "description": "Whether or not the host collection may have unlimited hosts"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/activation_keys/{activation_key_id}/host_collections": {
      "get": {
        "tags": [
          "host_collections"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_activation_keys_activation_key_id_host_collections",
        "summary": "List host collections in an activation key",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "organization identifier"
          },
          {
            "name": "activation_key_id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "activation key identifier"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "name",
            "type": "string",
            "in": "query",
            "description": "host collection name to filter by"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "query",
            "description": "Filter products by host id"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Interpret specified object to return only Host Collections that can be associated with specified object. The value 'host' is supported."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/host_collections/{id}/add_hosts": {
      "put": {
        "tags": [
          "host_collections"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_host_collections_id_add_hosts",
        "summary": "Add host to the host collection",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the host collection"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of host ids"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/host_collections/{id}/remove_hosts": {
      "put": {
        "tags": [
          "host_collections"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_host_collections_id_remove_hosts",
        "summary": "Remove hosts from the host collection",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Id of the host collection"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of host ids"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/host_collections/{id}/copy": {
      "post": {
        "tags": [
          "host_collections"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_host_collections_id_copy",
        "summary": "Make copy of a host collection",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "New host collection name"
          },
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the host collection"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/errata": {
      "get": {
        "tags": [
          "host_errata"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_errata",
        "summary": "List errata available for the content host",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "UUID of the content host"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "query",
            "description": "Calculate Applicable Errata based on a particular Content View"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "Calculate Applicable Errata based on a particular Environment"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/errata/apply": {
      "put": {
        "tags": [
          "host_errata"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_errata_apply",
        "summary": "Schedule errata for installation",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Host ID"
          },
          {
            "name": "errata_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of Errata ids to install"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for erratum to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of errata ids to perform an action on, (ex: RHSA-2019:1168)"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of errata ids to exclude and not run an action on, (ex: RHSA-2019:1168)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/errata/{id}": {
      "get": {
        "tags": [
          "host_errata"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_errata_id",
        "summary": "Retrieve a single errata for a host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Errata id of the erratum (RHSA-2012:108)"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Host ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/errata/applicability": {
      "put": {
        "tags": [
          "host_errata"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_errata_applicability",
        "summary": "Force regenerate applicability.",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Host ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/module_streams": {
      "get": {
        "tags": [
          "host_module_streams"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_module_streams",
        "summary": "List module streams available to the host",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the host"
          },
          {
            "name": "status",
            "type": "string",
            "enum": [
              "enabled",
              "disabled",
              "unknown",
              "installed",
              "upgradable"
            ],
            "in": "query",
            "description": "Streams based on the host based on their status"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/packages": {
      "get": {
        "tags": [
          "host_packages"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_packages",
        "summary": "List packages installed on the host",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the host"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/packages/install": {
      "put": {
        "tags": [
          "host_packages"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_packages_install",
        "summary": "Install packages remotely",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the host"
          },
          {
            "name": "packages",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of package names"
          },
          {
            "name": "groups",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of package group names"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/packages/upgrade": {
      "put": {
        "tags": [
          "host_packages"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_packages_upgrade",
        "summary": "Update packages remotely",
        "parameters": [
          {
            "name": "packages",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "list of packages names"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/packages/upgrade_all": {
      "put": {
        "tags": [
          "host_packages"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_packages_upgrade_all",
        "summary": "Update packages remotely",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/packages/remove": {
      "put": {
        "tags": [
          "host_packages"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_host_id_packages_remove",
        "summary": "Uninstall packages remotely",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the host"
          },
          {
            "name": "packages",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of package names"
          },
          {
            "name": "groups",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of package group names"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}/traces": {
      "get": {
        "tags": [
          "host_tracer"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id_traces",
        "summary": "List services that need restarting on the host",
        "parameters": [
          {
            "name": "host_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "ID of the host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/add_host_collections": {
      "put": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_bulk_add_host_collections",
        "summary": "Add one or more host collections to one or more hosts",
        "parameters": [
          {
            "name": "host_collection_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of host collection ids"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/remove_host_collections": {
      "put": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_bulk_remove_host_collections",
        "summary": "Remove one or more host collections from one or more hosts",
        "parameters": [
          {
            "name": "host_collection_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of host collection ids"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/applicable_errata": {
      "post": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts_bulk_applicable_errata",
        "summary": "Fetch applicable errata for a host.",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/installable_errata": {
      "post": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts_bulk_installable_errata",
        "summary": "Fetch installable errata for a host.",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/install_content": {
      "put": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_bulk_install_content",
        "summary": "Install content on one or more hosts",
        "parameters": [
          {
            "name": "content",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of content (e.g. package names, package group names or errata ids)"
          },
          {
            "name": "content_type",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "The type of content.  The following types are supported: 'package', 'package_group' and 'errata'."
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/update_content": {
      "put": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_bulk_update_content",
        "summary": "Update content on one or more hosts",
        "parameters": [
          {
            "name": "content",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of content (e.g. package or package group names)"
          },
          {
            "name": "content_type",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "The type of content.  The following types are supported: 'package' and 'package_group."
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          },
          {
            "name": "update_all",
            "type": "boolean",
            "in": "formData",
            "description": "Updates all packages on the host(s)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/remove_content": {
      "put": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_bulk_remove_content",
        "summary": "Remove content on one or more hosts",
        "parameters": [
          {
            "name": "content",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of content (e.g. package or package group names)"
          },
          {
            "name": "content_type",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "The type of content.  The following types are supported: 'package' and 'package_group."
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/destroy": {
      "put": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_bulk_destroy",
        "summary": "Destroy one or more hosts",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/remove_subscriptions": {
      "put": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_bulk_remove_subscriptions",
        "summary": "Remove subscriptions from one or more hosts",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          },
          {
            "name": "subscriptions",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of subscriptions to remove"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/add_subscriptions": {
      "put": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_bulk_add_subscriptions",
        "summary": "Add subscriptions to one or more hosts",
        "parameters": [
          {
            "name": "subscriptions",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Array of subscriptions to add"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/auto_attach": {
      "put": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_bulk_auto_attach",
        "summary": "Trigger an auto-attach of subscriptions on one or more hosts",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/content_overrides": {
      "put": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_bulk_content_overrides",
        "summary": "Set content overrides to one or more hosts",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          },
          {
            "name": "content_overrides",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Array of Content override parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/environment_content_view": {
      "put": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_bulk_environment_content_view",
        "summary": "Assign the environment and content view to one or more hosts",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/release_version": {
      "put": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_hosts_bulk_release_version",
        "summary": "Assign the release version to one or more hosts",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          },
          {
            "name": "release_version",
            "type": "string",
            "in": "formData",
            "description": "content release version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/available_incremental_updates": {
      "post": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts_bulk_available_incremental_updates",
        "summary": "Given a set of hosts and errata, lists the content view versions and environments that need updating.",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          },
          {
            "name": "errata_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of Errata ids"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/bulk/module_streams": {
      "post": {
        "tags": [
          "hosts_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_hosts_bulk_module_streams",
        "summary": "Fetch available module streams for hosts.",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "ID of the organization"
          },
          {
            "name": "included[search]",
            "type": "string",
            "in": "formData",
            "description": "Search string for hosts to perform an action on"
          },
          {
            "name": "included[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to perform an action on"
          },
          {
            "name": "excluded[ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "List of host ids to exclude and not run an action on"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/module_streams": {
      "get": {
        "tags": [
          "module_streams"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_module_streams",
        "summary": "List module_streams",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "List of host id to list available module streams for"
          },
          {
            "name": "name_stream_only",
            "type": "boolean",
            "in": "query",
            "description": "Return name and stream information only)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/filters/{filter_id}/module_streams": {
      "get": {
        "tags": [
          "module_streams"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_filters_filter_id_module_streams",
        "summary": "List module_streams",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "filter_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "List of host id to list available module streams for"
          },
          {
            "name": "name_stream_only",
            "type": "boolean",
            "in": "query",
            "description": "Return name and stream information only)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{content_view_filter_id}/module_streams": {
      "get": {
        "tags": [
          "module_streams"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_content_view_filter_id_module_streams",
        "summary": "List module_streams",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "List of host id to list available module streams for"
          },
          {
            "name": "name_stream_only",
            "type": "boolean",
            "in": "query",
            "description": "Return name and stream information only)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/module_streams": {
      "get": {
        "tags": [
          "module_streams"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_module_streams",
        "summary": "List module_streams",
        "parameters": [
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          },
          {
            "name": "host_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "List of host id to list available module streams for"
          },
          {
            "name": "name_stream_only",
            "type": "boolean",
            "in": "query",
            "description": "Return name and stream information only)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/module_streams/{id}": {
      "get": {
        "tags": [
          "module_streams"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_module_streams_id",
        "summary": "Show a module stream",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/module_streams/{id}": {
      "get": {
        "tags": [
          "module_streams"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_module_streams_id",
        "summary": "Show a module stream",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/module_streams/compare": {
      "get": {
        "tags": [
          "module_streams"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_module_streams_compare",
        "summary": "List module_streams",
        "parameters": [
          {
            "name": "content_view_version_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "content view versions to compare"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Library repository id to restrict comparisons to"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ostree_branches": {
      "get": {
        "tags": [
          "ostree_branches"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ostree_branches",
        "summary": "List ostree_branches",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/filters/{filter_id}/ostree_branches": {
      "get": {
        "tags": [
          "ostree_branches"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_filters_filter_id_ostree_branches",
        "summary": "List ostree_branches",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "filter_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{content_view_filter_id}/ostree_branches": {
      "get": {
        "tags": [
          "ostree_branches"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_content_view_filter_id_ostree_branches",
        "summary": "List ostree_branches",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/ostree_branches": {
      "get": {
        "tags": [
          "ostree_branches"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_ostree_branches",
        "summary": "List ostree_branches",
        "parameters": [
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ostree_branches/{id}": {
      "get": {
        "tags": [
          "ostree_branches"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ostree_branches_id",
        "summary": "Show an ostree branch",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/ostree_branches/{id}": {
      "get": {
        "tags": [
          "ostree_branches"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_ostree_branches_id",
        "summary": "Show an ostree branch",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ostree_branches/compare": {
      "get": {
        "tags": [
          "ostree_branches"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ostree_branches_compare",
        "summary": "List ostree_branches",
        "parameters": [
          {
            "name": "content_view_version_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "content view versions to compare"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Library repository id to restrict comparisons to"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/package_groups": {
      "get": {
        "tags": [
          "package_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_package_groups",
        "summary": "List package_groups",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/filters/{filter_id}/package_groups": {
      "get": {
        "tags": [
          "package_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_filters_filter_id_package_groups",
        "summary": "List package_groups",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "filter_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{content_view_filter_id}/package_groups": {
      "get": {
        "tags": [
          "package_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_content_view_filter_id_package_groups",
        "summary": "List package_groups",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/package_groups": {
      "get": {
        "tags": [
          "package_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_package_groups",
        "summary": "List package_groups",
        "parameters": [
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "content view filter identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "content view version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "ids to filter content by"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/package_groups/{id}": {
      "get": {
        "tags": [
          "package_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_package_groups_id",
        "summary": "Show a package group",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/package_groups/{id}": {
      "get": {
        "tags": [
          "package_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_package_groups_id",
        "summary": "Show a package group",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/package_groups/compare": {
      "get": {
        "tags": [
          "package_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_package_groups_compare",
        "summary": "List package_groups",
        "parameters": [
          {
            "name": "content_view_version_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "content view versions to compare"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Library repository id to restrict comparisons to"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/package_group": {
      "post": {
        "tags": [
          "package_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_package_group",
        "summary": "Create a package group",
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "package group name"
          },
          {
            "name": "repository_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "repository_id"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "package group description. Defaults to params[:name]"
          },
          {
            "name": "user_visible",
            "type": "boolean",
            "in": "formData",
            "description": "set \"user_visible\" flag on package group. Defaults to true"
          },
          {
            "name": "mandatory_package_names",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "mandatory package names to include in the package group"
          },
          {
            "name": "optional_package_names",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "optional package names to include in the package group"
          },
          {
            "name": "conditional_package_names",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "conditional package names to include in the package group"
          },
          {
            "name": "default_package_names",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "default package names to include in the package group"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "package_groups"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_package_group",
        "summary": "Delete a package group",
        "parameters": [
          {
            "name": "repository_id",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "repository_id"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "package group name"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/packages": {
      "get": {
        "tags": [
          "packages"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_packages",
        "summary": "List packages",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Content View Filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "Content View Version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "Environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Package identifiers to filter content by"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "query",
            "description": "Host id to list applicable packages for"
          },
          {
            "name": "packages_restrict_applicable",
            "type": "boolean",
            "in": "query",
            "description": "Return packages that are applicable to one or more hosts (defaults to true if host_id is specified)"
          },
          {
            "name": "packages_restrict_upgradable",
            "type": "boolean",
            "in": "query",
            "description": "Return packages that are upgradable on one or more hosts"
          },
          {
            "name": "packages_restrict_latest",
            "type": "boolean",
            "in": "query",
            "description": "Return only the latest version of each package"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Return packages that can be added to the specified object.  Only the value 'content_view_version' is supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_views/{content_view_id}/filters/{filter_id}/{resource_id}": {
      "get": {
        "tags": [
          "packages"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_views_content_view_id_filters_filter_id_resource_id",
        "summary": "List :resource_id",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Repository identifier"
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Content View Filter identifier"
          },
          {
            "name": "resource_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "filter_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "content_view_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "Content View Version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "Environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Package identifiers to filter content by"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "query",
            "description": "Host id to list applicable packages for"
          },
          {
            "name": "packages_restrict_applicable",
            "type": "boolean",
            "in": "query",
            "description": "Return packages that are applicable to one or more hosts (defaults to true if host_id is specified)"
          },
          {
            "name": "packages_restrict_upgradable",
            "type": "boolean",
            "in": "query",
            "description": "Return packages that are upgradable on one or more hosts"
          },
          {
            "name": "packages_restrict_latest",
            "type": "boolean",
            "in": "query",
            "description": "Return only the latest version of each package"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Return packages that can be added to the specified object.  Only the value 'content_view_version' is supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/content_view_filters/{content_view_filter_id}/{resource_id}": {
      "get": {
        "tags": [
          "packages"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_content_view_filters_content_view_filter_id_resource_id",
        "summary": "List :resource_id",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Repository identifier"
          },
          {
            "name": "resource_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Content View Filter identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "Content View Version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "Environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Package identifiers to filter content by"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "query",
            "description": "Host id to list applicable packages for"
          },
          {
            "name": "packages_restrict_applicable",
            "type": "boolean",
            "in": "query",
            "description": "Return packages that are applicable to one or more hosts (defaults to true if host_id is specified)"
          },
          {
            "name": "packages_restrict_upgradable",
            "type": "boolean",
            "in": "query",
            "description": "Return packages that are upgradable on one or more hosts"
          },
          {
            "name": "packages_restrict_latest",
            "type": "boolean",
            "in": "query",
            "description": "Return only the latest version of each package"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Return packages that can be added to the specified object.  Only the value 'content_view_version' is supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/{resource_id}": {
      "get": {
        "tags": [
          "packages"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_resource_id",
        "summary": "List :resource_id",
        "parameters": [
          {
            "name": "content_view_filter_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "Content View Filter identifier"
          },
          {
            "name": "resource_id",
            "type": "number",
            "in": "path",
            "required": true
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Repository identifier"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Organization identifier"
          },
          {
            "name": "content_view_version_id",
            "type": "number",
            "in": "query",
            "description": "Content View Version identifier"
          },
          {
            "name": "environment_id",
            "type": "number",
            "in": "query",
            "description": "Environment identifier"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Package identifiers to filter content by"
          },
          {
            "name": "host_id",
            "type": "number",
            "in": "query",
            "description": "Host id to list applicable packages for"
          },
          {
            "name": "packages_restrict_applicable",
            "type": "boolean",
            "in": "query",
            "description": "Return packages that are applicable to one or more hosts (defaults to true if host_id is specified)"
          },
          {
            "name": "packages_restrict_upgradable",
            "type": "boolean",
            "in": "query",
            "description": "Return packages that are upgradable on one or more hosts"
          },
          {
            "name": "packages_restrict_latest",
            "type": "boolean",
            "in": "query",
            "description": "Return only the latest version of each package"
          },
          {
            "name": "available_for",
            "type": "string",
            "in": "query",
            "description": "Return packages that can be added to the specified object.  Only the value 'content_view_version' is supported."
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "Search string"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. 'id DESC'"
          },
          {
            "name": "full_result",
            "type": "boolean",
            "in": "query",
            "description": "Whether or not to show all results"
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort_order",
            "type": "string",
            "in": "query",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/packages/{id}": {
      "get": {
        "tags": [
          "packages"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_packages_id",
        "summary": "Show a package",
        "parameters": [
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "required": true,
            "description": "repository identifier"
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/repositories/{repository_id}/packages/{id}": {
      "get": {
        "tags": [
          "packages"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_repositories_repository_id_packages_id",
        "summary": "Show a package",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": ":a_resource identifier"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "repository identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/packages/compare": {
      "get": {
        "tags": [
          "packages"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_packages_compare",
        "summary": "List packages",
        "parameters": [
          {
            "name": "content_view_version_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "content view versions to compare"
          },
          {
            "name": "repository_id",
            "type": "number",
            "in": "query",
            "description": "Library repository id to restrict comparisons to"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "ping"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_ping",
        "summary": "Shows status of system and it's subcomponents",
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": "\n<p>This service is only available for authenticated users</p>\n"
      }
    },
    "/products/bulk/destroy": {
      "put": {
        "tags": [
          "products_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_products_bulk_destroy",
        "summary": "Destroy one or more products",
        "parameters": [
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of product ids"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/products/bulk/sync": {
      "put": {
        "tags": [
          "products_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_products_bulk_sync",
        "summary": "Sync one or more products",
        "parameters": [
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of product ids"
          },
          {
            "name": "skip_metadata_check",
            "type": "boolean",
            "in": "formData",
            "description": "Force sync even if no upstream changes are detected. Non-yum repositories are skipped."
          },
          {
            "name": "validate_contents",
            "type": "boolean",
            "in": "formData",
            "description": "Force a sync and validate the checksums of all content. Non-yum repositories (or those with                                                      On Demand download policy) are skipped."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/products/bulk/sync_plan": {
      "put": {
        "tags": [
          "products_bulk_actions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_products_bulk_sync_plan",
        "summary": "Sync one or more products",
        "parameters": [
          {
            "name": "plan_id",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Sync plan identifier to attach"
          },
          {
            "name": "ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "List of product ids"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/upstream_subscriptions": {
      "get": {
        "tags": [
          "upstream_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_upstream_subscriptions",
        "summary": "List available subscriptions from Red Hat Subscription Management",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization ID"
          },
          {
            "name": "page",
            "type": "number",
            "in": "query",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "type": "number",
            "in": "query",
            "description": "Number of results per page to return."
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "The order to sort the results in. ['asc', 'desc'] Defaults to 'desc'."
          },
          {
            "name": "sort_by",
            "type": "string",
            "in": "query",
            "description": "The field to sort the data by. Defaults to the created date."
          },
          {
            "name": "pool_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "Return only the upstream pools which map to the given Katello pool IDs"
          },
          {
            "name": "quantities_only",
            "type": "boolean",
            "in": "query",
            "description": "Only returns id and quantity fields"
          },
          {
            "name": "attachable",
            "type": "boolean",
            "in": "query",
            "description": "Return only subscriptions which can be attached to the upstream allocation"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "upstream_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_organizations_organization_id_upstream_subscriptions",
        "summary": "Update the quantity of one or more subscriptions on an upstream allocation",
        "parameters": [
          {
            "name": "pools",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Array of Pools to be updated. Only pools originating upstream are accepted."
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "upstream_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_organizations_organization_id_upstream_subscriptions",
        "summary": "Remove one or more subscriptions from an upstream subscription allocation",
        "parameters": [
          {
            "name": "pool_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Array of local pool IDs. Only pools originating upstream are accepted."
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "upstream_subscriptions"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_organizations_organization_id_upstream_subscriptions",
        "summary": "Add subscriptions consumed by a manifest from Red Hat Subscription Management",
        "parameters": [
          {
            "name": "pools",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "Array of pools to add"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Organization ID"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/configs": {
      "get": {
        "tags": [
          "configs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_configs",
        "summary": "List of virt-who configurations",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "configs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_configs",
        "summary": "Create a virt-who configuration",
        "parameters": [
          {
            "name": "foreman_virt_who_configure_config[organization_id]",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Organization of the virt-who configuration"
          },
          {
            "name": "foreman_virt_who_configure_config[satellite_url]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Satellite server FQDN"
          },
          {
            "name": "foreman_virt_who_configure_config[hypervisor_username]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Account name by which virt-who is to connect to the hypervisor."
          },
          {
            "name": "foreman_virt_who_configure_config[hypervisor_server]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Fully qualified host name or IP address of the hypervisor"
          },
          {
            "name": "foreman_virt_who_configure_config[hypervisor_type]",
            "type": "string",
            "enum": [
              "esx",
              "rhevm",
              "hyperv",
              "xen",
              "libvirt",
              "kubevirt"
            ],
            "in": "formData",
            "required": true,
            "description": "Hypervisor type"
          },
          {
            "name": "foreman_virt_who_configure_config[hypervisor_id]",
            "type": "string",
            "enum": [
              "hostname",
              "uuid",
              "hwuuid"
            ],
            "in": "formData",
            "required": true,
            "description": "Specifies how the hypervisor will be identified."
          },
          {
            "name": "foreman_virt_who_configure_config[filtering_mode]",
            "type": "string",
            "enum": [
              0,
              1,
              2
            ],
            "in": "formData",
            "required": true,
            "description": "Hypervisor filtering mode, 0 means no filtering, 1 means whitelist, 2 means blacklist"
          },
          {
            "name": "foreman_virt_who_configure_config[interval]",
            "type": "string",
            "enum": [
              60,
              120,
              240,
              480,
              720,
              1440,
              2880,
              4320
            ],
            "in": "formData",
            "required": true,
            "description": "Configuration interval in minutes"
          },
          {
            "name": "foreman_virt_who_configure_config[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Configuration name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "foreman_virt_who_configure_config[whitelist]",
            "type": "string",
            "in": "formData",
            "description": "Hypervisor whitelist, applicable only when filtering mode is set to 1. Wildcards and regular expressions are supported, multiple records must be separated by comma."
          },
          {
            "name": "foreman_virt_who_configure_config[blacklist]",
            "type": "string",
            "in": "formData",
            "description": "Hypervisor blacklist, applicable only when filtering mode is set to 2. Wildcards and regular expressions are supported, multiple records must be separated by comma."
          },
          {
            "name": "foreman_virt_who_configure_config[filter_host_parents]",
            "type": "string",
            "in": "formData",
            "description": "Applicable only for esx provider type. Only hosts which parent (usually ComputeResource) name is specified in comma-separated list in this option will be reported. Wildcards and regular expressions are supported, multiple records must be separated by comma. Put the value into the double-quotes if it contains special characters like comma. All new line characters will be removed in resulting configuration file, white spaces are removed from beginning and end."
          },
          {
            "name": "foreman_virt_who_configure_config[exclude_host_parents]",
            "type": "string",
            "in": "formData",
            "description": "Applicable only for esx provider type. Hosts which parent (usually ComputeResource) name is specified in comma-separated list in this option will <b>NOT</b> be reported. Wildcards and regular expressions are supported, multiple records must be separated by comma. Put the value into the double-quotes if it contains special characters like comma. All new line characters will be removed in resulting configuration file, white spaces are removed from beginning and end."
          },
          {
            "name": "foreman_virt_who_configure_config[hypervisor_password]",
            "type": "string",
            "in": "formData",
            "description": "Hypervisor password, required for all hypervisor types except for libvirt"
          },
          {
            "name": "foreman_virt_who_configure_config[debug]",
            "type": "boolean",
            "in": "formData",
            "description": "Enable debugging output"
          },
          {
            "name": "foreman_virt_who_configure_config[proxy]",
            "type": "string",
            "in": "formData",
            "description": "HTTP Proxy that should be used for communication between the server on which virt-who is running and the hypervisors and virtualization managers."
          },
          {
            "name": "foreman_virt_who_configure_config[no_proxy]",
            "type": "string",
            "in": "formData",
            "description": "Ignore Proxy. A comma-separated list of hostnames or domains or ip addresses to ignore Capsule settings for. Optionally this may be set to * to bypass proxy settings for all hostnames domains or ip addresses."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/organizations/{organization_id}/configs": {
      "get": {
        "tags": [
          "configs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_organizations_organization_id_configs",
        "summary": "List of virt-who configurations per organization",
        "parameters": [
          {
            "name": "organization_id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Scope by organizations"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/configs/{id}": {
      "get": {
        "tags": [
          "configs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_configs_id",
        "summary": "Show a virt-who configuration",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "configs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_configs_id",
        "summary": "Update a virt-who configuration",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Configuration numeric identifier"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "foreman_virt_who_configure_config[name]",
            "type": "string",
            "in": "formData",
            "description": "Configuration name"
          },
          {
            "name": "foreman_virt_who_configure_config[interval]",
            "type": "string",
            "enum": [
              60,
              120,
              240,
              480,
              720,
              1440,
              2880,
              4320
            ],
            "in": "formData",
            "description": "Configuration interval in minutes"
          },
          {
            "name": "foreman_virt_who_configure_config[filtering_mode]",
            "type": "string",
            "enum": [
              0,
              1,
              2
            ],
            "in": "formData",
            "description": "Hypervisor filtering mode, 0 means no filtering, 1 means whitelist, 2 means blacklist"
          },
          {
            "name": "foreman_virt_who_configure_config[whitelist]",
            "type": "string",
            "in": "formData",
            "description": "Hypervisor whitelist, applicable only when filtering mode is set to 1. Wildcards and regular expressions are supported, multiple records must be separated by comma."
          },
          {
            "name": "foreman_virt_who_configure_config[blacklist]",
            "type": "string",
            "in": "formData",
            "description": "Hypervisor blacklist, applicable only when filtering mode is set to 2. Wildcards and regular expressions are supported, multiple records must be separated by comma."
          },
          {
            "name": "foreman_virt_who_configure_config[filter_host_parents]",
            "type": "string",
            "in": "formData",
            "description": "Applicable only for esx provider type. Only hosts which parent (usually ComputeResource) name is specified in comma-separated list in this option will be reported. Wildcards and regular expressions are supported, multiple records must be separated by comma. Put the value into the double-quotes if it contains special characters like comma. All new line characters will be removed in resulting configuration file, white spaces are removed from beginning and end."
          },
          {
            "name": "foreman_virt_who_configure_config[exclude_host_parents]",
            "type": "string",
            "in": "formData",
            "description": "Applicable only for esx provider type. Hosts which parent (usually ComputeResource) name is specified in comma-separated list in this option will <b>NOT</b> be reported. Wildcards and regular expressions are supported, multiple records must be separated by comma. Put the value into the double-quotes if it contains special characters like comma. All new line characters will be removed in resulting configuration file, white spaces are removed from beginning and end."
          },
          {
            "name": "foreman_virt_who_configure_config[hypervisor_id]",
            "type": "string",
            "enum": [
              "hostname",
              "uuid",
              "hwuuid"
            ],
            "in": "formData",
            "description": "Specifies how the hypervisor will be identified."
          },
          {
            "name": "foreman_virt_who_configure_config[hypervisor_type]",
            "type": "string",
            "enum": [
              "esx",
              "rhevm",
              "hyperv",
              "xen",
              "libvirt",
              "kubevirt"
            ],
            "in": "formData",
            "description": "Hypervisor type"
          },
          {
            "name": "foreman_virt_who_configure_config[hypervisor_server]",
            "type": "string",
            "in": "formData",
            "description": "Fully qualified host name or IP address of the hypervisor"
          },
          {
            "name": "foreman_virt_who_configure_config[hypervisor_username]",
            "type": "string",
            "in": "formData",
            "description": "Account name by which virt-who is to connect to the hypervisor."
          },
          {
            "name": "foreman_virt_who_configure_config[hypervisor_password]",
            "type": "string",
            "in": "formData",
            "description": "Hypervisor password, required for all hypervisor types except for libvirt"
          },
          {
            "name": "foreman_virt_who_configure_config[satellite_url]",
            "type": "string",
            "in": "formData",
            "description": "Satellite server FQDN"
          },
          {
            "name": "foreman_virt_who_configure_config[debug]",
            "type": "boolean",
            "in": "formData",
            "description": "Enable debugging output"
          },
          {
            "name": "foreman_virt_who_configure_config[proxy]",
            "type": "string",
            "in": "formData",
            "description": "HTTP Proxy that should be used for communication between the server on which virt-who is running and the hypervisors and virtualization managers."
          },
          {
            "name": "foreman_virt_who_configure_config[no_proxy]",
            "type": "string",
            "in": "formData",
            "description": "Ignore Proxy. A comma-separated list of hostnames or domains or ip addresses to ignore Capsule settings for. Optionally this may be set to * to bypass proxy settings for all hostnames domains or ip addresses."
          },
          {
            "name": "foreman_virt_who_configure_config[organization_id]",
            "type": "number",
            "in": "formData",
            "description": "Organization of the virt-who configuration"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "configs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_configs_id",
        "summary": "Delete a virt-who configuration",
        "parameters": [
          {
            "name": "id",
            "type": "number",
            "in": "path",
            "required": true,
            "description": "Configuration numeric identifier"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/configs/{id}/deploy_script": {
      "get": {
        "tags": [
          "configs"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_configs_id_deploy_script",
        "summary": "Renders a deploy script for the specified virt-who configuration",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/templates/import": {
      "post": {
        "tags": [
          "template"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_templates_import",
        "summary": "Initiate Import",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "prefix",
            "type": "string",
            "in": "formData",
            "description": "The string all imported templates should begin with."
          },
          {
            "name": "associate",
            "type": "string",
            "enum": [
              "always",
              "new",
              "never"
            ],
            "in": "formData",
            "description": "Associate to OS's, Locations & Organizations. Options are: always, new or never."
          },
          {
            "name": "force",
            "type": "boolean",
            "in": "formData",
            "description": "Update templates that are locked"
          },
          {
            "name": "lock",
            "type": "boolean",
            "in": "formData",
            "description": "Lock imported templates"
          },
          {
            "name": "verbose",
            "type": "boolean",
            "in": "formData",
            "description": "Show template diff in response"
          },
          {
            "name": "branch",
            "type": "string",
            "in": "formData",
            "description": "Branch in Git repo."
          },
          {
            "name": "repo",
            "type": "string",
            "in": "formData",
            "description": "Override the default repo from settings."
          },
          {
            "name": "filter",
            "type": "string",
            "in": "formData",
            "description": "Export templates with names matching this regex (case-insensitive; snippets are not filtered)."
          },
          {
            "name": "negate",
            "type": "boolean",
            "in": "formData",
            "description": "Negate the prefix (for purging)."
          },
          {
            "name": "dirname",
            "type": "string",
            "in": "formData",
            "description": "The directory within Git repo containing the templates"
          },
          {
            "name": "location_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "organization_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/templates/export": {
      "post": {
        "tags": [
          "template"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_templates_export",
        "summary": "Initiate Export",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "metadata_export_mode",
            "type": "string",
            "enum": [
              "refresh",
              "keep",
              "remove"
            ],
            "in": "formData",
            "description": "Specify how to handle metadata"
          },
          {
            "name": "branch",
            "type": "string",
            "in": "formData",
            "description": "Branch in Git repo."
          },
          {
            "name": "repo",
            "type": "string",
            "in": "formData",
            "description": "Override the default repo from settings."
          },
          {
            "name": "filter",
            "type": "string",
            "in": "formData",
            "description": "Export templates with names matching this regex (case-insensitive; snippets are not filtered)."
          },
          {
            "name": "negate",
            "type": "boolean",
            "in": "formData",
            "description": "Negate the prefix (for purging)."
          },
          {
            "name": "dirname",
            "type": "string",
            "in": "formData",
            "description": "The directory within Git repo containing the templates"
          },
          {
            "name": "location_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "organization_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/discovered_hosts": {
      "get": {
        "tags": [
          "discovered_hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_discovered_hosts",
        "summary": "List all discovered hosts",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "sort results"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "discovered_hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_discovered_hosts",
        "summary": "Create a discovered host for testing (use /facts to create new hosts)",
        "parameters": [
          {
            "name": "discovered_host[mac]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "discovered_host[ip]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "discovered_host[name]",
            "type": "string",
            "in": "formData",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "discovered_host[pxe_loader]",
            "type": "string",
            "enum": [
              "None",
              "PXELinux BIOS",
              "PXELinux UEFI",
              "Grub UEFI",
              "Grub2 BIOS",
              "Grub2 ELF",
              "Grub2 UEFI",
              "Grub2 UEFI SecureBoot",
              "iPXE Embedded",
              "iPXE Chain BIOS",
              "iPXE Chain UEFI"
            ],
            "in": "formData",
            "description": "DHCP filename option (Grub2 or PXELinux by default)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/discovered_hosts/{id}": {
      "get": {
        "tags": [
          "discovered_hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_discovered_hosts_id",
        "summary": "Show a discovered host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "discovered_hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_discovered_hosts_id",
        "summary": "Provision a discovered host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "discovered_host[name]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "discovered_host[environment_id]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "discovered_host[ip]",
            "type": "string",
            "in": "formData",
            "description": "not required if using a subnet with DHCP Capsule"
          },
          {
            "name": "discovered_host[mac]",
            "type": "string",
            "in": "formData",
            "description": "not required if it's a virtual machine"
          },
          {
            "name": "discovered_host[architecture_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "discovered_host[domain_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "discovered_host[puppet_proxy_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "discovered_host[puppet_class_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "discovered_host[operatingsystem_id]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "discovered_host[medium_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "discovered_host[ptable_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "discovered_host[subnet_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "discovered_host[sp_subnet_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "discovered_host[model_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "discovered_host[hostgroup_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "discovered_host[owner_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "discovered_host[puppet_ca_proxy_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "discovered_host[image_id]",
            "type": "number",
            "in": "formData"
          },
          {
            "name": "discovered_host[host_parameters_attributes]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData"
          },
          {
            "name": "discovered_host[build]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "discovered_host[enabled]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "discovered_host[provision_method]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "discovered_host[managed]",
            "type": "boolean",
            "in": "formData"
          },
          {
            "name": "discovered_host[progress_report_id]",
            "type": "string",
            "in": "formData",
            "description": "UUID to track orchestration tasks status, GET /api/orchestration/:UUID/tasks"
          },
          {
            "name": "discovered_host[capabilities]",
            "type": "string",
            "in": "formData"
          },
          {
            "name": "discovered_host[root_pass]",
            "type": "string",
            "in": "formData",
            "description": "required if value is not inherited from host group or default password in settings"
          },
          {
            "name": "discovered_host[pxe_loader]",
            "type": "string",
            "enum": [
              "None",
              "PXELinux BIOS",
              "PXELinux UEFI",
              "Grub UEFI",
              "Grub2 BIOS",
              "Grub2 ELF",
              "Grub2 UEFI",
              "Grub2 UEFI SecureBoot",
              "iPXE Embedded",
              "iPXE Chain BIOS",
              "iPXE Chain UEFI"
            ],
            "in": "formData",
            "description": "DHCP filename option (Grub2 or PXELinux by default)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "discovered_hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_discovered_hosts_id",
        "summary": "Delete a discovered host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/discovered_hosts/facts": {
      "post": {
        "tags": [
          "discovered_hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_discovered_hosts_facts",
        "summary": "Upload facts for a host, creating the host if required",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/discovered_hosts/{id}/auto_provision": {
      "post": {
        "tags": [
          "discovered_hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_discovered_hosts_id_auto_provision",
        "summary": "Execute rules against a discovered host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/discovered_hosts/auto_provision_all": {
      "post": {
        "tags": [
          "discovered_hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_discovered_hosts_auto_provision_all",
        "summary": "Execute rules against all currently discovered hosts",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/discovered_hosts/{id}/refresh_facts": {
      "put": {
        "tags": [
          "discovered_hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_discovered_hosts_id_refresh_facts",
        "summary": "Refreshing the facts of a discovered host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/discovered_hosts/{id}/reboot": {
      "put": {
        "tags": [
          "discovered_hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_discovered_hosts_id_reboot",
        "summary": "Rebooting a discovered host",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/discovered_hosts/reboot_all": {
      "put": {
        "tags": [
          "discovered_hosts"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_discovered_hosts_reboot_all",
        "summary": "Rebooting all discovered hosts",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/discovery_rules": {
      "get": {
        "tags": [
          "discovery_rules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_discovery_rules",
        "summary": "List all discovery rules",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "sort results"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "discovery_rules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_discovery_rules",
        "summary": "Create a discovery rule",
        "parameters": [
          {
            "name": "discovery_rule[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "organization ID for provisioned hosts"
          },
          {
            "name": "discovery_rule[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "required": true,
            "description": "location ID for provisioned hosts"
          },
          {
            "name": "discovery_rule[hostgroup_id]",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "the hostgroup that is used to auto provision a host"
          },
          {
            "name": "discovery_rule[search]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "query to match discovered hosts for the particular rule"
          },
          {
            "name": "discovery_rule[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "represents rule name shown to the users"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "discovery_rule[hostname]",
            "type": "string",
            "in": "formData",
            "description": "defines a pattern to assign human-readable hostnames to the matching hosts"
          },
          {
            "name": "discovery_rule[max_count]",
            "type": "number",
            "in": "formData",
            "description": "enables to limit maximum amount of provisioned hosts per rule"
          },
          {
            "name": "discovery_rule[priority]",
            "type": "number",
            "in": "formData",
            "description": "puts the rules in order, low numbers go first. Must be greater then zero"
          },
          {
            "name": "discovery_rule[enabled]",
            "type": "boolean",
            "in": "formData",
            "description": "flag is used for temporary shutdown of rules"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/discovery_rules/{id}": {
      "get": {
        "tags": [
          "discovery_rules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_discovery_rules_id",
        "summary": "Show a discovery rule",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "discovery_rules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_discovery_rules_id",
        "summary": "Update a rule",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "discovery_rule[name]",
            "type": "string",
            "in": "formData",
            "description": "represents rule name shown to the users"
          },
          {
            "name": "discovery_rule[search]",
            "type": "string",
            "in": "formData",
            "description": "query to match discovered hosts for the particular rule"
          },
          {
            "name": "discovery_rule[hostgroup_id]",
            "type": "number",
            "in": "formData",
            "description": "the hostgroup that is used to auto provision a host"
          },
          {
            "name": "discovery_rule[hostname]",
            "type": "string",
            "in": "formData",
            "description": "defines a pattern to assign human-readable hostnames to the matching hosts"
          },
          {
            "name": "discovery_rule[max_count]",
            "type": "number",
            "in": "formData",
            "description": "enables to limit maximum amount of provisioned hosts per rule"
          },
          {
            "name": "discovery_rule[priority]",
            "type": "number",
            "in": "formData",
            "description": "puts the rules in order, low numbers go first. Must be greater then zero"
          },
          {
            "name": "discovery_rule[enabled]",
            "type": "boolean",
            "in": "formData",
            "description": "flag is used for temporary shutdown of rules"
          },
          {
            "name": "discovery_rule[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "location ID for provisioned hosts"
          },
          {
            "name": "discovery_rule[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "organization ID for provisioned hosts"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "discovery_rules"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_discovery_rules_id",
        "summary": "Delete a rule",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/generic": {
      "get": {
        "tags": [
          "disks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_generic",
        "summary": "Download generic image",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/hosts/{host_id}": {
      "get": {
        "tags": [
          "disks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_hosts_host_id",
        "summary": "Download host image",
        "parameters": [
          {
            "name": "host_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "full",
            "type": "boolean",
            "in": "query",
            "description": "True for full, false for basic reusable image"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/subnets/{subnet_id}": {
      "get": {
        "tags": [
          "subnet_disks"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_subnets_subnet_id",
        "summary": "Download subnet generic image",
        "parameters": [
          {
            "name": "subnet_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/arf_reports": {
      "get": {
        "tags": [
          "arf_reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_arf_reports",
        "summary": "List ARF reports",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/arf_reports/{id}": {
      "get": {
        "tags": [
          "arf_reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_arf_reports_id",
        "summary": "Show an ARF report",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "arf_reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_compliance_arf_reports_id",
        "summary": "Delete an ARF Report",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/arf/{cname}/{policy_id}/{date}": {
      "post": {
        "tags": [
          "arf_reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_compliance_arf_cname_policy_id_date",
        "summary": "Upload an ARF report",
        "parameters": [
          {
            "name": "date",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "policy_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "cname",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/arf_reports/{id}/download": {
      "get": {
        "tags": [
          "arf_reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_arf_reports_id_download",
        "summary": "Download bzipped ARF report",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/arf_reports/{id}/download_html": {
      "get": {
        "tags": [
          "arf_reports"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_arf_reports_id_download_html",
        "summary": "Download ARF report in HTML",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/policies": {
      "get": {
        "tags": [
          "policies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_policies",
        "summary": "List Policies",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "policies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_compliance_policies",
        "summary": "Create a Policy",
        "parameters": [
          {
            "name": "policy[deploy_by]",
            "type": "string",
            "enum": [
              "puppet",
              "ansible",
              "manual"
            ],
            "in": "formData",
            "required": true,
            "description": "How the policy should be deployed"
          },
          {
            "name": "policy[scap_content_profile_id]",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Policy SCAP content profile ID"
          },
          {
            "name": "policy[scap_content_id]",
            "type": "number",
            "in": "formData",
            "required": true,
            "description": "Policy SCAP content ID"
          },
          {
            "name": "policy[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Policy name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "policy[description]",
            "type": "string",
            "in": "formData",
            "description": "Policy description"
          },
          {
            "name": "policy[period]",
            "type": "string",
            "in": "formData",
            "description": "Policy schedule period (weekly, monthly, custom)"
          },
          {
            "name": "policy[weekday]",
            "type": "string",
            "in": "formData",
            "description": "Policy schedule weekday (only if period == \"weekly\")"
          },
          {
            "name": "policy[day_of_month]",
            "type": "number",
            "in": "formData",
            "description": "Policy schedule day of month (only if period == \"monthly\")"
          },
          {
            "name": "policy[cron_line]",
            "type": "string",
            "in": "formData",
            "description": "Policy schedule cron line (only if period == \"custom\")"
          },
          {
            "name": "policy[hostgroup_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Apply policy to host groups"
          },
          {
            "name": "policy[host_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Apply policy to hosts"
          },
          {
            "name": "policy[tailoring_file_id]",
            "type": "number",
            "in": "formData",
            "description": "Tailoring file ID"
          },
          {
            "name": "policy[tailoring_file_profile_id]",
            "type": "number",
            "in": "formData",
            "description": "Tailoring file profile ID"
          },
          {
            "name": "policy[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "policy[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/policies/{id}": {
      "get": {
        "tags": [
          "policies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_policies_id",
        "summary": "Show a Policy",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "policies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compliance_policies_id",
        "summary": "Update a Policy",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "policy[name]",
            "type": "string",
            "in": "formData",
            "description": "Policy name"
          },
          {
            "name": "policy[description]",
            "type": "string",
            "in": "formData",
            "description": "Policy description"
          },
          {
            "name": "policy[scap_content_id]",
            "type": "number",
            "in": "formData",
            "description": "Policy SCAP content ID"
          },
          {
            "name": "policy[scap_content_profile_id]",
            "type": "number",
            "in": "formData",
            "description": "Policy SCAP content profile ID"
          },
          {
            "name": "policy[period]",
            "type": "string",
            "in": "formData",
            "description": "Policy schedule period (weekly, monthly, custom)"
          },
          {
            "name": "policy[weekday]",
            "type": "string",
            "in": "formData",
            "description": "Policy schedule weekday (only if period == \"weekly\")"
          },
          {
            "name": "policy[day_of_month]",
            "type": "number",
            "in": "formData",
            "description": "Policy schedule day of month (only if period == \"monthly\")"
          },
          {
            "name": "policy[cron_line]",
            "type": "string",
            "in": "formData",
            "description": "Policy schedule cron line (only if period == \"custom\")"
          },
          {
            "name": "policy[hostgroup_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Apply policy to host groups"
          },
          {
            "name": "policy[host_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "Apply policy to hosts"
          },
          {
            "name": "policy[tailoring_file_id]",
            "type": "number",
            "in": "formData",
            "description": "Tailoring file ID"
          },
          {
            "name": "policy[tailoring_file_profile_id]",
            "type": "number",
            "in": "formData",
            "description": "Tailoring file profile ID"
          },
          {
            "name": "policy[deploy_by]",
            "type": "string",
            "enum": [
              "puppet",
              "ansible",
              "manual"
            ],
            "in": "formData",
            "description": "How the policy should be deployed"
          },
          {
            "name": "policy[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "policy[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "policies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_compliance_policies_id",
        "summary": "Delete a Policy",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/policies/{id}/content": {
      "get": {
        "tags": [
          "policies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_policies_id_content",
        "summary": "Show a policy's SCAP content",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/policies/{id}/tailoring": {
      "get": {
        "tags": [
          "policies"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_policies_id_tailoring",
        "summary": "Show a policy's Tailoring file",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/scap_contents": {
      "get": {
        "tags": [
          "scap_contents"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_scap_contents",
        "summary": "List SCAP contents",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "scap_contents"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_compliance_scap_contents",
        "summary": "Create SCAP content",
        "parameters": [
          {
            "name": "scap_content[scap_file]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "XML containing SCAP content"
          },
          {
            "name": "scap_content[title]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "SCAP content name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "scap_content[original_filename]",
            "type": "string",
            "in": "formData",
            "description": "Original file name of the XML file"
          },
          {
            "name": "scap_content[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "scap_content[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/scap_contents/{id}/xml": {
      "get": {
        "tags": [
          "scap_contents"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_scap_contents_id_xml",
        "summary": "Download an SCAP content as XML",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/scap_contents/{id}": {
      "get": {
        "tags": [
          "scap_contents"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_scap_contents_id",
        "summary": "Show an SCAP content",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "scap_contents"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compliance_scap_contents_id",
        "summary": "Update an SCAP content",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "scap_content[title]",
            "type": "string",
            "in": "formData",
            "description": "SCAP content name"
          },
          {
            "name": "scap_content[scap_file]",
            "type": "string",
            "in": "formData",
            "description": "XML containing SCAP content"
          },
          {
            "name": "scap_content[original_filename]",
            "type": "string",
            "in": "formData",
            "description": "Original file name of the XML file"
          },
          {
            "name": "scap_content[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "scap_content[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "scap_contents"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_compliance_scap_contents_id",
        "summary": "Deletes an SCAP content",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/tailoring_files": {
      "get": {
        "tags": [
          "tailoring_files"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_tailoring_files",
        "summary": "List Tailoring files",
        "parameters": [
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          },
          {
            "name": "search",
            "type": "string",
            "in": "query",
            "description": "filter results"
          },
          {
            "name": "order",
            "type": "string",
            "in": "query",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "type": "string",
            "in": "query",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "type": "string",
            "in": "query",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "post": {
        "tags": [
          "tailoring_files"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "post_compliance_tailoring_files",
        "summary": "Create a Tailoring file",
        "parameters": [
          {
            "name": "tailoring_file[scap_file]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "XML containing tailoring file"
          },
          {
            "name": "tailoring_file[name]",
            "type": "string",
            "in": "formData",
            "required": true,
            "description": "Tailoring file name"
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "tailoring_file[original_filename]",
            "type": "string",
            "in": "formData",
            "description": "Original file name of the XML file"
          },
          {
            "name": "tailoring_file[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "tailoring_file[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/tailoring_files/{id}/xml": {
      "get": {
        "tags": [
          "tailoring_files"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_tailoring_files_id_xml",
        "summary": "Download a Tailoring file as XML",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    },
    "/compliance/tailoring_files/{id}": {
      "get": {
        "tags": [
          "tailoring_files"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "get_compliance_tailoring_files_id",
        "summary": "Show a Tailoring file",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "query",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "query",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "put": {
        "tags": [
          "tailoring_files"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "put_compliance_tailoring_files_id",
        "summary": "Update a Tailoring file",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          },
          {
            "name": "tailoring_file[name]",
            "type": "string",
            "in": "formData",
            "description": "Tailoring file name"
          },
          {
            "name": "tailoring_file[scap_file]",
            "type": "string",
            "in": "formData",
            "description": "XML containing tailoring file"
          },
          {
            "name": "tailoring_file[original_filename]",
            "type": "string",
            "in": "formData",
            "description": "Original file name of the XML file"
          },
          {
            "name": "tailoring_file[location_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE locations with given ids"
          },
          {
            "name": "tailoring_file[organization_ids]",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "formData",
            "description": "REPLACE organizations with given ids."
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      },
      "delete": {
        "tags": [
          "tailoring_files"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "operationId": "delete_compliance_tailoring_files_id",
        "summary": "Deletes a Tailoring file",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "location_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by locations"
          },
          {
            "name": "organization_id",
            "type": "number",
            "in": "formData",
            "description": "Scope by organizations"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "description": ""
      }
    }
  },
  "definitions": {
  },
  "tags": [
    {
      "name": "host_subscriptions",
      "description": ""
    },
    {
      "name": "domains",
      "description": "\n<p>Satellite considers a domain and a DNS zone as the same thing. That is, if\nyou are planning to manage a site where all the machines are of the form\n<em>hostname</em>.<strong>somewhere.com</strong> then the domain is\n<strong>somewhere.com</strong>. This allows Satellite to associate a puppet\nvariable with a domain/site and automatically append this variable to all\nexternal node requests made by machines at that site.</p>\n"
    },
    {
      "name": "operatingsystems",
      "description": ""
    },
    {
      "name": "organizations",
      "description": ""
    },
    {
      "name": "parameters",
      "description": "\n<p>These API calls are related to <strong>nested parameters for a host,\ndomain, subnet, host group, operating system</strong>. If you are looking\nfor &lt;a href=“common_parameters.html”&gt;global parameters&lt;/a&gt;, go\nto &lt;a href=“common_parameters.html”&gt;this link&lt;/a&gt;.</p>\n"
    },
    {
      "name": "recurring_logics",
      "description": ""
    },
    {
      "name": "foreman_tasks",
      "description": ""
    },
    {
      "name": "ansible_override_values",
      "description": ""
    },
    {
      "name": "ansible_roles",
      "description": ""
    },
    {
      "name": "ansible_variables",
      "description": ""
    },
    {
      "name": "repository_sets",
      "description": ""
    },
    {
      "name": "subscriptions",
      "description": "\n<p>Subscriptions management.</p>\n"
    },
    {
      "name": "capsule_content",
      "description": ""
    },
    {
      "name": "capsules",
      "description": ""
    },
    {
      "name": "content_credentials",
      "description": "\n<p># Description</p>\n\n<p>Content Credentials are used to store credentials like GPG Keys and\nCertificates for the authentication to Products / Repositories.</p>\n"
    },
    {
      "name": "products",
      "description": ""
    },
    {
      "name": "content_views",
      "description": ""
    },
    {
      "name": "debs",
      "description": ""
    },
    {
      "name": "lifecycle_environments",
      "description": "\n<p># Description</p>\n\n<p>An environment is a basic organization structure that groups hosts,\nproducts, repositories, etc.  Every host belongs to one environment and\nit&#39;s isolated inside so that it can see only content that is in its\nenvironment.</p>\n\n<p>## Chains</p>\n\n<p>Environments are ordered into chains and their content (products,\nrepositories, tempaltes, packages) can be moved to an environment only from\nits prior environment. You can have for example chain like:</p>\n\n<pre>Library -&gt; Development -&gt; Testing -&gt; Production</pre>\n\n<p>Each change in an environment is done through a changeset in an action\ncalled promotion.</p>\n\n<p>## Library</p>\n\n<p>Library is a special environment that has no ascendant: All the content\nstarts in this environment. More chains can start from the library\nenvironment but no further branching of a chain is enabled.</p>\n"
    },
    {
      "name": "file_units",
      "description": ""
    },
    {
      "name": "gpg_keys",
      "description": "\n<p># Description Documents the calls for the list, read, create, update and\ndelete operations for GPG keys</p>\n"
    },
    {
      "name": "host_errata",
      "description": ""
    },
    {
      "name": "host_module_streams",
      "description": ""
    },
    {
      "name": "host_packages",
      "description": ""
    },
    {
      "name": "host_tracer",
      "description": ""
    },
    {
      "name": "hosts_bulk_actions",
      "description": ""
    },
    {
      "name": "ping",
      "description": ""
    },
    {
      "name": "upstream_subscriptions",
      "description": "\n<p>Red Hat subscriptions management platform.</p>\n"
    },
    {
      "name": "configs",
      "description": ""
    },
    {
      "name": "discovered_hosts",
      "description": ""
    },
    {
      "name": "discovery_rules",
      "description": ""
    },
    {
      "name": "disks",
      "description": ""
    },
    {
      "name": "subnet_disks",
      "description": ""
    }
  ],
  "host": "localhost:3000"
}